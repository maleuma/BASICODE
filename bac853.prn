SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   1
BAC853  Z80

    1         0001      KC3	EQU	1	; Rechnertyp = KC85/3
    2         0000      DEV	EQU	0	; keine Device-Umschaltung beim KC85/3 moeglich
    3                   INCLUDE	BAC85.Z80
    1                   ;---------------------------------------------------------------------
    2                   ;	BASICODE 3C Version 1.5 fuer Kleincomputer KC85/4
    3                   ;	(C) Andreas und Uwe Zierott	Stand: 31.01.1990
    4                   ;	Farbe von Rudolf Wenzel		Stand: 08.12.1992
    5                   ;
    6                   ; Reassemblerlisting erzeugt mit Reassembler QMR unter CAOS
    7                   ; BAC854C.ASM		Adressen: 0401 bis 256A
    8                   ;
    9                   ; M. Leubner		03.04.2023 bis 19.04.2023
   10                   ;---------------------------------------------------------------------
   11                   ;
   12                   ; Modifikationen:
   13                   ; 11.11.2023:
   14                   ;	- GOSUB 280 (Aus- bzw. Einschalten der STOP/BRK-Taste FR = 0 bzw. 1)
   15                   ;	  deaktiviert, dadurch keine Kopie der KTAB mehr erforderlich
   16                   ;	- Copyright-Texte angepasst, Versionsnummer 1.5a eingetragen
   17                   ;	- Arbeitszellen so verlagert, dass 0000-000Fh frei bleibt fuer USB
   18                   ;	  (00AE-00E0h ist bereits unberuehrt weil KTAB nicht mehr kopiert wird)
   19                   ;	- einige Variablen umbenannt
   20                   ;	- unnuetze NOP-Befehle entfernt
   21                   ;	- GOSUB 220 kann jetzt auch aus Bild 1 Zeichen lesen
   22                   ;	- Codeoptimierung (CALL x, RET ersetzt durch JP x)
   23                   ;	- Codeoptimierung, indem alle gepatchten Spruenge der Farberweiterung
   24                   ;	  direkt in den Originalcode verschoben wurden (vermutlich hat R. Wenzel
   25                   ;	  auch keinen Quelltext gehabt und das Programm nur zum Teil uebersetzt)
   26                   ;	- 80 freie Bytes zwischen Grundprogramm und Farberweiterung geloescht
   27                   ;	Druckertreiber:
   28                   ;	- Modulsuche vorwaerts ab Steckplatz 7 (vorher rueckwaerts von 0 bis 1)
   29                   ;	- eingeschaltetes M003 wird jetzt auch im Steuerbytespeicher eingetragen
   30                   ;
   31                   ;	Version 1.5a veroeffentlicht
   32                   ;
   33                   ; 12.11.2023:
   34                   ;	- Idee1: Statt KTAB das UP KBDS ueber die SUTAB modifizieren.
   35                   ;	  Funktioniert aber nicht, da KBDS innerhalb von BASPV direkt benutzt
   36                   ;	- Idee2: KTAB auf Adresse E0-15Fh kopiert und GOSUB 280 wieder aktiviert
   37                   ;	  Funktioniert auch nicht richtig, da ubasex des M052 die Adressen
   38                   ;	  von 00BE bis 00FFh belegt (Systemabsturz bei CAOS 4.2)
   39                   ; 13.11.2023:
   40                   ;	- JP IRMOFF wieder ersetz durch CALL IRMOFF, RET (sonst Absturz)
   41                   ;	- Kaltstart setzt nun Nullbytes fuer Programmanfang korrekt
   42                   ; 16.11.2023:
   43                   ;	- Standardfarbe geaendert von Tuerkis/rot auf gelb/blau
   44         0031      DEFCOL	EQU	31H		; gelb auf blau (Original 2AH tuerkis auf rot)
   45                   ;	- Farbe bei Programmstart: weiss/schwarz
   46                   ;	- wenn CC() nicht definiert ist -> keine Aenderung der Farben
   47                   ; 17.11.2023:
   48                   ;	- Unterprogramm U1F3B aufgeloest und direkt eingebaut (nur 1x verwendet)
   49                   ;	- Farbwert bei Textanzeige im Grafikmode direkt aus CAOS-Arbeitszelle
   50                   ;	  lesen, statt Programmcode bei U1F25 zu modifizieren
   51                   ;	- Grafikfarbe bei Initialisierung nicht voreinstellen, wird vom Titel-
   52                   ;	  bild (Schallplatte) ohnehin ueberschrieben
   53                   ; 19.11.2023:
   54                   ;	- GOSUB 620, GOSUB 630 und GOSUB 650 Sprung entfernt (Patch?)
   55                   ;	- Grafikfarbe in FARB speichern und nicht mehr Programmcode modifizieren
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   2
BAC85   Z80

   56                   ;	- Code fuer Punkt/Linie zusammengefasst, Aufruf ueber PV3 + Register E
   57                   ;
   58                   ;	Version 1.5b veroeffentlicht
   59                   ;
   60                   ; 21.11.2023:
   61                   ;	- Version fuer KC85/3 in Vorbereitung nach BAC853C.SSS (Version 1.6)
   62                   ;	  * schnelle CLS-Routine
   63                   ;	  * VRAM ist immer B200H
   64                   ;	  * Punkt setzen/loeschen mit PUSE/PUDE
   65                   ; 18.12.2023:
   66                   ;	- Stack in 0B7CBH eintragen fuer Kompatibilitaet zu CAOS 3.4 und OS/pi
   67                   ;	- Zeichenzaehler A' retten beim Konvertieren BASIC -> ASCII fuer
   68                   ;	  Kompatibilitaet zu OS/pi (IRMON/OFF veraendert A')
   69                   ;	- Vortonlaenge beim KC-Format generell auf 400H gesetzt
   70                   ;	- IRM-Adresse fuer letzte Zeile links/unten rechnerspezifisch
   71                   ;	- Inversdarstellung KC85/3 fuer GOSUB 150 implementiert
   72                   ;	- Linien-Routine fuer KC85/3 implementiert
   73                   ;	- Test auf "schwaches Kassetteninterface" wieder eingebaut
   74                   ;	  (war nur noch in KC85/3-Version drin, Text aber in beiden Versionen)
   75                   ;	- Zeichen malen bei U09DD fuer KC85/3 implementiert
   76                   ; 20.12.2023:
   77                   ;	- Text im Grafikmodus (GOSUB 650) implementiert fuer KC85/3
   78                   ;	  Test mit "Tuerme von Hanoi": OK
   79                   ;	- FLOAD-Menuewort wird jetzt bei Initialisierung mit geloescht
   80                   ; 22.12.2023:
   81                   ;	- CN in Grafikfarbe einbauen bei UP Punkt/Linie am KC85/3
   82                   ; 23.12.2023:
   83                   ;	- GOSUB 150: Farbe aus CC(0/1) wird nicht mehr uebernommen
   84                   ;	- GOSUB 650: Farbebene nur noch schreiben, wenn Pixelebene Inhalt hat
   85                   ; 26.12.2023:
   86                   ;	- HEX-Ausgabe fuer Blocknummernanzeige optimiert
   87                   ;	- Anzeige "Speicher voll" verschoben und damit Sprungbefehl eingespart
   88                   ;	- U1671 und U17D7 verschoben und damit je einen Sprungbefehl eingespart
   89                   ;	- U1AAE verschoben, ein Sprungbefehl eingespart, 2x JP in JR verwandelt
   90                   ;	- U09AC (SCF,RET) an andere Stelle gelegt und 2 Byte gespart
   91                   ;
   92                   ;	Version 1.5c veroeffentlicht
   93                   ;
   94                   ;	- Dateiname wird bei ISRI und ISRO nicht in HL uebergeben
   95                   ;	- Die Datenfiles enthalten als erstes 3x UUU, dann 8 Zeichen fuer den
   96                   ;	  Dateinamen und noch ein 00h. Erst danach beginnen die Nutzdaten.
   97                   ;	  Das ist fuer USB/DISK nicht sinnvoll und waere bei Nutzung von
   98                   ;	  MBIN/MBOUT nicht der Fall. Besser also gleich auf MBIN/MBOUT umstellen
   99                   ;	  dann waere eventuell auch BASEX nutzbar.
  100                   ; 27.12.2023:
  101                   ;	- Beim Schreiben auf Kassette landet man im CAOS beim PRINT nach CLOSE
  102                   ;	  Ursache ist der Aufruf von CSRO ohne vorheriges ISRO.
  103                   ;	  (CSRO setzt OUTAB und WEND auf die gespeicherten Werte von ISRO)
  104                   ;	  Das Problem tritt nicht auf, wenn zuvor mit LOAD/CLOAD Daten von
  105                   ;	  Kassette geladen wurden - wie es frueher noetig war.
  106                   ;	  -> CAOS 4.9 initialisiert nun zur Sicherheit ZOTAB und ZWEND
  107                   ; 28.12.2023:
  108                   ;	- U09B7 (untere Bildschirmzeile nach U0000 kopieren) direkt eingebaut
  109                   ;	- Dateiname mit "UUU12345678" vorbereiten fuer MBIN/MBOUT
  110                   ; Umstellung von ISRI/MBI/CSRI auf MBIN:
  111                   ;	- Oeffnen: HL=Dateiname, D=08H
  112                   ;	  MBIN uebergibt beim Oeffnen bereits das erste Datenbyte. Das wird hier
  113                   ;	  in U0047 gespeichert, und beim folgenden Lesen dem Puffer entnommen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   3
BAC85   Z80

  114                   ;	- Lesen: D=0		PA: A=Datenbyte		CY=1 bei Fehler
  115                   ;	- Schliessen: D=40H
  116                   ; Umstellung von ISRO/MBO/CSRO auf MBOUT:
  117                   ;	- Oeffnen: HL=Dateiname, D=08H
  118                   ;	  MBOUT erwartet beim Oeffnen bereits das erste Datenbyte. Hier kann
  119                   ;	  also das Oeffnen vorerst nur gemerkt werden. Beim nachfolgenden
  120                   ;	  ersten Schreiben wird dann 1x D=8 mitgegeben.
  121                   ;	- Schreiben: D=0, A=Datenbyte			CY=1 bei Fehler
  122                   ;	- Schliessen: D=40H
  123                   ; 29.12.2023:
  124                   ;	- Dateiname des Datenfiles auf *.DDD (statt *.UUU geaendert)
  125                   ;	- BASEX/UBASEX setzt bei UMBOUT Bit 0(IX+8), um das Verify von CAOS
  126                   ;	  abzuwaehlen -> Nach Close das Bit wieder loeschen
  127                   ;	- TAPE: CAOS 3.1 macht 8 Sekunden Vorton, CAOS 4.9 ca. 4 Sekunden
  128                   ;	  -> laesst sich nicht vermeiden
  129                   ;	- CAOS 3.1: Blocknummernunterdrueckung funktioniert nicht bei Ein/Ausgabe
  130                   ;	  ueber USB (in M052-Software zu korrigieren)
  131                   ;	  ueber TAPE - nicht zu aendern, weil direkt in CAOS programmiert
  132                   ;	- CAOS 3.1 mit USB-Treiber schreibt nur 128 Byte, CAOS 4.9 256 Byte
  133                   ;	  Der Unterschied liegt am USB-Treiber (M052-Software/CAOS-Treiber)
  134                   ;	  Bei TAPE werden mindestens zwei Bloecke benoetigt, der Vorblock mit
  135                   ;	  dem Dateinamen und der Endeblock.
  136                   ; 30.12.2023:
  137                   ;	- zwei sinnlose Befehle nach U1AB5 auskommentiert
  138                   ;	- Die eigene Routine U04C3 (Spung zu IOERR) war zwar enthalten, aber
  139                   ;	  sinnlos, da diese nur von MBIN/MBOUT verwendet wurde, BASICODE 1.5
  140                   ;	  aber stattdessen MBI/MBO verwendet hat. F|er die neue Version mit
  141                   ;	  MBIN/MBOUT aber durchaus erforderlich.
  142                   ;	- Setzen von U04C3 als IO-ERROR-Routine verschoben zu WARM1, damit das
  143                   ;	  im Direktmode regeneriert wird
  144                   ;	- Neue Fehlerbehandlungsroutine fuer RUN-Mode, welche bei BASEX/UBASEX
  145                   ;	  nur das CY-Flag gesetzt zurueck gibt und nicht zu IOERR in den BASIC-
  146                   ;	  ROM springt. Getestet mit UBASEX unter CAOS 3.1 und CAOS 4.2
  147                   ; 02.01.2024:
  148                   ;	- kein CLS mehr bei GOTO 20, nur noch bei GOSUB 100 und 600
  149                   ;	- KTAB2 in Programm integriert und GOSUB 280 wieder aktiviert
  150                   ; 03.01.2024:
  151                   ;	- Absturz bei *L unter CAOS 3.4 behoben, dabei die Sonderbehandlung
  152                   ;	  der *-Sonderkommandos ueberarbeitet
  153                   ;	- CLS bei GOTO 20 wieder eingebaut
  154                   ; 04.01.2024:
  155                   ;	- DEVICE-Umschaltung auswaehlbar gemacht
  156                   ;		KC85/3-Version
  157                   ;		KC85/4-Version ohne DEVICE-Umschaltung
  158                   ;		KC85/5-Version mit DEVICE-Umschaltung
  159                   ;	- Test KTAB-Umschaltung BRK/STOP
  160                   ;
  161                   ;	Version 1.5d veroeffentlicht
  162                   ;
  163                   ;---------------------------------------------------------------------
  297                   .LIST
  298                   ;---------------------------------------------------------------------
  299                   
  300         000A      LF	EQU	0AH
  301         000D      CR	EQU	0DH
  302         001B      ESC	EQU	1BH
  303                   
  304                   ; Portadressen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   4
BAC85   Z80

  305                   
  306         0088      PIOAD	EQU	88H	; System-PIO Datenbyte Port A
  307                   			;	Bit 0 - CAOS ROM-E ein/aus
  308                   			;	Bit 1 - RAM0 ein/aus
  309                   			;	Bit 2 - IRM ein/aus
  310                   			;	Bit 3 - Schreibschutz RAM0
  311                   			;	Bit 4 - K_OUT
  312                   			;	Bit 5 - System-LED
  313                   			;	Bit 6 - Motorschaltspannung
  314                   			;	Bit 7 - USER-ROM ein/aus
  315         0089      PIOBD	EQU	89H	; System-PIO Datenbyte Port B
  316                   			;	Bit 0 - Symmetrie-Flip-Flop Tonausgabe
  317                   			;	Bit 1 \
  318                   			;	Bit 2 - Lautstaerke Tonausgabe
  319                   			;	Bit 3 - 4 Bit (Low-aktiv)
  320                   			;	Bit 4 /
  321                   			;	Bit 5 - RAM8 ein/aus
  322                   			;	Bit 6 - Schreibschutz RAM8
  323                   			;	Bit 7 - Blinken ein/aus
  324         008A      PIOAS	EQU	8AH	; System-PIO Steuerbyte Port A
  325         008C      CTC0	EQU	8CH	; CTC Kanal 0 (Tonhoehe 1)
  326         008D      CTC1	EQU	8DH	; CTC Kanal 1 (Tonhoehe 2, Kassettenausgabe)
  327         008E      CTC2	EQU	8EH	; CTC Kanal 2 (Tondauer)
  328                   
  329                   ;	*********************************
  330                   ;	*  Arbeitszellen von BASICODE	*
  331                   ;	*********************************
  332                   ;
  333                   ; Original:	0000H bis 00CEH bzw. 00CFH mit KTAB-Kopie
  334                   ; => nicht vertraeglich mit M052 USB-Tastatur und DEVICE-Treiber !!!
  335                   ;
  336                   ; neue Belegung:
  337                   ; 0000-000FH	belegt von USB-Software
  338                   ; 0010-0037H	ASCII-Speicher fuer eine Bildschirmzeile
  339                   ; 0038-003AH	RST38-Meldung Systemabsturz
  340                   ; 003BH		FLAGS (nicht verschieben!!!)
  341                   ; 003C-005EH	23 Byte BASICODE-Arbeitszellen
  342                   ; 005F-00ADH	79 Byte frei
  343                   ; 00AE-00E0H	USB-Interruptroutine
  344                   ; 00E1-014FH	111 Byte frei
  345                   ; 00D8-014FH	UBASEX: Zusatzroutinen wie DIENST.KCC (nicht nutzbar!)
  346                   ; 0150-016FH	BASEX/UBASEX: Umschaltroutine CALL*150
  347                   ; 0170-01C3H	84 Byte Stack
  348                   ; 01C4-01FFH	ISR-Tabelle und IX-Arbeitszellen
  349                   ; 0200-02FFH	BASEX/UBASEX und modifizierte SUTAB
  350                   ; 0300-03FFH	WORKRAM von BASIC
  351                   
  352                   ; 11.11.2023 Arbeitszellen erst ab Adresse 0010H und nur bis 005EH
  353                   
  354         0010      U0000	EQU	0010H		; Zwischenspeicher fuer Magnetbandroutinen
  355                   	;   bis 0037H		; 40 Zeichen = eine Bildschirmzeile
  356                   
  357         0038      U0038	EQU	0038H		; JUMP von RST 38
  358         0039      U0039	EQU	0039H		; Adresse von RST 38
  359                   
  360                   ; Adresse FLAGS=003BH nicht verlegen (wird vom Fullscreen-Editor ausgewertet)
  361         003B      FLAGS	EQU	003BH		; Bit0=1 Uebersetzung ASCII -> BASIC
  362                   				; Bit1=1 ASCII-File im Speicher
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   5
BAC85   Z80

  363                   				; Bit3=1 Init bei Kassettenein- und ausgabe
  364                   				; Bit6=1 unerlaubter BASICODE-Befehl
  365                   				; Bit7=1 Regelverstoss
  366                   
  367         003C      XPOS2	EQU	003CH		; X-Position (Linie X-Ende)
  368                   				; auch Zwischenspeicher fuer OUTAB
  369         003E      YPOS2	EQU	003EH		; Y-Position (Linie Y-Ende)
  370         0040      XPOS1	EQU	0040H		; aktuelle Grafikposition (Linie X-Anfang)
  371         0042      YPOS1	EQU	0042H		; aktuelle Grafikposition (Linie Y-Anfang)
  372         0044      CN	EQU	0044H		; "Color Numerisch"	CN=0 zeichnen
  373                   				; (GOSUB 620/630/650)	CN=1 loeschen
  374         0045      U0031	EQU	0045H		; Beginn ASCII-File
  375         0047      U0033	EQU	0047H		; Ende ASCII-File
  376         0049      CPOINT	EQU	0049H		; Zeiger in Kassettenpuffer bei Dateiarbeit
  377         004B      BLNR	EQU	004BH		; erwartete Blocknummer
  378         004C      U003C	EQU	004CH
  379         004D      U003D	EQU	004DH		; Merker fuer Interruptroutine PIO A
  380         004F      U003F	EQU	004FH		; Merker fuer Interruprroutine CTC1 oder CTC2
  381         0051      U0041	EQU	0051H		; Zwischenspeicher fuer UOUT1
  382                   				; Zeilennummer bei Konvertierung BASIC -> ASCII
  383         0053      U0043	EQU	0053H		; Bit0=1 Dateiende (Kassetteneingabe) erkannt
  384         0054      U0044	EQU	0054H		; FFH = Abbruch beim BASICODE Lesen/Schreiben
  385         0055      U0045	EQU	0055H		; Bit gesetzt fuer geoeffnete BASICODE-Kanaele
  386                   				; je ein Bit fuer NF=0 bis NF=7
  387         0056      U0046	EQU	0056H		; verwendet bei BASICODE-Bestand lesen/schreiben
  388         0057      U0047	EQU	0057H		; letztes gelesenes Datenbyte (Kassetteneingabe)
  389         005A      U004A	EQU	005AH		; Zaehlwert fuer BASICODE-Bandeingabe
  390         005C      U004C	EQU	005CH		; IRM-Adresse fuer malen auf unterer Bildschirmzeile
  391         005E      U004E	EQU	005EH		; Merkzelle fuer die Original-KTAB von CAOS
  392         0060      FNAME	EQU	0060H		; 11 Byte Dateiname fuer Kassettenroutinen
  393                   ;	bis	006AH
  394                   ;KTAB2	EQU	004FH		; Kopie der Tastaturtabelle KTAB
  395                   ;	;   bis 00CEH		; 11.11.2023: nicht mehr benutzt
  396                   
  397         01F0      U01F0	EQU	001F0H		; (IX+0) Zeitkonstante Kassettenroutinen
  398         01F2      U01F2	EQU	001F2H		; (IX+2) Blocknummer Kassettenroutinen
  399                   
  400                   ; WORKRAM von BASIC:
  401                   
  402         0340      DUMMY	EQU	0340H		; Anzahl der Dummy-Zeichen: NULL n
  403         034D      AUTOFG	EQU	034DH		; AUTO-Flag (automatische Zeilennummerierung)
  404         0356      STDPTR	EQU	0356H		; RAM-Mindestgroesse (KC85/3=7EFF KC85/4=BEFF)
  405         0358      CULINO	EQU	0358H		; aktuelle Zeilennummer
  406         035D      DATBYT	EQU	035DH		; Kopierschutz, wenn ungleich 0
  407         035F      PSTBEG	EQU	035FH		; Programmstart-Adresse (normal 0401H)
  408         0361      INPBUF	EQU	0361H		; Editierpuffer
  409         03AE      DATYPE	EQU	03AEH		; Datentyp
  410         03D7      SVARPT	EQU	03D7H		; Programmende + 1
  411         03D9      DVARPT	EQU	03D9H		; Adresse Feldvariablen
  412         03DB      FSLPTR	EQU	03DBH		; Erste freie Adresse nach den Variablenlisten
  413         03E5      WRA1	EQU	03E5H		; Arithmetikregister 1
  414                   
  415                   ; Arbeitszellen im IRM:
  416                   
  417         B781      ARGN	EQU	0B781H	; Anzahl Argumente
  418         B782      ARG1	EQU	0B782H	; Argument 1
  419         B784      ARG2	EQU	0B784H	;    "	   2
  420         B786      ARG3	EQU	0B786H	;    "	   3
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   6
BAC85   Z80

  421         B788      ARG4	EQU	0B788H	;    "	   4
  422         B796      NUMNX	EQU	0B796H	; Zeichenanzahl einer erfassten Zahl
  423                   			; hier genutzt als Zwischenspeicher Farbe bei GOSUB 150
  424         B799      HCADR	EQU	0B799H	; Hardcopy-Aufruf
  425         B79C      WINON	EQU	0B79CH	; Fenster-Anfang
  426         B79E      WINLG	EQU	0B79EH	; Fenster-Groesse
  427         B7A0      CURSO	EQU	0B7A0H	; Cursor-Position
  428         B7A3      COLOR	EQU	0B7A3H	; Farbe
  429         B7A6      CCTL0	EQU	0B7A6H	; Zeichentabelle 0 20H...5FH
  430         B7A8      CCTL1	EQU	0B7A8H	;	"	 1 00H...1FH und 60H...7FH
  431         B7B9      OUTAB	EQU	0B7B9H	; Adresse fuer Zeiger auf UP-Nr. bei Ausgabe
  432         B7BB      INTAB	EQU	0B7BBH	; Adresse fuer Zeiger auf UP-Nr. bei Eingabe
  433         B7BD      UOUT1	EQU	0B7BDH	; Sprung zu USER-Ausgabekanal 2 (Druckerausgabe)
  434         B7C6      UIN2	EQU	0B7C6H	; Sprung zu USER-Eingabekanal 3 V.24-duplex
  435         B7C9      IO_ERR	EQU	0B7C9H	; Reaktionsprogramm fuer BASIC I/O-Error bis CAOS 4.7
  436         B7CB      VRAM	EQU	0B7CBH	; VRAM-Adresse des eingestellten Bildes
  437         B7D3      HOR	EQU	0B7D3H	; Grafik Horizontalposition (X-Wert)
  438         B7D5      VERT	EQU	0B7D5H	; Grafik Vertikalposition (Y-Wert)
  439         B7D6      FARB	EQU	0B7D6H	; Grafik Farbe
  440                   		; Bit 0=1	XOR-Funktion
  441                   		; Bit 1=1	Punkt loeschen
  442                   		; Bit 2=1	Farbebene nicht veraendern
  443                   		; Bit 3-7	Vordergrundfarbe + Blinken
  444         B900      FNDEF	EQU	0B900H	; Funktionstastenspeicher (bis B99BH)
  445                   
  446                   ; Adressen aus dem BASIC-ROM:
  447                   
  448         C08C      SECST	EQU	0C08CH	; RESTART BASIC-Interpreter
  449         C33E      OMER	EQU	0C33EH
  450         C3FE      EDITO2	EQU	0C3FEH
  451         C4BB      ZPOIT	EQU	0C4BBH
  452         C5F1      TEXTOE	EQU	0C5F1H
  453         C689      CPREG	EQU	0C689H	; Vergleiche Register DE mit HL
  454         C767      LIST9	EQU	0C767H	; LIST: Stop nach vorgegebener Zeilenanzahl
  455         C791      LCREG	EQU	0C791H
  456         C79A      LIST11	EQU	0C79AH	; Token aufloesen
  457         C8BD      TCHAR	EQU	0C8BDH	; naechstes gueltiges Zeichen holen
  458         C8DF      RESTO	EQU	0C8DFH
  459         C918      STOP	EQU	0C918H
  460         C91B      END0	EQU	0C91BH
  461         C96F      EPRVL3	EQU	0C96FH	; Ausdruck berechnen -> DE
  462         C9AA      CLEAR	EQU	0C9AAH
  463         CB61      CRWDY2	EQU	0CB61H	; Anzeige CR, LF, Dummyzeichen
  464         CF48      DIM7	EQU	0CF48H	; Adresse einer Variablen holen -> DE
  465         D090      FRE	EQU	0D090H
  466         D0B1      FRE3	EQU	0D0B1H
  467         D0C0      POS1	EQU	0D0C0H
  468         D1E1      STROP	EQU	0D1E1H
  469         D46F      ADD5	EQU	0D46FH
  470         D59A      MUL1	EQU	0D59AH
  471         D5F5      DIV1	EQU	0D5F5H
  472         D697      TSGNM	EQU	0D697H
  473         D6AE      SGN1	EQU	0D6AEH
  474         D6BC      ABS	EQU	0D6BCH
  475         D6C0      ABS1	EQU	0D6C0H
  476         D6C8      OPARST	EQU	0D6C8H
  477         D6DD      OPKOP	EQU	0D6DDH	; Wert in Arithmetikregister 1 laden
  478         D6EE      OPLAD	EQU	0D6EEH
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   7
BAC85   Z80

  479         D6F7      OPTRAN	EQU	0D6F7H
  480         D829      NUMBO	EQU	0D829H
  481         D82A      NUMBO1	EQU	0D82AH
  482         D834      NUMKON	EQU	0D834H
  483         D928      EXPO	EQU	0D928H
  484         D9FD      RND	EQU	0D9FDH
  485         DC82      IOERR	EQU	0DC82H
  486         DCB0      CASS01	EQU	0DCB0H	; *.SSS Name holen
  487         DD57      CSAVE0	EQU	0DD57H	; BASIC-Programm abspeichern
  488         DDD5      CO	EQU	0DDD5H
  489                   
  490                   ; CAOS-Vereinbarungen:
  491                   
  492         F003      PV1	EQU	0F003H	; CAOS-UP aufrufen, DB UP-Nummer
  493         0000      CRT	EQU 00H		; Zeichenausgabe auf Bildschirm
  494                   ;MBO	EQU 01H		; Ausgabe Datenblock auf Kassette
  495         0002      UOT1	EQU 02H		; Ausgabe auf Anwenderkanal 1
  496         0004      KBD	EQU 04H		; Tastatureingebe mit Cursoreinblendung
  497                   ;MBI	EQU 05H		; Datenblock von Kassette einlesen
  498         0007      USIN2	EQU 07H		; Eingabe von Anwenderkanal 2
  499                   ;ISRO	EQU 08H		; Ausgabe 1. Block auf Kassette
  500                   ;CSRO	EQU 09H		; Ausgabe letzten Block auf Kassette
  501                   ;ISRI	EQU 0AH		; Einlesen 1. Block von Kassette
  502                   ;CSRI	EQU 0BH		; Abschluss Magnetbandeingabe
  503         000E      KBDZ	EQU 0EH		; Tastenstatusabfrage mit Quittung
  504         0012      LOOP	EQU 12H		; Ruecksprung zu CAOS-Menueschleife
  505         0014      WAIT	EQU 14H		; Warteschleife
  506         0023      OSTR	EQU 23H		; Ausgabe folgender Zeichenkette
  507         0024      OCHR	EQU 24H		; Zeichenausgabe ueber Ausgabetabelle
  508         0030      PUSE	EQU 30H		; Punkt setzen
  509         0034      PADR	EQU 34H		; Berechnen Pixel- und Farbadresse
  510         0037      MBIN	EQU 37H		; Byteweise Eingabe von Kassette
  511         0038      MBOUT	EQU 38H		; Byteweise Ausgabe auf Kassette
  512         003E      LINE	EQU 3EH		; Linie zeichnen
  513         F009      PV3	EQU	0F009H	; CAOS-UP aufrufen, E=UP-Nummer
  514         F015      PV5	EQU	0F015H	; CAOS-UP aufrufen, E=UP-Nummer, IRM ON/OFF
  515         F018      IRMON	EQU	0F018H	; IRM einschalten
  516         F01B      IRMOFF	EQU	0F01BH	; IRM abschalten
  517                   
  518                   ;---------------------------------------------------------------------
  519                   
  520         03FF      	ORG	0401H-2
  521                   ;
  522 03FF  2256        	DW	U256B-0401H	; Dateigroesse BAC854C.SSS
  523                   ;
  524 0401  040B        	DW	U040B		; Zeiger auf naechste Programmzeile
  525 0403  000A        	DW	10		; Zeilennummer 10
  526 0405  9D AE       	DB	9DH,0AEH	; CALL*
  527                   	ASCTXT	U0410		; Kaltstart / Initialisierung BASICODE
   12 0407  34          		DB	(U0410/100H AND 0FH) + 30H
   18 0408  31          		DB	(U0410/10H AND 0FH) + 30H
   24 0409  30          		DB	(U0410 AND 0FH) + 30H
  528 040A  00          	DB	0		; Zeilenende
  529 040B  0000        U040B:	DW	0		; BASIC-Programmende
  530                   ;
  531                   ; Die Warmstart-Adresse wird im Bascoder nicht aufgerufen. Es ist aber im
  532                   ; BASICODE-Buch beschrieben, dass z.B. nach einem RESET mit Eingabe von
  533                   ; CALL*40D:RUN in das Programm zurueck gelangt werden kann. 
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   8
BAC85   Z80

  534                   ; Auf der Funktionstaste Shift+F4 liegt ebenfalls "REBASIC CALL*40D"
  535                   ;
  536 040D  C3 0D0A     U040D:	JP	WARM		; Warmstart BASICODE
  537                   	;
  538 0410  C3 0CE6     U0410:	JP	KALT		; Kaltstart BASICODE
  539                   ;
  540                   ; RST 38H - Systemabsturz melden und zurueck zu CAOS
  541                   ;
  542 0413  21 E000     U0413:	LD	HL,0E000H	; RESET
  543 0416  22 0039     	LD	(U0039),HL	; auf RST 38H eintragen
  544 0419  DB 88       	IN	A,(PIOAD)
  545 041B  E6 9F       	AND	9FH
  546 041D  F6 0D       	OR	0DH
  547 041F  D3 88       	OUT	(PIOAD),A
  548 0421  31 01C4     	LD	SP,01C4H	; CAOS-System-Stack
  549 0424  CD F003     	CALL	PV1
  550 0427  23          	DB	OSTR
  551 0428  0D          	DB	0DH
  552 0429  21 20 53 79 	DB	'! Systemabsturz !'
  553 043A  0D 0A       	DB	CR,LF
  554 043C  00          	DB	0
  555 043D  CD F003     	CALL	PV1
  556 0440  12          	DB	LOOP
  557                   ;
  558                   ; Initialisierung BASICODE (bei Kaltstart, Warmstart))
  559                   ;
  560 0441  21 0010     BCINIT:	LD	HL,U0000	; 20.12.2023: ASCII-Zwischenspeicher loeschen
  561 0444  11 0011     	LD	DE,U0000+1	; damit wird auch ein evtl. vorhandenes
  562 0447  01 0027     	LD	BC,39		; Menuewort von FLOAD geloescht
  563 044A  72          	LD	(HL),D		; 0 eintragen
  564 044B  ED B0       	LDIR
  565 044D  CD F018     	CALL	IRMON
  566                   ; 11.11.2023: keine Kopie der KTAB mehr vornehmen
  567                   ;	LD	L,(IX+14)	; KTAB
  568                   ;	LD	H,(IX+15)	; aktueller Wert
  569                   ;	LD	DE,KTAB2
  570                   ;	LD	(IX+14),E	; KTAB
  571                   ;	LD	(IX+15),D	; Kopie
  572                   ;	LD	BC,128
  573                   ;	LDIR			; KTAB in RAM kopieren
  574                   ;IF KC3
  575                   ;	LD	HL,KTAB2+4DH	; Shift-Stop in KTAB
  576                   ;	LD	(HL),C		; mit 0 belegen (statt 13H)
  577                   ;ENDIF
  578 0450  21 0D56     	LD	HL,U0C39	; modifizierte Eingaberoutine mit Konverter
  579 0453  22 B7C7     	LD	(UIN2+1),HL
  580 0456  21 0B7F     	LD	HL,U0A7B	; Zeiger auf 07H = USIN2
  581 0459  22 B7BB     	LD	(INTAB),HL	; INTAB umstellen auf USIN2
  582 045C  CD 0AA2     	CALL	U09AE		; IRM-Adresse fuer Zeichen links/unten setzen
  583 045F  21 0000     	LD	HL,0		; Fenster volle Groesse
  584 0462  22 B79C     	LD	(WINON),HL
  585 0465  22 005A     	LD	(U004A),HL	; Zaehlwert Kassetteneingabe
  586 0468  21 2028     	LD	HL,2028H
  587 046B  22 B79E     	LD	(WINLG),HL
  588                   ; 30.12.2023: verschoben zu WARM1, damit das im Direktmode regeneriert wird
  589                   ;	LD	HL,U04C3	; eigene Routine fuer
  590                   ;	LD	(IO_ERR),HL	; IO-ERROR eintragen
  591 046E  3E 31       	LD	A,DEFCOL	; Standardfarbe
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   9
BAC85   Z80

  592 0470  32 B7A3     	LD	(COLOR),A	; Farbe einstellen
  593                   ; 17.11.2023: Grafikfarbe einstellen hier nicht noetig, da diese beim Zeichnen
  594                   ; des Titelbildes (Schallplatte) neu eingetragen wird
  595                   ;	AND	78H		; Vordergrundfarbe (ohne Blinken) herausfiltern
  596                   ;	LD	(FARB),A	; auch fuer Grafikbefehle eintragen
  597 0473  3E 7F       	LD	A,7FH		; Blinken aus, volle Lautstaerke, RAM8 ein
  598 0475  D3 89       	OUT	(PIOBD),A
  599 0477  21 0B9B     	LD	HL,U0A95	; F-Tastenbelegungen
  600 047A  11 B900     	LD	DE,FNDEF	; Funktionstastenspeicher
  601 047D  01 0042     	LD	BC,U0AD7-U0A95
  602 0480  ED B0       	LDIR			; initialisieren
  603 0482  11 22DD     	LD	DE,U21F3+2	; Treiber im RAM
  604 0485  21 BA02     	LD	HL,UBA00+2	; Treiber im IRM
  605 0488  CD 049E     	CALL	U04B4		; Treiber bereits im IRM?
  606 048B  28 0E       	JR	Z,BCINI1	; ja, fertig
  607 048D  EB          	EX	DE,HL
  608 048E  CD 049E     	CALL	U04B4		; Treiber noch im RAM verfuegbar?
  609 0491  20 08       	JR	NZ,BCINI1	; nein, nichts mehr da zum Kopieren
  610 0493  01 037C     	LD	BC,U256B-U21F3	; Laenge des V.24-Treibers
  611 0496  ED B0       	LDIR			; V.24-Treiber kopieren
  612 0498  CD BBF5     	CALL	UBBF5		; V.24-Modul initialisieren
  613 049B  C3 07D0     BCINI1:	JP	IOFRET		; IRM OFF, RET
  614                   ;
  615                   ; Drucker(?)treiber pruefen:
  616                   ;
  617 049E  D5          U04B4:	PUSH	DE
  618 049F  56          	LD	D,(HL)
  619 04A0  2B          	DEC	HL
  620 04A1  5E          	LD	E,(HL)
  621 04A2  2B          	DEC	HL
  622 04A3  E5          	PUSH	HL		; steht ein CALL auf
  623 04A4  21 BAFE     	LD	HL,UBAFE	; UBAFE im Speicher?
  624 04A7  B7          	OR	A
  625 04A8  ED 52       	SBC	HL,DE
  626 04AA  E1          	POP	HL
  627 04AB  D1          	POP	DE
  628 04AC  C9          	RET
  629                   ;
  630                   ; eigene Routine fuer IO-ERROR (benutzt im Direktmode)
  631                   ;
  632 04AD  DB 88       U04C3:	IN	A,(PIOAD)
  633 04AF  CB 57       	BIT	2,A		; IRM ein?
  634 04B1  C4 F01B     	CALL	NZ,IRMOFF	; bei CAOS 3.1 erst noch den IRM ausschalten!
  635 04B4  C3 DC82     	JP	IOERR		; Sprung in BASIC-ROM
  636                   ;
  637                   ; Fehlerbehandlung im RUN-Mode, setzt nur CY-Flag bei Fehler
  638                   ;
  639 04B7  DB 88       U04C4:	IN	A,(PIOAD)
  640 04B9  CB 57       	BIT	2,A		; IRM ein?
  641 04BB  C4 F01B     	CALL	NZ,IRMOFF	; bei CAOS 3.1 erst noch den IRM ausschalten!
  642 04BE  37          	SCF			; Fehlerflag setzen
  643 04BF  E1          	POP	HL		; ERROR-Adresse vom Stack nehmen
  644 04C0  C9          	RET			; zurueck zu MBIN bzw. MBOUT
  645                   ;
  646                   ; Titelbild zeichnen
  647                   ;
  648 04C1  CD 05DC     TITEL:	CALL	CLS		; Bildschirm loeschen
  649 04C4  CD F018     	CALL	IRMON
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  10
BAC85   Z80

  650 04C7  3E 20       	LD	A,20H		; Vordergrundfarbe gruen
  651 04C9  32 B7D6     	LD	(FARB),A	; Grafikfarbe fuer Linie (Schallplatte)
  652 04CC  CD F01B     	CALL	IRMOFF
  653 04CF  AF          	XOR	A
  654 04D0  32 003D     	LD	(XPOS2+1),A
  655 04D3  32 0041     	LD	(XPOS1+1),A
  656 04D6  32 003F     	LD	(YPOS2+1),A
  657 04D9  32 0043     	LD	(YPOS1+1),A
  658 04DC  32 0044     	LD	(CN),A		; CN=0: Linie zeichnen (nicht loeschen)
  659                   ; Schallplatte zeichnen
  660 04DF  21 0BDD     	LD	HL,U0AD7	; Daten fuer Titelbild
  661 04E2  06 2B       	LD	B,43		; 43 Linien
  662 04E4  C5          TTL1:	PUSH	BC
  663 04E5  E5          	PUSH	HL
  664 04E6  3E 28       	LD	A,28H
  665 04E8  96          	SUB	(HL)
  666 04E9  32 003C     	LD	(XPOS2),A	; X-Ende
  667 04EC  23          	INC	HL
  668 04ED  3E 20       	LD	A,20H
  669 04EF  96          	SUB	(HL)
  670 04F0  32 003E     	LD	(YPOS2),A	; Y-Ende
  671 04F3  23          	INC	HL
  672 04F4  3E 28       	LD	A,28H
  673 04F6  96          	SUB	(HL)
  674 04F7  32 0040     	LD	(XPOS1),A	; X-Anfang
  675 04FA  23          	INC	HL
  676 04FB  3E 28       	LD	A,28H
  677 04FD  96          	SUB	(HL)
  678 04FE  32 0042     	LD	(YPOS1),A	; Y-Anfang
  679 0501  CD 07DA     	CALL	LINIE		; Linie zeichnen (1. Quadrant)
  680 0504  E1          	POP	HL
  681 0505  E5          	PUSH	HL
  682 0506  3E 27       	LD	A,27H
  683 0508  86          	ADD	(HL)
  684 0509  32 003C     	LD	(XPOS2),A	; X-Ende
  685 050C  23          	INC	HL
  686 050D  3E 20       	LD	A,20H
  687 050F  96          	SUB	(HL)
  688 0510  32 003E     	LD	(YPOS2),A	; Y-Ende
  689 0513  23          	INC	HL
  690 0514  3E 27       	LD	A,27H
  691 0516  86          	ADD	(HL)
  692 0517  32 0040     	LD	(XPOS1),A	; X-Anfang
  693 051A  23          	INC	HL
  694 051B  3E 28       	LD	A,28H
  695 051D  96          	SUB	(HL)
  696 051E  32 0042     	LD	(YPOS1),A	; Y-Anfang
  697 0521  CD 07DA     	CALL	LINIE		; Linie zeichnen (2. Quadrant)
  698 0524  E1          	POP	HL
  699 0525  E5          	PUSH	HL
  700 0526  3E 28       	LD	A,28H
  701 0528  96          	SUB	(HL)
  702 0529  32 003C     	LD	(XPOS2),A	; X-Ende
  703 052C  23          	INC	HL
  704 052D  3E 1F       	LD	A,1FH
  705 052F  86          	ADD	(HL)
  706 0530  32 003E     	LD	(YPOS2),A	; Y-Ende
  707 0533  23          	INC	HL
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  11
BAC85   Z80

  708 0534  3E 28       	LD	A,28H
  709 0536  96          	SUB	(HL)
  710 0537  32 0040     	LD	(XPOS1),A	; X-Anfang
  711 053A  23          	INC	HL
  712 053B  3E 27       	LD	A,27H
  713 053D  86          	ADD	(HL)
  714 053E  32 0042     	LD	(YPOS1),A	; Y-Anfang
  715 0541  CD 07DA     	CALL	LINIE		; Linie zeichnen (3. Quadrant)
  716 0544  E1          	POP	HL
  717 0545  3E 27       	LD	A,27H
  718 0547  86          	ADD	(HL)
  719 0548  32 003C     	LD	(XPOS2),A	; X-Ende
  720 054B  23          	INC	HL
  721 054C  3E 1F       	LD	A,1FH
  722 054E  86          	ADD	(HL)
  723 054F  32 003E     	LD	(YPOS2),A	; Y-Ende
  724 0552  23          	INC	HL
  725 0553  3E 27       	LD	A,27H
  726 0555  86          	ADD	(HL)
  727 0556  32 0040     	LD	(XPOS1),A	; X-Anfang
  728 0559  23          	INC	HL
  729 055A  3E 27       	LD	A,27H
  730 055C  86          	ADD	(HL)
  731 055D  32 0042     	LD	(YPOS1),A	; Y-Anfang
  732 0560  23          	INC	HL
  733 0561  E5          	PUSH	HL
  734 0562  CD 07DA     	CALL	LINIE		; Linie zeichnen (4. Quadrant)
  735 0565  E1          	POP	HL
  736 0566  C1          	POP	BC
  737 0567  05          	DEC	B		; noch eine Linie zu zeichnen?
  738 0568  C2 04E4     	JP	NZ,TTL1		; ja, dann weiter
  739                   ;Linie zwischen Schallplatte und TAPE-Signal
  740 056B  3E 3E       	LD	A,3EH
  741 056D  32 003E     	LD	(YPOS2),A
  742 0570  C6 08       	ADD	8
  743 0572  32 0042     	LD	(YPOS1),A
  744 0575  3E 49       	LD	A,49H
  745 0577  32 003C     	LD	(XPOS2),A
  746 057A  3E 29       	LD	A,29H
  747 057C  32 0040     	LD	(XPOS1),A
  748 057F  E5          	PUSH	HL
  749 0580  CD 07DA     	CALL	LINIE		; Linie von Schallplatte nach rechts
  750 0583  E1          	POP	HL
  751                   ;TAPE-Signal zeichnen
  752 0584  0E 05       	LD	C,5		; 5x das gleiche Muster
  753 0586  E5          TTL2:	PUSH	HL
  754 0587  06 0C       	LD	B,12		; 12 Linien
  755 0589  C5          TTL3:	PUSH	BC
  756 058A  E5          	PUSH	HL
  757 058B  5E          	LD	E,(HL)
  758 058C  16 00       	LD	D,0
  759 058E  CB 7B       	BIT	7,E
  760 0590  28 01       	JR	Z,TTL4
  761 0592  15          	DEC	D
  762 0593  23          TTL4:	INC	HL
  763 0594  4E          	LD	C,(HL)
  764 0595  2A 003C     	LD	HL,(XPOS2)
  765 0598  19          	ADD	HL,DE
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  12
BAC85   Z80

  766 0599  22 003C     	LD	(XPOS2),HL
  767 059C  3A 003E     	LD	A,(YPOS2)
  768 059F  91          	SUB	C
  769 05A0  32 003E     	LD	(YPOS2),A
  770 05A3  CD 07DA     	CALL	LINIE		; Linie zeichnen
  771 05A6  E1          	POP	HL
  772 05A7  C1          	POP	BC
  773 05A8  23          	INC	HL
  774 05A9  23          	INC	HL
  775 05AA  10 DD       	DJNZ	TTL3
  776 05AC  EB          	EX	DE,HL
  777 05AD  E1          	POP	HL
  778 05AE  0D          	DEC	C
  779 05AF  20 D5       	JR	NZ,TTL2
  780                   ;Programmtitel anzeigen
  781 05B1  EB          	EX	DE,HL
  782 05B2  06 03       	LD	B,3		; 3 Zeilen
  783 05B4  5E          TTL5:	LD	E,(HL)
  784 05B5  23          	INC	HL
  785 05B6  56          	LD	D,(HL)		; Cursor-Position
  786 05B7  23          	INC	HL
  787 05B8  EB          	EX	DE,HL
  788 05B9  CD 12D8     	CALL	U05E1		; Cursor auf HL setzen
  789 05BC  EB          	EX	DE,HL
  790 05BD  CD C5F1     	CALL	TEXTOE		; Textausgabe (im BASIC-ROM)
  791 05C0  23          	INC	HL
  792 05C1  10 F1       	DJNZ	TTL5
  793 05C3  C9          	RET
  794                   ;
  795                   ; Fenster auf volle Groesse einstellen
  796                   ;
  797 05C4  CD F018     U05C5:	CALL	IRMON
  798 05C7  21 0000     	LD	HL,0		; Fenster volle Groesse
  799 05CA  22 B79C     	LD	(WINON),HL
  800 05CD  22 B7A0     	LD	(CURSO),HL
  801 05D0  21 2028     	LD	HL,2028H
  802 05D3  22 B79E     	LD	(WINLG),HL
  803 05D6  C3 07D0     	JP	IOFRET		; IRM OFF, RET
  804                   ;
  805                   ; GOSUB 100	Initialisieren des Textmodus, Loeschen des Bildschirms
  806                   ;
  807 05D9  CD 206D     GO100:	CALL	U1ECA		; Farbe nach Variable CC einstellen
  808                   ;
  809                   ; Bildschirm loeschen
  810                   ;
  811         0001      IF KC3	; KC85/3-spezifisches schnelles Bildschirmloeschen
  812 05DC  CD F018     CLS:	CALL	IRMON
  813 05DF  E5          	PUSH	HL
  814 05E0  21 8000     	LD	HL,8000H	; IRM-Beginn
  815 05E3  11 8001     	LD	DE,8001H
  816 05E6  01 2800     	LD	BC,2800H
  817 05E9  36 00       	LD	(HL),0
  818 05EB  ED B0       	LDIR			; Pixel-IRM loeschen
  819 05ED  06 0A       	LD	B,0AH
  820 05EF  3A B7A3     	LD	A,(COLOR)	; Farbe
  821 05F2  77          	LD	(HL),A
  822 05F3  ED B0       	LDIR			; Farb-IRM loeschen
  823 05F5  06 05       	LD	B,5
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  13
BAC85   Z80

  824 05F7  36 00       	LD	(HL),0
  825 05F9  ED B0       	LDIR			; VRAM loeschen
  826 05FB  ED 43 B7A0  	LD	(CURSO),BC	; Cursor home
  827 05FF  E1          	POP	HL
  828 0600  C3 07D0     	JP	IOFRET
  829                   ELSE	;Beim KC85/4 ist das normale Bildschirm loeschen schnell genug
  833                   ENDIF
  834                   ;
  835                   ; GOSUB 150	Auffaelliges Anzeigen eines Strings auf dem Bildschirm
  836                   ;		(links und rechts drei Leerzeichen)
  837                   ;		Uebergabe des Strings in der Variablen SR$
  838                   ;
  839 0603  CD F018     GO150:	CALL	IRMON
  840 0606  3A B7A3     	LD	A,(COLOR)	; aktuelle Farbe
  841 0609  32 B796     	LD	(NUMNX),A	; hier zwischenspeichern
  842 060C  CD F01B     	CALL	IRMOFF
  843 060F  CD 206D     	CALL	U1ECA		; Farbe nach Variable CC einstellen
  844 0612  CD 17AF     	CALL	U1691		; Zeichenkette SR$ holen
  845         0001      IF KC3
  846                   ;
  847                   ; Zeichenkette hervorgehoben anzeigen:
  848                   ; (2 Leerzeichen davor und dahinter, Zeichenkette selbst + je ein Leerzeichen
  849                   ; davor und dahinter invers)
  850                   ; PE:	DE	Zeichenkette
  851                   ;	B	Anzahl Zeichen
  852                   ;
  853 0615  CD 0643     	CALL	U061F		; 2x Leerzeichen anzeigen
  854 0618  CD 0629     	CALL	U0630		; nochmal invers anzeigen, danach Zeichenkette
  855 061B  CD F018     	CALL	IRMON
  856 061E  3A B796     	LD	A,(NUMNX)	; gespeicherte Farbinformation
  857 0621  32 B7A3     	LD	(COLOR),A	; wieder regenerieren
  858 0624  C3 07D0     	JP	IOFRET
  859                   	;
  860 0627  1A          U05FE:	LD	A,(DE)		; Zeichen aus Zeichenkette
  861 0628  13          	INC	DE
  862 0629  C5          U0630:	PUSH	BC
  863 062A  D5          	PUSH	DE
  864 062B  CD F018     	CALL	IRMON
  865 062E  CD 064B     	CALL	U20B0		; Zeichen anzeigen und invertieren
  866 0631  CD F01B     	CALL	IRMOFF
  867 0634  D1          	POP	DE
  868 0635  C1          	POP	BC
  869 0636  10 EF       	DJNZ	U05FE
  870 0638  3E 20       	LD	A,' '		; Leerzeichen
  871 063A  CD F018     	CALL	IRMON
  872 063D  CD 064B     	CALL	U20B0		; Zeichen anzeigen und invertieren
  873 0640  CD F01B     	CALL	IRMOFF
  874 0643  3E 20       U061F:	LD	A,' '		; Leerzeichen
  875 0645  CD DDD5     	CALL	CO		; 1x anzeigen
  876 0648  C3 DDD5     	JP	CO		; und noch 1x anzeigen
  877                   ;
  878                   ; Zeichen anzeigen und invertieren:
  879                   ;
  880 064B  2A B79C     U20B0:	LD	HL,(WINON)
  881 064E  ED 5B B7A0  	LD	DE,(CURSO)
  882 0652  19          	ADD	HL,DE		; absolute Position am Bildschirm
  883 0653  CD F003     	CALL	PV1
  884 0656  00          	DB	CRT		; Zeichen anzeigen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  14
BAC85   Z80

  885 0657  CB 24       	SLA	H
  886 0659  CB 24       	SLA	H		; Zeile *8
  887 065B  CB 24       	SLA	H
  888 065D  CD F003     	CALL	PV1
  889 0660  34          	DB	PADR		; Pixel-Adresse berechnen
  890 0661  E5          	PUSH	HL
  891 0662  01 0080     	LD	BC,80H		; Offset fuer naechste Zeile
  892 0665  CD 066B     	CALL	U20CB		; 4 Byte invertieren
  893 0668  E1          	POP	HL
  894 0669  CB ED       	SET	5,L		; dann noch die naechsten 4 Byte
  895 066B  7E          U20CB:	LD	A,(HL)
  896 066C  2F          	CPL
  897 066D  77          	LD	(HL),A
  898 066E  09          	ADD	HL,BC
  899 066F  7E          	LD	A,(HL)
  900 0670  2F          	CPL
  901 0671  77          	LD	(HL),A
  902 0672  09          	ADD	HL,BC
  903 0673  7E          	LD	A,(HL)
  904 0674  2F          	CPL
  905 0675  77          	LD	(HL),A
  906 0676  09          	ADD	HL,BC
  907 0677  7E          	LD	A,(HL)
  908 0678  2F          	CPL
  909 0679  77          	LD	(HL),A
  910 067A  C9          	RET
  911                   ELSE
  939                   ENDIF
  940                   ;
  941                   ; Taste gedrueckt?
  942                   ;
  943 067B  AF          U0613:	XOR	A
  944 067C  DD CB 08 46 	BIT	0,(IX+8)	; Taste gedrueckt?
  945 0680  C8          	RET	Z		; nein
  946 0681  DD CB 08 86 	RES	0,(IX+8)	; quittieren
  947 0685  DD 7E 0D    	LD	A,(IX+13)	; Tastencode abholen
  948 0688  B7          	OR	A
  949 0689  C9          	RET
  950                   ;
  951                   ; Taste quittieren
  952                   ; PA:	Z=0	Taste gedrueckt
  953                   ;
  954 068A  DD CB 08 46 U0622:	BIT	0,(IX+8)	; Taste gedrueckt?
  955 068E  C8          	RET	Z		; nein
  956 068F  DD CB 08 86 	RES	0,(IX+8)	; quittieren
  957 0693  C9          	RET
  958                   ;
  959                   ; Tastaturabfrage, Eingabe ein Zeichen
  960                   ; (Aufruf mit IRM ON oder OFF moeglich)
  961                   ;	
  962 0694  DB 88       U062C:	IN	A,(PIOAD)
  963 0696  CB 57       	BIT	2,A		; IRM ein?
  964 0698  20 09       	JR	NZ,U063B
  965 069A  C5          	PUSH	BC
  966 069B  CD F018     	CALL	IRMON		; einschalten
  967 069E  E5          	PUSH	HL
  968 069F  21 12E8     	LD	HL,U05F1	; und nach RET wieder ausschalten
  969 06A2  E3          	EX	(SP),HL
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  15
BAC85   Z80

  970 06A3  E5          U063B:	PUSH	HL
  971 06A4  CD F003     	CALL	PV1
  972 06A7  04          	DB	KBD		; Eingabe ein Zeichen
  973 06A8  E1          	POP	HL
  974 06A9  C9          	RET
  975                   ;
  976                   ; GOSUB 280	Aus- bzw. Einschalten der STOP/BREAK-Taste
  977                   ;		Uebergabe des gewuenschten Status in der Variablen FR (FR=0 bzw. FR=1)
  978                   ;
  979                   ; 11.11.2023 Funktion entfernt
  980                   ; 02.01.2024: wieder aktiviert im KTAB2 im Programmcode
  981                   ;
  982 06AA  01 4652     GO280:	LD	BC,'FR'
  983 06AD  CD CF48     	CALL	DIM7		; Adresse der Variable FR nach DE holen
  984 06B0  13          	INC	DE
  985 06B1  13          	INC	DE
  986 06B2  13          	INC	DE
  987 06B3  1A          	LD	A,(DE)		; Wert holen	A=81H bei FR=1
  988 06B4  B7          	OR	A		;		A=0   bei FR=0
  989                   ;
  990                   ; BRK/STOP deaktivieren bzw. aktivieren durch Modifikation der KTAB
  991                   ; PE:	Z=1	Tasten aktivieren
  992                   ;	Z=0	Tasten deaktivieren
  993                   ;
  994 06B5  21 1C73     U0642:	LD	HL,KTAB2	; modifizierte KTAB in BASICODE
  995 06B8  20 03       	JR	NZ,U064E	; Tasten deaktivieren
  996 06BA  2A 005E     U0643:	LD	HL,(U004E)	; Original-KTAB von CAOS
  997 06BD  DD 75 0E    U064E:	LD	(IX+14),L
  998 06C0  DD 74 0F    	LD	(IX+15),H
  999 06C3  C9          	RET
 1000                   ;
 1001                   ; Zeichen aus VRAM lesen (fuer GOSUB 220)
 1002                   ; PE:	H=Zeile, L=Spalte
 1003                   ; PA:	A=Zeichencode
 1004                   ;
 1005 06C4  CD F018     U0654:	CALL	IRMON
 1006 06C7  E5          	PUSH	HL
 1007 06C8  D5          	PUSH	DE
 1008 06C9  AF          	XOR	A
 1009 06CA  E5          	PUSH	HL
 1010 06CB  6C          	LD	L,H		; L=Zeile
 1011 06CC  67          	LD	H,A		; HL=Zeile
 1012 06CD  5D          	LD	E,L
 1013 06CE  57          	LD	D,A		; DE=Zeile
 1014 06CF  29          	ADD	HL,HL	; *2
 1015 06D0  29          	ADD	HL,HL	; *4
 1016 06D1  19          	ADD	HL,DE	; *5
 1017 06D2  29          	ADD	HL,HL	; *10
 1018 06D3  29          	ADD	HL,HL	; *20
 1019 06D4  29          	ADD	HL,HL	; *40
 1020 06D5  D1          	POP	DE		; E=Spalte
 1021 06D6  57          	LD	D,A		; DE=Spalte
 1022 06D7  19          	ADD	HL,DE		; 40*Zeile + Spalte
 1023         0001      IF KC3
 1024 06D8  11 B200     	LD	DE,0B200H	; VRAM
 1025                   ELSE
 1027                   ENDIF
 1028 06DB  19          	ADD	HL,DE		; VRAM-Adresse berechnen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  16
BAC85   Z80

 1029 06DC  7E          	LD	A,(HL)		; Inhalt von VRAM lesen
 1030 06DD  B7          	OR	A		; leer?
 1031 06DE  20 02       	JR	NZ,U0672
 1032 06E0  3E 20       	LD	A,' '		; 20H statt 00H uebergeben
 1033 06E2  D1          U0672:	POP	DE
 1034 06E3  E1          	POP	HL
 1035 06E4  C3 07D0     	JP	IOFRET		; IRM OFF, RET
 1036                   ;
 1037                   ; Tonausgabe fuer GOSUB 400
 1038                   ;
 1039 06E7  5F          U0677:	LD	E,A		; Tonhoehe 0..127
 1040 06E8  79          	LD	A,C		; Lautstaerke 0..15
 1041 06E9  E6 0F       	AND	0FH		; Wertebereich 0..15
 1042 06EB  20 04       	JR	NZ,U0681	; Lautstaerke nicht 0
 1043 06ED  3E 03       	LD	A,3		; CTC ruecksetzen
 1044 06EF  18 1C       	JR	U069D
 1045                   	;
 1046 06F1  7B          U0681:	LD	A,E		; Tonhoehe
 1047 06F2  FE 2D       	CP	45
 1048 06F4  38 06       	JR	C,U068C		; kleiner als 45
 1049 06F6  D6 2D       	SUB	45
 1050 06F8  06 07       	LD	B,7		; Vorteiler 16
 1051 06FA  18 04       	JR	U0690
 1052                   	;
 1053 06FC  06 27       U068C:	LD	B,27H		; Vorteiler 256
 1054 06FE  C6 03       	ADD	3
 1055 0700  16 00       U0690:	LD	D,0
 1056 0702  5F          	LD	E,A		; DE=Tonhoehe
 1057 0703  21 0B40     	LD	HL,U0A3C	; Tabelle der Tonwerte
 1058 0706  19          	ADD	HL,DE
 1059 0707  7E          	LD	A,(HL)		; Zeitkonstante lesen
 1060 0708  5F          	LD	E,A
 1061 0709  78          	LD	A,B		; Steuerwort mit VT=16 oder VT=256
 1062 070A  D3 8D       	OUT	(CTC1),A
 1063 070C  7B          	LD	A,E		; Zeitkonstante (Tonhoehe)
 1064 070D  D3 8D       U069D:	OUT	(CTC1),A
 1065 070F  3E A7       	LD	A,0A7H		; EI, Zeitgeber, VT=256, ZK folgt
 1066 0711  D3 8E       	OUT	(CTC2),A	; Steuerwort fuer Tondauer
 1067 0713  3E A5       	LD	A,165
 1068 0715  D3 8E       	OUT	(CTC2),A	; Zeitkonstante
 1069 0717  1E 0F       	LD	E,0FH
 1070 0719  79          	LD	A,C		; Lautstaerke
 1071 071A  AB          	XOR	E		; negieren
 1072 071B  A3          	AND	E		; maskieren 0..15
 1073 071C  4F          	LD	C,A
 1074 071D  3C          	INC	A
 1075 071E  21 0BB8     	LD	HL,0BB8H
 1076 0721  5D          U06B1:	LD	E,L
 1077 0722  54          	LD	D,H
 1078 0723  06 05       	LD	B,5		; 5x verschieben
 1079 0725  CB 3A       U06B5:	SRL	D
 1080 0727  CB 1B       	RR	E
 1081 0729  10 FA       	DJNZ	U06B5
 1082 072B  19          	ADD	HL,DE
 1083 072C  3D          	DEC	A
 1084 072D  20 F2       	JR	NZ,U06B1
 1085 072F  EB          	EX	DE,HL
 1086 0730  D5          	PUSH	DE
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  17
BAC85   Z80

 1087 0731  E1          U06C1:	POP	HL
 1088 0732  79          	LD	A,C
 1089 0733  87          	ADD	A
 1090 0734  06 61       	LD	B,61H		; Blinken aus, RAM8 ein
 1091 0736  B0          	OR	B		; mit Lautstaerke kombinieren
 1092 0737  D3 89       	OUT	(PIOBD),A	; Lautstaerke einstellen
 1093 0739  5D          	LD	E,L
 1094 073A  54          	LD	D,H
 1095 073B  06 05       	LD	B,5
 1096 073D  CB 3A       U06CD:	SRL	D
 1097 073F  CB 1B       	RR	E
 1098 0741  10 FA       	DJNZ	U06CD
 1099 0743  19          	ADD	HL,DE
 1100 0744  EB          	EX	DE,HL
 1101 0745  D5          	PUSH	DE
 1102 0746  79          	LD	A,C
 1103 0747  EE 0F       	XOR	0FH
 1104 0749  28 01       	JR	Z,U06DC
 1105 074B  0C          	INC	C
 1106 074C  2A 005A     U06DC:	LD	HL,(U004A)
 1107 074F  2B          	DEC	HL
 1108 0750  CB 7C       	BIT	7,H
 1109 0752  20 07       	JR	NZ,U06EB
 1110 0754  1B          	DEC	DE
 1111 0755  7A          	LD	A,D
 1112 0756  B3          	OR	E
 1113 0757  28 D8       	JR	Z,U06C1
 1114 0759  18 F1       	JR	U06DC
 1115                   	;
 1116 075B  E1          U06EB:	POP	HL
 1117 075C  3E 7F       	LD	A,7FH
 1118 075E  D3 89       	OUT	(PIOBD),A
 1119 0760  C9          	RET
 1120                   ;
 1121                   ; GOSUB 250	Ausgabe eines einfachen kurzen Tons ("Beep")
 1122                   ;
 1123 0761  0E 00       GO250:	LD	C,0
 1124 0763  3E 61       	LD	A,61H		; Blinken aus, RAM8 ein, volle Lautstaerke
 1125 0765  D3 89       	OUT	(PIOBD),A
 1126 0767  3E 05       U06F7:	LD	A,5		; Zeitkonstante folgt
 1127 0769  D3 8C       	OUT	(CTC0),A	; Steuerwort
 1128 076B  79          	LD	A,C		; Zeitkonstante (Tonhoehe 1)
 1129 076C  D3 8C       	OUT	(CTC0),A
 1130 076E  06 18       	LD	B,24
 1131 0770  10 FE       U0700:	DJNZ	U0700		; kurz warten
 1132 0772  0D          	DEC	C
 1133 0773  20 F2       	JR	NZ,U06F7
 1134 0775  0C          	INC	C
 1135 0776  3E 05       U0706:	LD	A,5
 1136 0778  D3 8C       	OUT	(CTC0),A
 1137 077A  79          	LD	A,C
 1138 077B  D3 8C       	OUT	(CTC0),A
 1139 077D  06 30       	LD	B,48
 1140 077F  10 FE       U070F:	DJNZ	U070F		; kurz warten
 1141 0781  0C          	INC	C
 1142 0782  20 F2       	JR	NZ,U0706
 1143 0784  3E 7F       	LD	A,7FH		; Blinken aus, RAM8 ein, Lautstaerke=0
 1144 0786  D3 89       	OUT	(PIOBD),A
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  18
BAC85   Z80

 1145 0788  3E 03       	LD	A,3
 1146 078A  D3 8C       	OUT	(CTC0),A	; CTC 1 (Tonhoehe) stoppen
 1147 078C  C9          	RET
 1148                   ;
 1149                   ; Zeichen zu Drucker ausgeben
 1150                   ;
 1151 078D  D5          PRINT:	PUSH	DE
 1152 078E  1E 02       	LD	E,UOT1
 1153 0790  CD F015     	CALL	PV5		; CAOS-UP aufrufen, wenn IRM aus ist
 1154 0793  D1          	POP	DE
 1155 0794  C9          	RET
 1156                   ;
 1157                   ; GOSUB 620	Setzen eines Punktes
 1158                   ;		Uebergabe der Position in den Variablen HO und VE
 1159                   ;		Uebergabe der Farbe in der Variablen CN
 1160                   ;
 1161 0795  CD 206D     GO620:	CALL	U1ECA		; Farbe nach Variable CC einstellen
 1162 0798  CD 172F     	CALL	U1607		; Werte der Variablen HO, VE und CN holen
 1163 079B  CD F018     	CALL	IRMON
 1164 079E  2A 003C     	LD	HL,(XPOS2)	; X-Position
 1165 07A1  22 0040     	LD	(XPOS1),HL
 1166 07A4  22 B7D3     	LD	(HOR),HL
 1167 07A7  2A 003E     	LD	HL,(YPOS2)	; Y-Position
 1168 07AA  11 0008     	LD	DE,8
 1169 07AD  19          	ADD	HL,DE
 1170 07AE  22 0042     	LD	(YPOS1),HL
 1171 07B1  24          	INC	H
 1172 07B2  25          	DEC	H
 1173 07B3  20 1B       	JR	NZ,IOFRET	; IRM OFF, RET
 1174 07B5  7D          	LD	A,L
 1175 07B6  2F          	CPL
 1176 07B7  32 B7D5     	LD	(VERT),A
 1177 07BA  1E 30       	LD	E,PUSE		; 30H = PUSE (Punkt setzen/loeschen)
 1178                   ; 19.11.2023:
 1179                   ; Grafikfarbe wird ausschliesslich ueber CAOS-Arbeitszelle FARB ermittelt,
 1180                   ; keine Modifikation des Programmcodes mehr erforderlich
 1181 07BC  3A B7D6     GRAF1:	LD	A,(FARB)	; aktuelle Grafikfarbe
 1182 07BF  E6 78       	AND	078H		; nur die Farb-Bits (ohne Blinken)
 1183 07C1  57          	LD	D,A
 1184 07C2  3A 0044     	LD	A,(CN)		; 0=zeichnen oder 1=loeschen aus CN
 1185 07C5  87          	ADD	A		; 0=zeichnen oder 2=loeschen
 1186         0001      IF KC3
 1187 07C6  28 01       	JR	Z,U078A
 1188 07C8  1D          	DEC	E		; 2FH = PUDE (Punkt loeaschen)
 1189 07C9              U078A:
 1190                   ENDIF
 1191 07C9  B2          	OR	D		; in Grafikfarbe einbauen
 1192 07CA  32 B7D6     	LD	(FARB),A	; Grafikfarbe
 1193 07CD  CD F009     	CALL	PV3		; PUSE oder LINE (UP-Nummer in Register E)
 1194 07D0  CD F01B     IOFRET:	CALL	IRMOFF
 1195 07D3  C9          	RET
 1196                   ;
 1197                   ; GOSUB 630	Zeichnen einer Linie ausgehend von der aktuellen Grafikposition
 1198                   ;		Uebergabe des Endpunktes in den Variablen HO und VE
 1199                   ;		Uebergabe der Farbe in der Variablen CN (CN=1 Loeschen, CN=0 zeichnen)
 1200                   ;		Festlegen der Grafikposition gegebenenfalls vorher durch das
 1201                   ;		Setzen eines Punktes
 1202                   ;
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  19
BAC85   Z80

 1203 07D4  CD 206D     GO630:	CALL	U1ECA		; Farbe nach Variable CC einstellen
 1204 07D7  CD 172F     	CALL	U1607		; Werte der Variablen HO, VE und CN holen
 1205                   ;
 1206                   ; Linie zeichnen, hier Einsprung fuer Titelbild
 1207                   ;
 1208 07DA  CD F018     LINIE:	CALL	IRMON
 1209 07DD  2A 0040     	LD	HL,(XPOS1)	; X-Anfang (0=links)
 1210 07E0  22 B782     	LD	(ARG1),HL	; => X-Koordinate Anfangspunkt
 1211 07E3  21 00FF     	LD	HL,0FFH
 1212 07E6  ED 5B 0042  	LD	DE,(YPOS1)	; Y-Anfang (0=oben!)
 1213 07EA  B7          	OR	A
 1214 07EB  ED 52       	SBC	HL,DE		; umrechnen fuer KC-Bildschirm (0=unten!)
 1215 07ED  22 B784     	LD	(ARG2),HL	; Y-Koordinate Anfangspunkt
 1216 07F0  2A 003C     	LD	HL,(XPOS2)	; X-Ende
 1217 07F3  22 0040     	LD	(XPOS1),HL	; als neue X-Position eintragen
 1218 07F6  22 B786     	LD	(ARG3),HL	; X-Koordinate Endpunkt
 1219 07F9  2A 003E     	LD	HL,(YPOS2)	; Y-Ende (0=oben!)
 1220 07FC  11 0008     	LD	DE,8		; +8
 1221 07FF  19          	ADD	HL,DE
 1222 0800  22 0042     	LD	(YPOS1),HL	; als neue Y-Position eintragen
 1223 0803  11 00FF     	LD	DE,0FFH
 1224 0806  EB          	EX	DE,HL
 1225 0807  ED 52       	SBC	HL,DE		; umrechnen fuer KC-Bildschirm (0=unten!)
 1226 0809  22 B788     	LD	(ARG4),HL	; Y-Koordinate Endpunkt
 1227         0001      IF KC3
 1228                   ; Linie zeichnen oder loeschen (fuer KC85/3 direkt programmiert)
 1229 080C  3A B7D6     	LD	A,(FARB)	; aktuelle Grafikfarbe
 1230 080F  E6 78       	AND	078H		; nur die Farb-Bits (ohne Blinken)
 1231 0811  57          	LD	D,A
 1232 0812  3A 0044     	LD	A,(CN)		; 0=zeichnen oder 1=loeschen aus CN
 1233 0815  87          	ADD	A		; 0=zeichnen oder 2=loeschen
 1234 0816  B2          	OR	D		; in Grafikfarbe einbauen
 1235 0817  32 B7D6     	LD	(FARB),A	; Grafikfarbe
 1236 081A  21 07D0     	LD	HL,IOFRET	; IRM OFF, RET
 1237 081D  E5          	PUSH	HL		; nach Linie zeichnen IRM wieder aus
 1238 081E  2A B784     	LD	HL,(ARG2)	; Y-Koordinate Anfangspunkt
 1239 0821  ED 5B B788  	LD	DE,(ARG4)	; Y-Koordinate Endpunkt
 1240 0825  D9          	EXX
 1241 0826  2A B782     	LD	HL,(ARG1)	; X-Koordinate Anfangspunkt
 1242 0829  ED 5B B786  	LD	DE,(ARG3)	; X-Koordinate Endpunkt
 1243 082D  AF          LIN1:	XOR	A
 1244 082E  ED 52       	SBC	HL,DE
 1245 0830  F2 083A     	JP	P,LIN2
 1246 0833  19          	ADD	HL,DE
 1247 0834  EB          	EX	DE,HL
 1248 0835  D9          	EXX
 1249 0836  EB          	EX	DE,HL
 1250 0837  D9          	EXX
 1251 0838  18 F3       	JR	LIN1
 1252                   	;
 1253 083A  D9          LIN2:	EXX
 1254 083B  D5          	PUSH	DE
 1255 083C  ED 52       LIN3:	SBC	HL,DE
 1256 083E  F2 0847     	JP	P,LIN4
 1257 0841  19          	ADD	HL,DE
 1258 0842  EB          	EX	DE,HL
 1259 0843  F6 01       	OR	1
 1260 0845  18 F5       	JR	LIN3
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  20
BAC85   Z80

 1261                   	;
 1262 0847  E5          LIN4:	PUSH	HL
 1263 0848  D9          	EXX
 1264 0849  C1          	POP	BC
 1265 084A  E5          	PUSH	HL
 1266 084B  ED 42       	SBC	HL,BC
 1267 084D  E1          	POP	HL
 1268 084E  C5          	PUSH	BC
 1269 084F  F2 0855     	JP	P,LIN5
 1270 0852  E3          	EX	(SP),HL
 1271 0853  F6 02       	OR	2
 1272 0855  E5          LIN5:	PUSH	HL
 1273 0856  44          	LD	B,H
 1274 0857  4D          	LD	C,L
 1275 0858  D9          	EXX
 1276 0859  C1          	POP	BC
 1277 085A  D1          	POP	DE
 1278 085B  60          	LD	H,B
 1279 085C  69          	LD	L,C
 1280 085D  CB 3C       	SRL	H
 1281 085F  CB 1D       	RR	L
 1282 0861  D9          	EXX
 1283 0862  E1          	POP	HL
 1284 0863  EB          	EX	DE,HL
 1285 0864  CD 0889     LIN6:	CALL	U0840
 1286 0867  D9          LIN7:	EXX
 1287 0868  A7          	AND	A
 1288 0869  ED 52       	SBC	HL,DE
 1289 086B  30 01       	JR	NC,LIN8
 1290 086D  09          	ADD	HL,BC
 1291 086E  D9          LIN8:	EXX
 1292 086F  CB 4F       	BIT	1,A
 1293 0871  20 04       	JR	NZ,LIN9
 1294 0873  23          	INC	HL
 1295 0874  30 0B       	JR	NC,LIN11
 1296 0876  A7          	AND	A
 1297 0877  CB 47       LIN9:	BIT	0,A
 1298 0879  13          	INC	DE
 1299 087A  28 02       	JR	Z,LIN10
 1300 087C  1B          	DEC	DE
 1301 087D  1B          	DEC	DE
 1302 087E  30 01       LIN10:	JR	NC,LIN11
 1303 0880  23          	INC	HL
 1304 0881  08          LIN11:	EX	AF,AF'
 1305 0882  78          	LD	A,B
 1306 0883  B1          	OR	C
 1307 0884  C8          	RET	Z
 1308 0885  0B          	DEC	BC
 1309 0886  08          	EX	AF,AF'
 1310 0887  18 DB       	JR	LIN6
 1311                   ;
 1312                   ; UP1 fuer Linie
 1313                   ;
 1314 0889  E5          U0840:	PUSH	HL
 1315 088A  D5          	PUSH	DE
 1316 088B  C5          	PUSH	BC
 1317 088C  F5          	PUSH	AF
 1318 088D  CD 08BB     	CALL	U0875
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  21
BAC85   Z80

 1319 0890  38 1B       	JR	C,U0865		; raus
 1320 0892  D5          	PUSH	DE
 1321 0893  ED 5B B7D6  	LD	DE,(FARB)
 1322 0897  CB 43       	BIT	0,E		; XOR-Funktion?
 1323 0899  20 1D       	JR	NZ,U086F
 1324 089B  CB 4B       	BIT	1,E		; Loeschen?
 1325 089D  20 13       	JR	NZ,U086A
 1326 089F  B6          	OR	(HL)		; Punkt setzen
 1327 08A0  D1          U0858:	POP	DE
 1328 08A1  77          	LD	(HL),A
 1329 08A2  3A B7D6     	LD	A,(FARB)	; neue Grafikfarbe
 1330 08A5  E6 F8       	AND	0F8H		; nur Vordergrund
 1331 08A7  47          	LD	B,A
 1332 08A8  1A          	LD	A,(DE)		; aktuelle Farbe
 1333 08A9  E6 07       	AND	7		; Hintergrund erhalten
 1334 08AB  B0          	OR	B		; neuen Vordergrund einbauen
 1335 08AC  12          	LD	(DE),A		; Fabe schreiben
 1336 08AD  F1          U0865:	POP	AF
 1337 08AE  C1          	POP	BC
 1338 08AF  D1          	POP	DE
 1339 08B0  E1          	POP	HL
 1340 08B1  C9          	RET
 1341                   	;
 1342 08B2  2F          U086A:	CPL
 1343 08B3  A6          	AND	(HL)		; Punkt loeschen
 1344 08B4  77          	LD	(HL),A
 1345 08B5  D1          	POP	DE
 1346 08B6  18 F5       	JR	U0865
 1347                   	;
 1348 08B8  AE          U086F:	XOR	(HL)		; Punkt alternieren
 1349 08B9  18 E5       	JR	U0858
 1350                   ;
 1351                   ; UP2 fuer Linie
 1352                   ;
 1353 08BB  7D          U0875:	LD	A,L
 1354 08BC  E6 07       	AND	7
 1355 08BE  CB 3C       	SRL	H
 1356 08C0  CB 1D       	RR	L
 1357 08C2  CB 3C       	SRL	H
 1358 08C4  CB 1D       	RR	L
 1359 08C6  CB 3C       	SRL	H
 1360 08C8  CB 1D       	RR	L
 1361 08CA  01 0B93     	LD	BC,BITTAB	; Bit-Tabelle
 1362 08CD  81          	ADD	C
 1363 08CE  4F          	LD	C,A
 1364 08CF  7A          	LD	A,D
 1365 08D0  C6 FF       	ADD	0FFH
 1366 08D2  D8          	RET	C
 1367 08D3  AB          	XOR	E
 1368 08D4  67          	LD	H,A
 1369 08D5  0A          	LD	A,(BC)
 1370 08D6  F5          	PUSH	AF
 1371 08D7  7D          	LD	A,L
 1372 08D8  FE 20       	CP	20H
 1373 08DA  30 23       	JR	NC,U08B9
 1374 08DC  87          	ADD	A
 1375 08DD  87          	ADD	A
 1376 08DE  87          	ADD	A
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  22
BAC85   Z80

 1377 08DF  6C          	LD	L,H
 1378 08E0  CB 3C       	SRL	H
 1379 08E2  CB 3C       	SRL	H
 1380 08E4  37          	SCF
 1381 08E5  CB 1C       	RR	H
 1382 08E7  1F          	RRA
 1383 08E8  CB 3C       	SRL	H
 1384 08EA  1F          	RRA
 1385 08EB  54          	LD	D,H
 1386 08EC  37          	SCF
 1387 08ED  CB 1A       	RR	D
 1388 08EF  CB DA       	SET	3,D
 1389 08F1  5F          	LD	E,A
 1390 08F2  CB 1B       	RR	E
 1391 08F4  CB 1D       	RR	L
 1392 08F6  1F          	RRA
 1393 08F7  CB 1D       	RR	L
 1394 08F9  6F          	LD	L,A
 1395 08FA  CB 14       	RL	H
 1396 08FC  F1          	POP	AF
 1397 08FD  A7          	AND	A
 1398 08FE  C9          	RET
 1399                   	;
 1400 08FF  FE 28       U08B9:	CP	28H
 1401 0901  30 32       	JR	NC,U08EF
 1402 0903  C5          	PUSH	BC
 1403 0904  E6 07       	AND	7
 1404 0906  87          	ADD	A
 1405 0907  6F          	LD	L,A
 1406 0908  7C          	LD	A,H
 1407 0909  07          	RLCA
 1408 090A  47          	LD	B,A
 1409 090B  E6 01       	AND	1
 1410 090D  F6 B0       	OR	0B0H
 1411 090F  57          	LD	D,A
 1412 0910  78          	LD	A,B
 1413 0911  07          	RLCA
 1414 0912  4F          	LD	C,A
 1415 0913  E6 03       	AND	3
 1416 0915  F6 50       	OR	50H
 1417 0917  44          	LD	B,H
 1418 0918  67          	LD	H,A
 1419 0919  78          	LD	A,B
 1420 091A  E6 30       	AND	30H
 1421 091C  B5          	OR	L
 1422 091D  6F          	LD	L,A
 1423 091E  79          	LD	A,C
 1424 091F  07          	RLCA
 1425 0920  07          	RLCA
 1426 0921  E6 C0       	AND	0C0H
 1427 0923  B5          	OR	L
 1428 0924  6F          	LD	L,A
 1429 0925  CB 18       	RR	B
 1430 0927  CB 1D       	RR	L
 1431 0929  CB 18       	RR	B
 1432 092B  CB 14       	RL	H
 1433 092D  CB 19       	RR	C
 1434 092F  1F          	RRA
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  23
BAC85   Z80

 1435 0930  5F          	LD	E,A
 1436 0931  C1          	POP	BC
 1437 0932  F1          	POP	AF
 1438 0933  A7          	AND	A		; CY=0
 1439 0934  C9          	RET
 1440                   	;
 1441 0935  F1          U08EF:	POP	AF
 1442 0936  37          	SCF			; CY=1
 1443 0937  C9          	RET
 1444                   ELSE
 1447                   ENDIF
 1448                   ;
 1449                   ; GOSUB 650	Ausgabe einer Zeichenkette im Grafikmodus
 1450                   ;		Uebergabe der Position in den Variablen HO und VE
 1451                   ;		Uebergabe des Strings in der Variablen SR$
 1452                   ;
 1453 0938  CD 206D     GO650:	CALL	U1ECA		; Farbe nach Variable CC einstellen
 1454 093B  CD 172F     	CALL	U1607		; Werte der Variablen HO, VE und CN holen
 1455 093E  CD 17AF     	CALL	U1691		; Zeichenkette SR$ holen
 1456 0941  05          	DEC	B		; Laenge der Zeichenkette
 1457 0942  C8          	RET	Z		; Laenge = 0
 1458 0943  3A 003F     	LD	A,(YPOS2+1)	; High(YPOS2)
 1459 0946  B7          	OR	A
 1460 0947  C0          	RET	NZ		; ausserhalb
 1461 0948  78          	LD	A,B		; B = Laenge der Zeichenkette
 1462 0949  CD F018     	CALL	IRMON		; Routine veraendert BC-Register!
 1463 094C  47          	LD	B,A
 1464 094D  2A 003C     	LD	HL,(XPOS2)	; X-Position im Grafikmodus
 1465 0950  3E 07       	LD	A,7
 1466 0952  A5          	AND	L
 1467 0953  3C          	INC	A
 1468 0954  4F          	LD	C,A		; C=Pixelverschiebung (1-8)
 1469 0955  CB 3C       	SRL	H
 1470 0957  CB 1D       	RR	L		; /8
 1471 0959  CB 3D       	SRL	L
 1472 095B  CB 3D       	SRL	L		; L=Horizontalposition (0-27H)
 1473 095D  3A 003E     	LD	A,(YPOS2)	; Y-Position im Grafikmodus
 1474 0960  C6 08       	ADD	8		; Zeichenhoehe addieren
 1475 0962  67          	LD	H,A		; H=Vertikalposition (0-0FFH)
 1476         0001      IF KC3
 1477                   ; beim KC85/3 muss PADR fuer jede Position separat aufgerufen werden
 1478                   ELSE
 1481                   ENDIF
 1482 0963  C5          U07C9:	PUSH	BC		; B=Laenge Zeichenkette, C=Pixelverschiebung
 1483 0964  D5          	PUSH	DE		; Zeiger auf Zeichenkette
 1484 0965  E5          	PUSH	HL		; IRM-Adresse
 1485 0966  F3          	DI
 1486 0967  DB 88       	IN	A,(PIOAD)
 1487 0969  47          	LD	B,A
 1488 096A  CB 97       	RES	2,A		; IRM aus
 1489 096C  D3 88       	OUT	(PIOAD),A
 1490 096E  1A          	LD	A,(DE)		; Zeichencode holen
 1491 096F  5F          	LD	E,A		; Zeichencode
 1492 0970  78          	LD	A,B
 1493 0971  D3 88       	OUT	(PIOAD),A	; IRM wieder ein
 1494 0973  7B          	LD	A,E		; Zeichencode
 1495 0974  FB          	EI
 1496 0975  FE 20       	CP	20H		; Steuerzeichen?
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  24
BAC85   Z80

 1497 0977  38 55       	JR	C,U0816		; ja, uebergehen
 1498 0979  41          	LD	B,C		; Pixelverschiebung
 1499 097A  0E 08       	LD	C,8		; 8 Byte verarbeiten
 1500 097C  CD 0B1F     	CALL	U0A1B		; Zeichenbildtabelle nach HL holen
 1501 097F  5E          U07E5:	LD	E,(HL)		; Pixelmuster(1) aus Zeichentabelle lesen
 1502 0980  AF          	XOR	A		; Pixelmuster(2) zunaechst 0
 1503 0981  50          	LD	D,B		; Anzahl fuer Pixelverschiebung
 1504 0982  18 03       	JR	U07ED
 1505                   	;
 1506 0984  CB 3B       U07EA:	SRL	E		; Pixelmuster(1) passend verschieben
 1507 0986  1F          	RRA			; Pixelmuster(2) erzeugen
 1508 0987  10 FB       U07ED:	DJNZ	U07EA
 1509 0989  42          	LD	B,D		; Anzahl fuer Pixelverschiebung
 1510 098A  E3          	EX	(SP),HL		; HL = IRM-Adresse, Zeichenbildtabelle auf Stack
 1511 098B  57          	LD	D,A		; D=Pixelmuster(2)
 1512 098C  3A 0044     	LD	A,(CN)		; 0=zeichnen oder 1=loeschen
 1513 098F  B7          	OR	A		; zeichnen oder loeschen?
 1514 0990  28 1C       	JR	Z,U0802		; -> zeichnen
 1515                   
 1516         0001      IF KC3
 1517                   
 1518                   ;Text loeschen
 1519 0992  7B          	LD	A,E		; E=Pixelmuster(1)
 1520 0993  B7          	OR	A
 1521 0994  D5          	PUSH	DE		; D=Pixelmuster(2)
 1522 0995  28 08       	JR	Z,L01		; leer
 1523 0997  E5          	PUSH	HL		; Position
 1524 0998  CD 20B1     	CALL	U20E0		; IRM-Adresse berechnen und Farbe schreiben
 1525 099B  2F          	CPL			; Pixelmuster invertieren
 1526 099C  A6          	AND	(HL)		; loeschen
 1527 099D  77          	LD	(HL),A		; Pixelebene schreiben
 1528 099E  E1          	POP	HL		; Position
 1529 099F  F1          L01:	POP	AF		; A=Pixelmuster(2)
 1530 09A0  B7          	OR	A
 1531 09A1  28 25       	JR	Z,U0810		; leer
 1532 09A3  E5          	PUSH	HL
 1533 09A4  2C          	INC	L		; naechste BS-Spalte
 1534 09A5  CD 20B1     	CALL	U20E0		; IRM-Adresse berechnen und Farbe schreiben
 1535 09A8  38 1D       	JR	C,U080F		; ausserhalb
 1536 09AA  2F          	CPL			; Pixelmuster invertieren
 1537 09AB  A6          	AND	(HL)		; loeschen
 1538 09AC  18 18       	JR	U0808		; Pixelebene zurueck schreiben
 1539                   
 1540                   ;Text zeichnen
 1541 09AE  7B          U0802:	LD	A,E		; Pixelmuster(1)
 1542 09AF  B7          	OR	A
 1543 09B0  D5          	PUSH	DE		; D=Pixelmuster(2)
 1544 09B1  28 07       	JR	Z,T01		; leer
 1545 09B3  E5          	PUSH	HL		; Position
 1546 09B4  CD 20B1     	CALL	U20E0		; IRM-Adresse berechnen und Farbe schreiben
 1547 09B7  B6          	OR	(HL)		; einbauen in vorhandenen Inhalt
 1548 09B8  77          	LD	(HL),A		; Pixelebene schreiben
 1549 09B9  E1          	POP	HL		; Position
 1550 09BA  F1          T01:	POP	AF		; A=Pixelmuster(2)
 1551 09BB  B7          	OR	A
 1552 09BC  28 0A       	JR	Z,U0810		; leer
 1553 09BE  E5          	PUSH	HL		; Position
 1554 09BF  2C          	INC	L		; Position rechts daneben
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  25
BAC85   Z80

 1555 09C0  CD 20B1     	CALL	U20E0		; IRM-Adresse berechnen und Farbe schreiben
 1556 09C3  38 02       	JR	C,U080F		; ausserhalb
 1557 09C5  B6          	OR	(HL)		; einbauen in vorhandenen Inhalt
 1558 09C6  77          U0808:	LD	(HL),A		; Pixelebene schreiben
 1559 09C7  E1          U080F:	POP	HL		; Position
 1560 09C8  24          U0810:	INC	H		; naechste Pixelzeile
 1561 09C9  E3          	EX	(SP),HL		; HL=Zeichenbildtabelle
 1562 09CA  23          	INC	HL		; naechstes Byte
 1563 09CB  0D          	DEC	C
 1564 09CC  20 B1       	JR	NZ,U07E5	; bis alle 8 Byte verarbeitet sind
 1565 09CE  E1          U0816:	POP	HL		; Grafikposition
 1566 09CF  D1          	POP	DE		; Zeiger auf Zeichenkette
 1567 09D0  C1          	POP	BC		; B=Laenge Zeichenkette, C=Pixelverschiebung
 1568 09D1  13          	INC	DE		; naechstes Zeichen aus Zeichenkette
 1569 09D2  7C          	LD	A,H
 1570 09D3  D6 08       	SUB	8
 1571 09D5  67          	LD	H,A
 1572 09D6  2C          	INC	L
 1573 09D7  7D          	LD	A,L
 1574 09D8  FE 28       	CP	28H		; raus aus IRM?
 1575 09DA  30 02       	JR	NC,U0826	; ja
 1576 09DC  10 85       	DJNZ	U07C9		; bis Zeichenkette abgearbeitet ist
 1577 09DE  C3 07D0     U0826:	JP	IOFRET		; IRM OFF, RET
 1578                   
 1579                   ELSE
 1635                   ENDIF	; KC3
 1636                   
 1637         0000      if DEV
 1697                   endif
 1698                   ;
 1699                   ; Datei im KC-Format zum Lesen oeffnen
 1700                   ; NF=2
 1701                   ; PA:	CY=1	Fehler
 1702                   ;
 1703 09E1  21 0060     U0829:	LD	HL,FNAME	; Dateiname
 1704 09E4  16 08       	LD	D,8		; Bit3(D)=1 fuer Open
 1705 09E6  DD CB 07 EE 	SET	5,(IX+7)	; Blocknummern unterdruecken
 1706 09EA  CD 0A3A     	CALL	U0895		; ein Datenbyte einlesen (Open)
 1707 09ED  32 0057     	LD	(U0047),A	; Datenbyte eintragen
 1708 09F0  D0          	RET	NC		; OK
 1709                   ; Lesefehler oder Dateiname falsch bei TAPE
 1710 09F1  F5          	PUSH	AF
 1711 09F2  11 4037     U082E:	LD	DE,4000H+MBIN	; Bit6(D)=1 fuer Close
 1712 09F5  CD F015     	CALL	PV5		; Bandeingabe stoppen
 1713 09F8  F1          U082F:	POP	AF
 1714 09F9  37          	SCF			; Fehler-Flag
 1715 09FA  C9          	RET
 1716                   ;
 1717                   ; Datei im KC-Format zum Lesen schliessen
 1718                   ; NF=2
 1719                   ; PA:	CY=1	Fehler
 1720                   ;
 1721 09FB  16 40       U0864:	LD	D,40H		; Bit6=1 fuer Close
 1722 09FD  21          	DB	21H	; LD HL,nn
 1723                   
 1724                   ; Datei im KC-Format lesen
 1725                   ; NF=2
 1726                   ; PA:	A	Datenbyte
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  26
BAC85   Z80

 1727                   ;	CY=1	Fehler
 1728                   ;
 1729 09FE  16 00       U0869:	LD	D,0		; kein Open, kein Close
 1730 0A00  3A 0057     	LD	A,(U0047)	; letztes Datenbyte
 1731 0A03  FE 03       	CP	3		; war das die Ende-Kennung?
 1732 0A05  28 2B       	JR	Z,U088D		; ja, End-Bit setzen
 1733 0A07  F5          	PUSH	AF		; Datenbyte
 1734 0A08  4A          	LD	C,D		; Steuerbyte
 1735 0A09  CD 0A3A     	CALL	U0895		; naechstes Datenbyte einlesen
 1736 0A0C  30 06       	JR	NC,U086B	; OK
 1737 0A0E  CB 71       	BIT	6,C		; Close?
 1738 0A10  20 E0       	JR	NZ,U082E	; nein, jetzt noch Close
 1739 0A12  18 E4       	JR	U082F
 1740                   	;
 1741 0A14  FE 0D       U086B:	CP	CR		; nach einem CR muss noch ein LF folgen
 1742 0A16  20 0B       	JR	NZ,U087F	; kein CR
 1743 0A18  CB 71       	BIT	6,C		; war das letzte MBIN bereits Close?
 1744 0A1A  CC 0A3A     	CALL	Z,U0895		; nein, noch ein Datenbyte einlesen (LF)
 1745 0A1D  38 D3       	JR	C,U082E		; Fehler -> Close
 1746 0A1F  3E 0D       	LD	A,CR		; nur das CR verwenden
 1747 0A21  18 09       	JR	U0888
 1748                   	;
 1749 0A23  FE 03       U087F:	CP	3		; BRK=Dateiende?
 1750 0A25  20 05       	JR	NZ,U0888	; nein
 1751 0A27  21 0053     	LD	HL,U0043
 1752 0A2A  CB C6       	SET	0,(HL)		; Datei-Ende setzen
 1753 0A2C  32 0057     U0888:	LD	(U0047),A	; gelesenes Datenbyte
 1754 0A2F  F1          	POP	AF		; und vorheriges uebergeben
 1755 0A30  B7          	OR	A		; CY=0, kein Fehler
 1756 0A31  C9          	RET
 1757                   	;
 1758 0A32  21 0053     U088D:	LD	HL,U0043
 1759 0A35  CB C6       	SET	0,(HL)		; Datei-Ende setzen
 1760 0A37  3E 0D       	LD	A,CR		; CR zurueckgeben
 1761 0A39  C9          	RET
 1762                   ;
 1763                   ; ein Datenbyte von Kassette lesen
 1764                   ;
 1765 0A3A  DD CB 08 86 U0895:	RES	0,(IX+8)	; evtl. anstehenden Tastendruck ruecksetzen
 1766 0A3E  AF          	XOR	A
 1767 0A3F  32 0054     	LD	(U0044),A	; Abbruch zuruecksetzen
 1768 0A42  1E 37       	LD	E,MBIN
 1769 0A44  CD F015     	CALL	PV5
 1770 0A47  F5          	PUSH	AF		; Datenbyte und Fehlerflag merken
 1771 0A48  DD CB 08 46 	BIT	0,(IX+8)	; Taste gedrueckt?
 1772 0A4C  28 09       	JR	Z,U08F3		; nein
 1773 0A4E  3E FF       	LD	A,0FFH
 1774 0A50  32 0054     	LD	(U0044),A	; Abbruch/Fehler setzen
 1775 0A53  DD CB 08 86 	RES	0,(IX+8)	; Tastendruck zuruecksetzen
 1776 0A57              U08F3:	;CALL	U09C8		; komplette unterste Bildschirmzeile malen
 1777 0A57  F1          	POP	AF		; A=Datenbyte, CY=1 bei Fehler
 1778 0A58  C9          	RET
 1779                   ;
 1780                   ; Datei im KC-Format zum Schreiben oeffnen
 1781                   ; NF=3
 1782                   ; PA:	CY=1	Fehler
 1783                   ;
 1784 0A59  3A 003B     U0915:	LD	A,(FLAGS)
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  27
BAC85   Z80

 1785 0A5C  F6 08       	OR	8		; Init setzen
 1786 0A5E  32 003B     	LD	(FLAGS),A
 1787 0A61  B7          	OR	A		; CY=0, kein Fehler
 1788 0A62  C9          	RET
 1789                   ;
 1790                   ; Datei im KC-Format schreiben
 1791                   ; NF=3
 1792                   ; PE:	A	Datenbyte
 1793                   ; PA:	CY=1	Fehler
 1794                   ;
 1795 0A63  FE 0D       U0946:	CP	CR		; CR?
 1796 0A65  20 06       	JR	NZ,U094F	; nein
 1797 0A67  CD 0A6D     	CALL	U094F		; CR schreiben
 1798 0A6A  D8          	RET	C		; Fehler
 1799 0A6B  3E 0A       	LD	A,LF		; und danach ein LF automatisch anhaengen
 1800 0A6D  16 00       U094F:	LD	D,0		; kein Open, kein Close
 1801 0A6F  21 003B     U0950:	LD	HL,FLAGS
 1802 0A72  CB 5E       	BIT	3,(HL)		; Init?
 1803 0A74  28 0B       	JR	Z,U0976		; nein
 1804 0A76  CB 9E       	RES	3,(HL)		; Init ruecksetzen
 1805 0A78  CB DA       	SET	3,D		; Bit3(D)=1 fuer Open
 1806 0A7A  21 0060     	LD	HL,FNAME	; Dateiname
 1807 0A7D  DD CB 07 EE 	SET	5,(IX+7)	; Blocknummern unterdruecken
 1808 0A81  1E 38       U0976:	LD	E,MBOUT
 1809 0A83  D5          	PUSH	DE		; D=Steueryte auf Stack erhalten
 1810 0A84  CD F015     	CALL	PV5
 1811 0A87  D1          	POP	DE
 1812 0A88  D8          	RET	C		; Fehler
 1813 0A89  CB 72       	BIT	6,D		; war das Close?
 1814 0A8B  20 0A       	JR	NZ,U0977	; ja, Tastensimulation von BASEX zuruecknehmen
 1815 0A8D  DD CB 08 46 	BIT	0,(IX+8)	; Taste gedrueckt?
 1816                   ;	LD	A,(IX+13)	; Tastencode
 1817                   ;	OR	A		; Taste gedrueckt?
 1818 0A91  C8          	RET	Z		; nein
 1819 0A92  3E FF       	LD	A,0FFH
 1820 0A94  32 0054     	LD	(U0044),A	; Abbruch/Fehler setzen
 1821 0A97  DD CB 08 86 U0977:	RES	0,(IX+8)	; Tastendruck zuruecksetzen
 1822 0A9B  C9          	RET
 1823                   ;
 1824                   ; Datei im KC-Format zum Schreiben schliessen
 1825                   ; NF=3
 1826                   ; PA:	CY=1	Fehler
 1827                   ;
 1828 0A9C  3E 03       U099A:	LD	A,3		; Ende-Kennung
 1829 0A9E  16 40       	LD	D,40H		; Bit6=1 fuer Close
 1830 0AA0  18 CD       	JR	U0950		; als letztes Zeichen in Datei schreiben
 1831                   ;
 1832                   ; IRM-Adresse auf linke Spalte / letzte Zeile setzen
 1833                   ;
 1834 0AA2  E5          U09AE:	PUSH	HL
 1835         0001      IF KC3
 1836 0AA3  21 9E40     	LD	HL,9E40H	; IRM-Adresse fuer Zeichen links/unten (KC85/3)
 1837                   ELSE
 1839                   ENDIF
 1840 0AA6  22 005C     	LD	(U004C),HL	; IRM-Adresse eintragen
 1841 0AA9  E1          	POP	HL
 1842 0AAA  C9          	RET
 1843                   ;
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  28
BAC85   Z80

 1844                   ; unterste Bildschirmzeile malen mit dem Inhalt des Puffers
 1845                   ;
 1846 0AAB  CD 0AA2     U09C8:	CALL	U09AE		; IRM-Adresse auf links/unten einstellen
 1847 0AAE  21 0010     	LD	HL,U0000
 1848 0AB1  01 2820     	LD	BC,2820H	; B=40 Spalten, C=Leerzeichen
 1849 0AB4  7E          U09D1:	LD	A,(HL)
 1850 0AB5  B9          	CP	C		; Steuerzeichen?
 1851 0AB6  30 01       	JR	NC,U09D6	; nein
 1852 0AB8  79          	LD	A,C		; stattdessen Leerzeichen
 1853 0AB9  CD 0AC0     U09D6:	CALL	U09DD		; Zeichen malen
 1854 0ABC  23          	INC	HL
 1855 0ABD  10 F5       	DJNZ	U09D1
 1856 0ABF  C9          	RET
 1857                   ;
 1858                   ; Zeichen in unterster Bildschirmzeile malen (ohne VRAM)
 1859                   ;
 1860 0AC0  F5          U09DD:	PUSH	AF
 1861 0AC1  FE 20       	CP	20H		; Steuerzeichen?
 1862 0AC3  DC 0AA2     	CALL	C,U09AE		; dann wieder von vorn beginnen
 1863 0AC6  38 3E       	JR	C,U0A19		; sonst nichts
 1864 0AC8  E5          	PUSH	HL
 1865 0AC9  D5          	PUSH	DE
 1866 0ACA  C5          	PUSH	BC
 1867 0ACB  5F          	LD	E,A		; Zeichen
 1868 0ACC  DB 88       	IN	A,(PIOAD)
 1869 0ACE  CB 57       	BIT	2,A		; IRM ein?
 1870 0AD0  CC F018     	CALL	Z,IRMON		; bei Bedarf einschalten
 1871 0AD3  F5          	PUSH	AF		; IRM-Zustand merken
 1872 0AD4  7B          	LD	A,E
 1873 0AD5  1E 20       	LD	E,' '
 1874 0AD7  BB          	CP	E		; Steuerzeichen?
 1875 0AD8  30 01       	JR	NC,U09F8	; nein
 1876 0ADA  7B          	LD	A,E		; stattdessen Leerzeichen anzeigen
 1877 0ADB  CD 0B1F     U09F8:	CALL	U0A1B		; Zeichenbildtabelle nach HL holen
 1878 0ADE  ED 5B 005C  	LD	DE,(U004C)	; IRM-Adresse
 1879 0AE2  D5          	PUSH	DE
 1880         0001      IF KC3
 1881                   ;KC85/3-spezifisch:
 1882 0AE3  CD 0B08     	CALL	U0B86		; Zeichen malen (Pixel-IRM)
 1883 0AE6  E1          	POP	HL
 1884 0AE7  2C          	INC	L
 1885 0AE8  3E 60       	LD	A,60H
 1886 0AEA  BD          	CP	L
 1887 0AEB  20 0D       	JR	NZ,U0B78
 1888 0AED  7C          	LD	A,H
 1889 0AEE  FE 9E       	CP	9EH		; rechter Teil erreicht?
 1890 0AF0  20 05       	JR	NZ,U0B75	; nein
 1891 0AF2  21 A658     	LD	HL,0A658H	; Pixel-IRM Zeile 31, Spalte 32
 1892 0AF5  18 03       	JR	U0B78
 1893                   	;
 1894 0AF7  21 9E40     U0B75:	LD	HL,09E40H	; Pixel-IRM Zeile 31, Spalte 0
 1895 0AFA  22 005C     U0B78:	LD	(U004C),HL	; IRM-Adresse fuer naechstes Zeichen
 1896                   ELSE
 1905                   ENDIF
 1906 0AFD  F1          	POP	AF
 1907 0AFE  CB 57       	BIT	2,A		; war IRM aus?
 1908 0B00  CC F01B     	CALL	Z,IRMOFF	; dann jetzt wieder ausschalten
 1909 0B03  C1          	POP	BC
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  29
BAC85   Z80

 1910 0B04  D1          	POP	DE
 1911 0B05  E1          	POP	HL
 1912 0B06  F1          U0A19:	POP	AF
 1913 0B07  C9          	RET
 1914         0001      IF KC3
 1915                   ;
 1916                   ; Zeichen malen in Pixel-IRM KC85/3:
 1917                   ;
 1918 0B08  CD 0B0D     U0B86:	CALL	U0B8B		; 4 Byte
 1919 0B0B  CB EB       	SET	5,E		; und nochmals 4 Byte
 1920 0B0D  CB 82       U0B8B:	RES	0,D
 1921 0B0F  CD 0B14     	CALL	U0B92		; 2 Byte
 1922 0B12  CB C2       	SET	0,D		; und nochmals 2 Byte
 1923 0B14  CB BB       U0B92:	RES	7,E
 1924 0B16  7E          	LD	A,(HL)		; aus Zeichentabelle
 1925 0B17  23          	INC	HL
 1926 0B18  12          	LD	(DE),A		; in Pixel-IRM
 1927 0B19  CB FB       	SET	7,E
 1928 0B1B  7E          	LD	A,(HL)		; aus Zeichentabelle
 1929 0B1C  23          	INC	HL
 1930 0B1D  12          	LD	(DE),A		; in Pixel-IRM
 1931 0B1E  C9          	RET
 1932                   ENDIF
 1933                   ;
 1934                   ; Zeichenbildtabelle holen
 1935                   ; PE:	A = Zeichencode
 1936                   ; PA:	HL = Adresse des Zeichencodes
 1937                   ;
 1938 0B1F  E6 7F       U0A1B:	AND	7FH		; ohne 7 Bit, also nur CCTL0/CCTL1
 1939 0B21  FE 20       	CP	20H
 1940 0B23  38 0D       	JR	C,U0A2E		; 00H bis 1FH aus CCTL1
 1941 0B25  FE 60       	CP	60H
 1942 0B27  30 07       	JR	NC,U0A2C	; 60H bis 7FH aus CCTL1
 1943 0B29  2A B7A6     	LD	HL,(CCTL0)
 1944 0B2C  D6 20       	SUB	20H		; 20H bis 5FH aus CCTL0
 1945 0B2E  18 05       	JR	U0A31
 1946                   	;
 1947 0B30  D6 40       U0A2C:	SUB	40H
 1948 0B32  2A B7A8     U0A2E:	LD	HL,(CCTL1)
 1949 0B35  D5          U0A31:	PUSH	DE
 1950 0B36  EB          	EX	DE,HL
 1951 0B37  6F          	LD	L,A
 1952 0B38  26 00       	LD	H,0
 1953 0B3A  29          	ADD	HL,HL		; Zeichen * 8
 1954 0B3B  29          	ADD	HL,HL
 1955 0B3C  29          	ADD	HL,HL
 1956 0B3D  19          	ADD	HL,DE		; Zeichentabelle addieren
 1957 0B3E  D1          	POP	DE
 1958 0B3F  C9          	RET
 1959                   ;
 1960                   ; Tabelle der Zeitkonstanten fuer Tonwerte
 1961                   ;
 1962 0B40  FF          U0A3C:	DB	0FFH	; 0	45
 1963 0B41  F0          	DB	0F0H	; 1	46
 1964 0B42  E3          	DB	0E3H	; 2	47
 1965 0B43  D6          	DB	0D6H	; 3	48
 1966 0B44  CA          	DB	0CAH	; 4	49
 1967 0B45  BF          	DB	0BFH	; 5	50
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  30
BAC85   Z80

 1968 0B46  B4          	DB	0B4H	; 6	51
 1969 0B47  AA          	DB	0AAH	; 7	52
 1970 0B48  A1          	DB	0A1H	; 8	53
 1971 0B49  98          	DB	98H	; 9	54
 1972 0B4A  8F          	DB	8FH	; 10	55
 1973 0B4B  87          	DB	87H	; 11	56
 1974 0B4C  7F          	DB	7FH	; 12	57
 1975 0B4D  78          	DB	78H	; 13	58
 1976 0B4E  71          	DB	71H	; 14	59
 1977 0B4F  6B          	DB	6BH	; 15	60
 1978 0B50  65          	DB	65H	; 16	61
 1979 0B51  5F          	DB	5FH	; 17	62
 1980 0B52  5A          	DB	5AH	; 18	63
 1981 0B53  55          	DB	55H	; 19	64
 1982 0B54  50          	DB	50H	; 20	65
 1983 0B55  4C          	DB	4CH	; 21	66
 1984 0B56  47          	DB	47H	; 22	67
 1985 0B57  43          	DB	43H	; 23	68
 1986 0B58  40          	DB	40H	; 24	69
 1987 0B59  3C          	DB	3CH	; 25	70
 1988 0B5A  39          	DB	39H	; 26	71
 1989 0B5B  36          	DB	36H	; 27	72
 1990 0B5C  33          	DB	33H	; 28	73
 1991 0B5D  30          	DB	30H	; 29	74
 1992 0B5E  2D          	DB	2DH	; 30	75
 1993 0B5F  2B          	DB	2BH	; 31	76
 1994 0B60  28          	DB	28H	; 32	77
 1995 0B61  26          	DB	26H	; 33	78
 1996 0B62  24          	DB	24H	; 34	79
 1997 0B63  22          	DB	22H	; 35	80
 1998 0B64  20          	DB	20H	; 36	81
 1999 0B65  1E          	DB	1EH	; 37	82
 2000 0B66  1C          	DB	1CH	; 38	83
 2001 0B67  1B          	DB	1BH	; 39	84
 2002 0B68  19          	DB	19H	; 40	85
 2003 0B69  18          	DB	18H	; 41	86
 2004 0B6A  17          	DB	17H	; 42	87
 2005 0B6B  15          	DB	15H	; 43	88
 2006 0B6C  14          	DB	14H	; 44	89
 2007 0B6D  13          	DB	13H	;	90
 2008 0B6E  12          	DB	12H	;	91
 2009 0B6F  11          	DB	11H	;	92
 2010 0B70  10          	DB	10H	;	93
 2011 0B71  0F          	DB	0FH	;	94
 2012 0B72  0E          	DB	0EH	;	95
 2013 0B73  0D          	DB	0DH	;	96
 2014 0B74  0D          	DB	0DH	;	97
 2015 0B75  0C          	DB	0CH	;	98
 2016 0B76  0B          	DB	0BH	;	99
 2017 0B77  0B          	DB	0BH	;	100
 2018 0B78  0A          	DB	0AH	;	101
 2019 0B79  09          	DB	09H	;	102
 2020 0B7A  09          	DB	09H	;	103
 2021 0B7B  08          	DB	08H	;	104
 2022 0B7C  08          	DB	08H	;	105
 2023 0B7D  08          	DB	08H	;	106
 2024 0B7E  07          	DB	07H	;	107
 2025 0B7F  07          U0A7B:	DB	07H	;	108	(Zeiger auf USER-Eingabe Kanal 2)
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  31
BAC85   Z80

 2026 0B80  06          	DB	06H	;	109
 2027 0B81  06          	DB	06H	;	110
 2028 0B82  06          	DB	06H	;	111
 2029 0B83  05          	DB	05H	;	112
 2030 0B84  05          	DB	05H	;	113
 2031 0B85  05          	DB	05H	;	114
 2032 0B86  04          	DB	04H	;	115
 2033 0B87  04          	DB	04H	;	116
 2034 0B88  04          	DB	04H	;	117
 2035 0B89  04          	DB	04H	;	118
 2036 0B8A  04          	DB	04H	;	119
 2037 0B8B  03          	DB	03H	;	120
 2038 0B8C  03          	DB	03H	;	121
 2039 0B8D  03          	DB	03H	;	121
 2040 0B8E  03          	DB	03H	;	123
 2041 0B8F  03          	DB	03H	;	124
 2042 0B90  03          	DB	03H	;	125
 2043 0B91  02          	DB	02H	;	126
 2044 0B92  02          	DB	02H	;	127
 2045                   
 2046         0001      IF KC3
 2047                   ;
 2048                   ; Bit-Tabelle fuer Linien-UP
 2049                   ;
 2050 0B93  80 40 20 10 BITTAB:	DB	80H,40H,20H,10H,8,4,2,1
 2051                   ELSE
 2059                   ENDIF
 2060                   ;
 2061                   ; F-Tastenbelegung
 2062                   ;
 2063 0B9B  00          U0A95:	NOP
 2064 0B9C  2A 4C 0D    	DB	'*L',CR		; F1
 2065 0B9F  00          	NOP
 2066 0BA0  2A 41 0D    	DB	'*A',CR		; F2
 2067 0BA3  00          	NOP
 2068 0BA4  2A 57 0D    	DB	'*W',CR		; F3
 2069 0BA7  00          	NOP
 2070 0BA8  2A 54 0D    	DB	'*T',CR		; F4
 2071 0BAB  00          	NOP
 2072 0BAC  2A 43 0D    	DB	'*C',CR		; F5
 2073 0BAF  00          	NOP
 2074 0BB0  2A 4B 0D    	DB	'*K',CR		; F6
 2075 0BB3  00          	NOP
 2076 0BB4  1D          	DB	1DH		; Shift+F1 = RUN
 2077 0BB5  00          	NOP
 2078 0BB6  1E          	DB	1EH		; Shift+F2 = CONT
 2079 0BB7  00          	NOP
 2080 0BB8  1C          	DB	1CH		; Shift+F3 = LIST
 2081 0BB9  00          	NOP
 2082 0BBA  02 25 52 45 	DB	2,'%REBASIC',0DH,'CALL*'	; Shift+F4
 2083                   	ASCTXT	U040D
   12 0BC9  34          		DB	(U040D/100H AND 0FH) + 30H
   18 0BCA  30          		DB	(U040D/10H AND 0FH) + 30H
   22 0BCB  44          		DB	(U040D AND 0FH) + 37H
 2084 0BCC  0D          	DB	CR
 2085 0BCD  00          	NOP
 2086 0BCE  43 4C 4F 41 	DB	'CLOAD"'	; Shift+F5
 2087 0BD4  00          	NOP
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  32
BAC85   Z80

 2088 0BD5  02 43 53 41 	DB	2,'CSAVE"'	; Shift+F6
 2089 0BDC  00          	NOP
 2090                   ;
 2091                   ; Daten fuer Titelbild
 2092                   ;
 2093 0BDD  01 1F 01 1F U0AD7:	DB	01H,1FH,01H,1FH		; 43 Linien fuer Schallplatte
 2094 0BE1  02 05 06 0E 	DB	02H,05H,06H,0EH
 2095 0BE5  01 1E 08 1E 	DB	01H,1EH,08H,1EH
 2096 0BE9  03 05 07 0E 	DB	03H,05H,07H,0EH
 2097 0BED  01 1D 0B 1D 	DB	01H,1DH,0BH,1DH
 2098 0BF1  01 0B 01 0B 	DB	01H,0BH,01H,0BH
 2099 0BF5  01 1C 0E 1C 	DB	01H,1CH,0EH,1CH
 2100 0BF9  01 0A 05 0A 	DB	01H,0AH,05H,0AH		; 8. Linie
 2101 0BFD  01 1B 10 1B 	DB	01H,1BH,10H,1BH
 2102 0C01  01 09 07 09 	DB	01H,09H,07H,09H
 2103 0C05  01 1A 12 1A 	DB	01H,1AH,12H,1AH
 2104 0C09  02 08 08 08 	DB	02H,08H,08H,08H
 2105 0C0D  01 19 13 19 	DB	01H,19H,13H,19H
 2106 0C11  06 07 09 07 	DB	06H,07H,09H,07H
 2107 0C15  01 18 14 18 	DB	01H,18H,14H,18H		; 15. Linie
 2108 0C19  07 06 09 06 	DB	07H,06H,09H,06H
 2109 0C1D  01 17 15 17 	DB	01H,17H,15H,17H
 2110 0C21  08 05 0A 05 	DB	08H,05H,0AH,05H
 2111 0C25  01 16 16 16 	DB	01H,16H,16H,16H
 2112 0C29  08 04 0A 04 	DB	08H,04H,0AH,04H
 2113 0C2D  01 15 17 15 	DB	01H,15H,17H,15H
 2114 0C31  08 03 0A 03 	DB	08H,03H,0AH,03H		; 22. Linie
 2115 0C35  01 14 18 14 	DB	01H,14H,18H,14H
 2116 0C39  08 02 0A 02 	DB	08H,02H,0AH,02H
 2117 0C3D  01 13 19 13 	DB	01H,13H,19H,13H
 2118 0C41  05 01 1F 01 	DB	05H,01H,1FH,01H
 2119 0C45  01 12 1A 12 	DB	01H,12H,1AH,12H
 2120 0C49  0E 02 1E 02 	DB	0EH,02H,1EH,02H
 2121 0C4D  01 11 1A 11 	DB	01H,11H,1AH,11H		; 29. Linie
 2122 0C51  0E 03 1E 03 	DB	0EH,03H,1EH,03H
 2123 0C55  01 10 1B 10 	DB	01H,10H,1BH,10H
 2124 0C59  0E 04 1E 04 	DB	0EH,04H,1EH,04H
 2125 0C5D  01 0F 1B 0F 	DB	01H,0FH,1BH,0FH
 2126 0C61  0E 05 1E 05 	DB	0EH,05H,1EH,05H		; 34. Linie
 2127 0C65  02 0E 1C 0E 	DB	02H,0EH,1CH,0EH
 2128 0C69  0E 06 1E 06 	DB	0EH,06H,1EH,06H
 2129 0C6D  07 0D 1C 0D 	DB	07H,0DH,1CH,0DH
 2130 0C71  0D 07 1E 07 	DB	0DH,07H,1EH,07H
 2131 0C75  09 0C 1C 0C 	DB	09H,0CH,1CH,0CH
 2132 0C79  0D 08 1E 08 	DB	0DH,08H,1EH,08H
 2133 0C7D  0B 0B 1D 0B 	DB	0BH,0BH,1DH,0BH
 2134 0C81  0C 09 1D 09 	DB	0CH,09H,1DH,09H
 2135 0C85  0C 0A 1D 0A 	DB	0CH,0AH,1DH,0AH		; 43. Linie
 2136                   
 2137 0C89  00 08 05 00 	DB	00H,08H,05H,00H		; Linien fuer TAPE-Signal
 2138 0C8D  00 F8 05 00 	DB	00H,0F8H,05H,00H
 2139 0C91  00 08 05 00 	DB	00H,08H,05H,00H
 2140 0C95  00 F8 05 00 	DB	00H,0F8H,05H,00H
 2141 0C99  00 08 0A 00 	DB	00H,08H,0AH,00H
 2142 0C9D  00 F8 0A 00 	DB	00H,0F8H,0AH,00H
 2143                   
 2144 0CA1  020A        	DW	020AH		; Posision
 2145 0CA3  42 41 53 49 	DB	'BASICODE-3C Version 1.5d',0
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  33
BAC85   Z80

 2146                   
 2147 0CBC  0412        	DW	0412H		; Position
 2148         0001      IF KC3
 2149 0CBE  4B 43 38 35 	DB	'KC85/3',0
 2150 0CC5  060A        	DW	060AH		; Position
 2151 0CC7  5A 69 65 72 	DB	'Zierott, Arendt, Leubner'
 2152                   ELSE
 2160                   ENDIF
 2161 0CDF  0D 0A 0A 0A 	DB	CR,LF,LF,LF,LF,LF
 2162 0CE5  00          	DB	0
 2163                   ;
 2164                   ; Kaltstart (Initialisierung mit CALL*410)
 2165                   ;
 2166 0CE6  DD 6E 0E    KALT:	LD	L,(IX+14)	; KTAB
 2167 0CE9  DD 66 0F    	LD	H,(IX+15)	; aktueller Wert
 2168 0CEC  22 005E     	LD	(U004E),HL	; hier merken
 2169 0CEF  AF          	XOR	A		; A=0
 2170 0CF0  32 003B     	LD	(FLAGS),A
 2171 0CF3  32 0055     	LD	(U0045),A	; keine Kanaele geoeffnet
 2172                   ; 13.11.2023, Frank Ludwig:
 2173                   ; Beim Kaltstart wird das Basicodeprogramm nicht sauber geloescht.
 2174                   ; Die Zeiger werden zwar auf das Ende des Bascoders gesetzt.
 2175                   ; Die zwei Null-Bytes, die das Programmende kennzeichnen werden dort
 2176                   ; aber nicht eingetragen. Der Zeiger auf den Anfang der naechsten Zeile bleibt
 2177                   ; also bestehen.
 2178                   ;
 2179 0CF6  21 22D9     	LD	HL,Z1000	; Anfang BASICODE-Programm
 2180 0CF9  77          	LD	(HL),A		; Eintragen der beiden Null-Bytes
 2181 0CFA  23          	INC	HL
 2182 0CFB  77          	LD	(HL),A
 2183 0CFC  23          	INC	HL		; Programmende, Basicode-Programm loeschen
 2184                   
 2185 0CFD  3C          	INC	A		; A=1
 2186 0CFE  32 0340     	LD	(DUMMY),A	; Anzahl Dummyzeichen
 2187                   ;	LD	HL,U21F3	; Programmende, Basicode-Programm loeschen
 2188 0D01  22 03D7     	LD	(SVARPT),HL	; Anfang Variablenspeicher
 2189 0D04  22 03D9     	LD	(DVARPT),HL	; Liste der Feldvariablen
 2190 0D07  22 03DB     	LD	(FSLPTR),HL	; Erste freie Adresse hinter den Listen
 2191                   ;
 2192                   ; Warmstart (CALL*40D)
 2193                   ;
 2194 0D0A  CD 0441     WARM:	CALL	BCINIT		; Initialisierung, Druckertreiber kopieren
 2195 0D0D  21 0EF3     	LD	HL,BCMENU	; BASICODE-Menue
 2196 0D10  E5          	PUSH	HL		; als Ruecksprungadresse auf den Stack
 2197 0D11  3E C3       	LD	A,0C3H		; JUMP auf 38H eintragen
 2198 0D13  32 0038     	LD	(U0038),A	; RST38 abfangen
 2199 0D16  21 0413     	LD	HL,U0413	; "Systemabsturz"-Meldung
 2200 0D19  22 0039     	LD	(U0039),HL	; als Sprungadresse
 2201 0D1C  21 22D9     WARM1:	LD	HL,Z1000	; Anfang BASIC-Programm Zeile 1000
 2202 0D1F  22 035F     	LD	(PSTBEG),HL	; als sichtbaren Anfang einstellen
 2203 0D22  21 04AD     	LD	HL,U04C3	; eigene Routine fuer
 2204 0D25  22 B7C9     	LD	(IO_ERR),HL	; IO-ERROR regenerieren
 2205 0D28  CD 06BA     	CALL	U0643		; Original-KTAB einstellen (BRK/STOP aktiviert)
 2206 0D2B  3A 0055     	LD	A,(U0045)	; BASICODE-Kanaele geoeffnet?
 2207 0D2E  B7          	OR	A
 2208 0D2F  C8          	RET	Z		; nein, dann Logo und Speicherbelegung anzeigen
 2209 0D30  CD F01B     	CALL	IRMOFF		; ansonsten jetzt IRM OFF (???)
 2210 0D33  21 2034     	LD	HL,U1E81+16	; Ende von Sprungverteiler Datei Schliessen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  34
BAC85   Z80

 2211 0D36  87          WARM2:	ADD	A		; Entspechend der Bitnummer ...
 2212 0D37  2B          	DEC	HL		; ... Sprungadresse suchen
 2213 0D38  2B          	DEC	HL		;  (benutzt werden die Bits 0..3)
 2214 0D39  38 0E       	JR	C,WARM3		; Datei schliessen
 2215 0D3B  20 F9       	JR	NZ,WARM2	; noch weitere Dateien offen
 2216 0D3D  32 0055     	LD	(U0045),A	; wenn fertig, alle Kanaele geschlossen
 2217 0D40  21 1E4E     	LD	HL,U1CAB	; Text 'Bestaende geschlossen!'
 2218 0D43  CD 1C08     	CALL	U1AE5		; anzeigen
 2219 0D46  C3 C08C     	JP	SECST		; RESTART BASIC-Interpreter
 2220                   	;
 2221 0D49  F5          WARM3:	PUSH	AF
 2222 0D4A  E5          	PUSH	HL
 2223 0D4B  7E          	LD	A,(HL)		; Adresse aus Sprungverteiler lesen
 2224 0D4C  23          	INC	HL
 2225 0D4D  66          	LD	H,(HL)
 2226 0D4E  6F          	LD	L,A
 2227 0D4F  CD 176F     	CALL	CALLHL		; CALL (HL) hier Kanal schliessen
 2228 0D52  E1          	POP	HL
 2229 0D53  F1          	POP	AF
 2230 0D54  18 E0       	JR	WARM2
 2231                   ;
 2232                   ; abgefangene Eingaberoutine bei USER-INPUT 2 (07H)
 2233                   ; konvertiert bei Bedarf das ASCII-File zu BASIC, indem das ASCII-File
 2234                   ; als Eingabedaten verwendet wird.
 2235                   ;
 2236 0D56  3A 003B     U0C39:	LD	A,(FLAGS)
 2237 0D59  CB 47       	BIT	0,A		; laeuft gerade Konvertierung ASCII -> BASIC?
 2238 0D5B  C2 0E13     	JP	NZ,U0CE2	; ja
 2239 0D5E  2A 0358     	LD	HL,(CULINO)	; aktuelle Zeilennummer
 2240 0D61  23          	INC	HL
 2241 0D62  3A 034D     	LD	A,(AUTOFG)	; automatische Zeilennummerierung?
 2242 0D65  B4          	OR	H		; oder Programm-Mode?
 2243 0D66  B5          	OR	L
 2244 0D67  C2 0694     	JP	NZ,U062C	; dann direkt zu KBD
 2245 0D6A  CD 0D1C     	CALL	WARM1		; Programmanfang auf Zeile 1000 stellen und
 2246                   				; BASICODE-Dateien schliessen, falls noetig
 2247 0D6D  CD 0694     	CALL	U062C		; Eingabe ein Zeichen
 2248 0D70  FE 20       	CP	20H
 2249 0D72  D0          	RET	NC		; kein Steuerzeichen
 2250 0D73  FE 1D       	CP	1DH
 2251 0D75  28 41       	JR	Z,U1AAE		; RUN-Taste -> BASICODE-Routinen aktivieren
 2252 0D77  FE 1E       	CP	1EH
 2253 0D79  28 3D       	JR	Z,U1AAE		; CONT-Taste -> BASICODE-Routinen aktivieren
 2254 0D7B  FE 0D       	CP	CR
 2255 0D7D  C0          	RET	NZ		; nicht Enter
 2256                   
 2257                   ; bei Enter noch testen, was im Eingabepuffer steht:
 2258 0D7E  21 0361     	LD	HL,INPBUF	; Eingabepuffer
 2259 0D81  23          U0C66:	INC	HL
 2260 0D82  7E          	LD	A,(HL)
 2261 0D83  FE 20       	CP	20H
 2262 0D85  28 FA       	JR	Z,U0C66		; Leerzeichen uebergehen
 2263 0D87  C5          	PUSH	BC
 2264 0D88  D5          	PUSH	DE
 2265 0D89  11 205A     	LD	DE,U1EB7	; diese Befehle abfangen (CONT, GO, RUN, CSAVE)
 2266 0D8C  06 04       	LD	B,4		; 4 Befehle
 2267 0D8E  E5          U0C73:	PUSH	HL
 2268 0D8F  7E          U0C74:	LD	A,(HL)		; Zeichen aus Eingabepuffer
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  35
BAC85   Z80

 2269 0D90  E6 5F       	AND	5FH		; UPCASE
 2270 0D92  4F          	LD	C,A		; in C merken
 2271 0D93  1A          	LD	A,(DE)		; Zeichen aus Vergleichsspeicher
 2272 0D94  13          	INC	DE
 2273 0D95  B7          	OR	A		; Ende-0?
 2274 0D96  28 16       	JR	Z,U0C93		; Befehl erkannt
 2275 0D98  23          	INC	HL
 2276 0D99  B9          	CP	C
 2277 0D9A  28 F3       	JR	Z,U0C74		; stimmt, weitersuchen
 2278 0D9C  E1          	POP	HL
 2279 0D9D  1A          U0C82:	LD	A,(DE)
 2280 0D9E  13          	INC	DE
 2281 0D9F  B7          	OR	A		; Ende-0 suchen
 2282 0DA0  20 FB       	JR	NZ,U0C82
 2283 0DA2  10 EA       	DJNZ	U0C73		; bis alle 4 Befehle getestet sind
 2284 0DA4  D1          	POP	DE
 2285 0DA5  C1          	POP	BC
 2286 0DA6  7E          	LD	A,(HL)		; Eingabepuffer
 2287 0DA7  FE 2A       	CP	'*'		; Sonderbefehl mit * ?
 2288 0DA9  28 21       	JR	Z,U0CA5
 2289 0DAB  3E 0D       	LD	A,CR		; ansonsten einfach das CR zurueckgeben
 2290 0DAD  C9          	RET
 2291                   ;
 2292                   ; CONT, GO, RUN oder CSAVE erkannt:
 2293                   ;
 2294 0DAE  E3          U0C93:	EX	(SP),HL
 2295 0DAF  D1          	POP	DE
 2296 0DB0  78          	LD	A,B
 2297 0DB1  3D          	DEC	A
 2298 0DB2  28 11       	JR	Z,U0C9E		; CSAVE
 2299 0DB4  D1          	POP	DE
 2300 0DB5  C1          	POP	BC
 2301 0DB6  3E 0D       	LD	A,CR		; CR, RUN-Mode
 2302 0DB8  21 04B7     U1AAE:	LD	HL,U04C4	; Spezial-Routine fuer
 2303 0DBB  22 B7C9     	LD	(IO_ERR),HL	; IO-ERROR eintragen
 2304 0DBE  21 20C0     	LD	HL,ZEILE2	; BASICODE-Routinen freigeben fuer RUN-Modus
 2305 0DC1  22 035F     	LD	(PSTBEG),HL	; als Programmstart-Adresse eintragen
 2306 0DC4  C9          	RET
 2307                   	;
 2308 0DC5  C1          U0C9E:	POP	BC
 2309 0DC6  C1          	POP	BC
 2310 0DC7  77          	LD	(HL),A
 2311 0DC8  0E 07       	LD	C,7		; 7. Sonderbefehl
 2312 0DCA  18 1D       	JR	U0CBA		; aus Sprungtabelle lesen
 2313                   ;
 2314                   ; Sonderbehandlung Befehle mit *
 2315                   ;
 2316 0DCC  36 00       U0CA5:	LD	(HL),0		; Stern im Eingabepuffer loeschen
 2317                   ;	CALL	IRMON
 2318 0DCE  3E 31       	LD	A,DEFCOL	; Standardfarbe einstellen
 2319 0DD0  32 B7A3     	LD	(COLOR),A
 2320 0DD3  CD F01B     	CALL	IRMOFF
 2321 0DD6  CD C8BD     	CALL	TCHAR		; naechstes gueltiges Zeichen holen
 2322                   
 2323 0DD9  E6 5F       	AND	5FH		; upcase
 2324 0DDB  21 2044     	LD	HL,U1EA1	; 6 Kennbuchstaben
 2325 0DDE  01 0006     	LD	BC,6
 2326 0DE1  ED B1       	CPIR
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  36
BAC85   Z80

 2327 0DE3  28 04       	JR	Z,U0CBA		; gefunden
 2328 0DE5  50          	LD	D,B		; D=0
 2329 0DE6  59          	LD	E,C		; E=0
 2330 0DE7  0E 06       	LD	C,6		; 6. Befehl = Menue
 2331 0DE9  79          U0CBA:	LD	A,C
 2332 0DEA  CD F018     	CALL	IRMON
 2333 0DED  FD 2A 0356  	LD	IY,(STDPTR)	; RAM-Mindestgroesse (KC85/3=7EFF KC85/4=BEFF)
 2334 0DF1  FD 2B       	DEC	IY		; davor gehen und als neuen Stack definieren
 2335         0001      IF KC3
 2336 0DF3  FD 22 B7CB  	LD	(0B7CBH),IY	; Zwischenspeicher fuer SP bei CAOS 3.4 und OS/Pi
 2337                   ENDIF
 2338 0DF7  CD F01B     	CALL	IRMOFF
 2339 0DFA  01 C08C     	LD	BC,SECST	; RESTART BASIC-Interpreter
 2340 0DFD  C5          	PUSH	BC		; auf Stack legen als RET-Adresse
 2341 0DFE  21 204A     	LD	HL,U1EA7	; Tabelle der Sprungadressen der Routinen
 2342 0E01  4F          	LD	C,A
 2343 0E02  06 00       	LD	B,0		; BC=Nr. der Routine
 2344 0E04  09          	ADD	HL,BC
 2345 0E05  09          	ADD	HL,BC		; Position in Tabelle berechnen
 2346 0E06  4E          	LD	C,(HL)
 2347 0E07  23          	INC	HL
 2348 0E08  46          	LD	B,(HL)		; BC=Sprungadresse
 2349 0E09  C5          	PUSH	BC		; auf Stack legen zum Start
 2350 0E0A  EB          	EX	DE,HL
 2351 0E0B  FE 07       	CP	7
 2352 0E0D  C4 05DC     	CALL	NZ,CLS		; Bildschirm loeschen, ausser bei CSAVE
 2353 0E10  C3 CB61     	JP	CRWDY2		; Anzeige CR, LF, Dummyzeichen
 2354                   ;
 2355                   ; USER-Input 2 waehrend Uebersetzung ASCII -> BASIC
 2356                   ;
 2357 0E13  D5          U0CE2:	PUSH	DE
 2358 0E14  CD 067B     	CALL	U0613		; Taste gedrueckt?
 2359 0E17  FE 03       	CP	3		; BRK?
 2360 0E19  28 17       	JR	Z,U0D01		; ja
 2361 0E1B  2A 0049     	LD	HL,(CPOINT)	; Pufferzeiger
 2362 0E1E  F3          	DI
 2363 0E1F  DB 88       	IN	A,(PIOAD)
 2364 0E21  CB 97       	RES	2,A		; IRM aus
 2365 0E23  D3 88       	OUT	(PIOAD),A
 2366 0E25  7E          	LD	A,(HL)
 2367 0E26  ED 5B 0047  	LD	DE,(U0033)	; Ende ASCII-File
 2368 0E2A  1B          	DEC	DE
 2369 0E2B  E5          	PUSH	HL
 2370 0E2C  B7          	OR	A
 2371 0E2D  ED 52       	SBC	HL,DE
 2372 0E2F  E1          	POP	HL
 2373 0E30  38 29       	JR	C,U0D2A
 2374 0E32  4F          U0D01:	LD	C,A
 2375 0E33  3A 003B     	LD	A,(FLAGS)
 2376 0E36  E6 FC       	AND	0FCH		; Bit 0 und 1 ruecksetzen
 2377 0E38  32 003B     	LD	(FLAGS),A
 2378 0E3B  DB 88       	IN	A,(PIOAD)
 2379 0E3D  CB D7       	SET	2,A		; IRM ein
 2380 0E3F  D3 88       	OUT	(PIOAD),A
 2381 0E41  FB          	EI
 2382 0E42  2A 0051     	LD	HL,(U0041)	; gespeicherte Adresse fuer UOUT1
 2383 0E45  22 B7BE     	LD	(UOUT1+1),HL	; wieder eintragen
 2384 0E48  2A 003C     	LD	HL,(XPOS2)	; gespeicherte Adresse fuer OUTAB
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  37
BAC85   Z80

 2385 0E4B  22 B7B9     	LD	(OUTAB),HL	; wieder eintragen
 2386 0E4E  79          	LD	A,C
 2387 0E4F  FE 1D       	CP	1DH		; RUN?
 2388 0E51  D1          	POP	DE
 2389 0E52  CA 0DB8     	JP	Z,U1AAE		; -> BASICODE-Routinen aktivieren
 2390 0E55  D6 03       	SUB	3
 2391 0E57  C8          	RET	Z		; BRK
 2392 0E58  3E 0D       	LD	A,CR
 2393 0E5A  C9          	RET
 2394                   	;
 2395 0E5B  FE 0D       U0D2A:	CP	CR
 2396 0E5D  20 05       	JR	NZ,U0D33
 2397 0E5F  CD 0AA2     	CALL	U09AE		; IRM-Adresse auf links/unten einstellen
 2398 0E62  18 0C       	JR	U0D3F
 2399                   	;
 2400 0E64  FE 20       U0D33:	CP	20H		; Steuerzeichen?
 2401 0E66  38 04       	JR	C,U0D3B
 2402 0E68  FE 7F       	CP	7FH
 2403 0E6A  38 04       	JR	C,U0D3F
 2404 0E6C  3E 23       U0D3B:	LD	A,'#'		; Ersatz fuer nicht darstellbare Zeichen
 2405 0E6E  18 05       	JR	U0D44
 2406                   	;
 2407 0E70  47          U0D3F:	LD	B,A
 2408 0E71  CD 0E84     	CALL	U0D53		; Spezialbehandlung fuer DATA, REM und LOG
 2409 0E74  78          	LD	A,B
 2410 0E75  23          U0D44:	INC	HL
 2411 0E76  22 0049     	LD	(CPOINT),HL	; Pufferzeiger
 2412 0E79  D1          	POP	DE
 2413 0E7A  47          	LD	B,A
 2414 0E7B  DB 88       	IN	A,(PIOAD)
 2415 0E7D  CB D7       	SET	2,A		; IRM ein
 2416 0E7F  D3 88       	OUT	(PIOAD),A
 2417 0E81  FB          	EI
 2418 0E82  78          	LD	A,B
 2419 0E83  C9          	RET
 2420                   ;
 2421                   ; Spezialbehandlung fuer DATA, REM und LOG
 2422                   ;
 2423 0E84  3A 003B     U0D53:	LD	A,(FLAGS)
 2424 0E87  E6 40       	AND	40H		; Bit 6?
 2425 0E89  20 55       	JR	NZ,U0DAF
 2426 0E8B  78          	LD	A,B
 2427 0E8C  FE 22       	CP	'"'
 2428 0E8E  28 30       	JR	Z,U0D8F		; Zeichenkette
 2429 0E90  E5          	PUSH	HL
 2430 0E91  23          	INC	HL
 2431 0E92  FE 4C       	CP	'L'
 2432 0E94  28 38       	JR	Z,U0D9D
 2433 0E96  FE 52       	CP	'R'
 2434 0E98  28 19       	JR	Z,U0D82
 2435 0E9A  FE 44       	CP	'D'
 2436 0E9C  20 2E       	JR	NZ,U0D9B
 2437                   ; D
 2438 0E9E  7E          	LD	A,(HL)
 2439 0E9F  FE 41       	CP	'A'
 2440 0EA1  20 29       	JR	NZ,U0D9B
 2441                   ; DA
 2442 0EA3  23          	INC	HL
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  38
BAC85   Z80

 2443 0EA4  7E          	LD	A,(HL)
 2444 0EA5  FE 54       	CP	'T'
 2445 0EA7  20 23       	JR	NZ,U0D9B
 2446                   ; DAT
 2447 0EA9  23          	INC	HL
 2448 0EAA  7E          	LD	A,(HL)
 2449 0EAB  FE 41       	CP	'A'
 2450 0EAD  20 1D       	JR	NZ,U0D9B
 2451                   ; DATA
 2452 0EAF  3E 3A       	LD	A,':'
 2453 0EB1  18 0C       	JR	U0D8E
 2454                   	;
 2455                   ; R
 2456 0EB3  7E          U0D82:	LD	A,(HL)
 2457 0EB4  FE 45       	CP	'E'
 2458 0EB6  20 14       	JR	NZ,U0D9B
 2459                   ; RE
 2460 0EB8  23          	INC	HL
 2461 0EB9  7E          	LD	A,(HL)
 2462 0EBA  FE 4D       	CP	'M'
 2463 0EBC  20 0E       	JR	NZ,U0D9B
 2464                   ; REM
 2465 0EBE  AF          	XOR	A
 2466 0EBF  E1          U0D8E:	POP	HL
 2467 0EC0  32 004C     U0D8F:	LD	(U003C),A
 2468 0EC3  3A 003B     	LD	A,(FLAGS)
 2469 0EC6  F6 40       	OR	40H		; Bit 6 setzen
 2470 0EC8  32 003B     	LD	(FLAGS),A
 2471 0ECB  C9          	RET
 2472                   	;
 2473                   ; alles andere
 2474 0ECC  E1          U0D9B:	POP	HL
 2475 0ECD  C9          	RET
 2476                   	;
 2477                   ; L
 2478 0ECE  7E          U0D9D:	LD	A,(HL)
 2479 0ECF  FE 4F       	CP	'O'
 2480 0ED1  20 F9       	JR	NZ,U0D9B
 2481                   ; LO
 2482 0ED3  23          	INC	HL
 2483 0ED4  7E          	LD	A,(HL)
 2484 0ED5  FE 47       	CP	'G'
 2485 0ED7  20 F3       	JR	NZ,U0D9B
 2486                   ; LOG
 2487 0ED9  E1          	POP	HL
 2488 0EDA  23          	INC	HL
 2489 0EDB  23          	INC	HL
 2490 0EDC  36 4E       	LD	(HL),'N'	; LOG -> LN
 2491 0EDE  2B          	DEC	HL
 2492 0EDF  C9          	RET
 2493                   	;
 2494 0EE0  3A 004C     U0DAF:	LD	A,(U003C)
 2495 0EE3  B8          	CP	B
 2496 0EE4  28 04       	JR	Z,U0DB9
 2497 0EE6  3E 0D       	LD	A,CR
 2498 0EE8  B8          	CP	B
 2499 0EE9  C0          	RET	NZ
 2500 0EEA  3A 003B     U0DB9:	LD	A,(FLAGS)
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  39
BAC85   Z80

 2501 0EED  E6 BF       	AND	0BFH		; Bit 6 ruecksetzen
 2502 0EEF  32 003B     	LD	(FLAGS),A
 2503 0EF2  C9          	RET
 2504                   ;
 2505                   ; Speicherbelegung anzeigen
 2506                   ;
 2507 0EF3  21 0007     BCMENU:	LD	HL,7		; Stacktiefe in Bytes-1
 2508                   ;
 2509                   ; BASICODE-Menu
 2510                   ;
 2511 0EF6  E5          STAR:	PUSH	HL
 2512 0EF7  CD 04C1     	CALL	TITEL		; Titelbild zeichnen
 2513 0EFA  2A 03D7     	LD	HL,(SVARPT)	; Ende BASIC-Programm
 2514 0EFD  11 22DB     	LD	DE,U21F3	; Anfang BASIC-Programm
 2515 0F00  B7          	OR	A
 2516 0F01  ED 52       	SBC	HL,DE		; berechnen
 2517 0F03  11 1EBB     	LD	DE,U1D18	; Text "Programm:"
 2518 0F06  CD 0F3B     	CALL	U0E0A		; Text+Wert anzeigen
 2519 0F09  CD 1BD7     	CALL	U1AB5		; ASCII-File und BASIC-Programm im Speicher?
 2520 0F0C  E6 02       	AND	2
 2521 0F0E  21 0000     	LD	HL,0
 2522 0F11  28 09       	JR	Z,U0DEB		; kein ASCII-File im Speicher
 2523 0F13  2A 0047     	LD	HL,(U0033)	; Ende ASCII-File
 2524 0F16  ED 5B 0045  	LD	DE,(U0031)	; Beginn ASCII-File
 2525 0F1A  ED 52       	SBC	HL,DE
 2526 0F1C  11 1EC7     U0DEB:	LD	DE,U1D24	; Text "ASC-File:"
 2527 0F1F  CD 0F3B     	CALL	U0E0A		; Text+Wert anzeigen
 2528 0F22  D1          	POP	DE
 2529 0F23  21 FFF3     	LD	HL,-13		; freien Speicher
 2530 0F26  19          	ADD	HL,DE
 2531 0F27  39          	ADD	HL,SP
 2532 0F28  ED 5B 03DB  	LD	DE,(FSLPTR)	; erste freie Adresse hinter den Variablen
 2533 0F2C  B7          	OR	A
 2534 0F2D  ED 52       	SBC	HL,DE
 2535 0F2F  11 1ED1     	LD	DE,U1D2E	; Text "Frei:"
 2536 0F32  CD 0F3B     	CALL	U0E0A		; anzeigen
 2537 0F35  21 1EDB     	LD	HL,U1D38	; Text "BASICODE-Menue..."
 2538 0F38  C3 C5F1     	JP	TEXTOE		; anzeigen
 2539                   ;
 2540                   ; Ausgabe Prgrammgroesse in Bytes
 2541                   ;
 2542 0F3B  EB          U0E0A:	EX	DE,HL
 2543 0F3C  D5          	PUSH	DE
 2544 0F3D  CD C5F1     	CALL	TEXTOE		; Textausgabe
 2545 0F40  D1          	POP	DE
 2546 0F41  CD D82A     	CALL	NUMBO1		; Zahl ausgeben
 2547 0F44  21 1EB2     	LD	HL,U1D0F	; Text "Bytes", CR, LF
 2548 0F47  C3 C5F1     	JP	TEXTOE		; Textausgabe
 2549                   ;
 2550                   ; *L - Laden, Uebersetzen und Starten
 2551                   ;
 2552 0F4A  2A 22D9     STAR_L:	LD	HL,(Z1000)	; Anfang BASIC-Programm
 2553 0F4D  7C          	LD	A,H
 2554 0F4E  B5          	OR	L
 2555 0F4F  28 18       	JR	Z,U0E38		; kein BASIC-Programm im Speicher
 2556 0F51  21 1E19     	LD	HL,U1C76	; Text 'Programm wurde geloescht!'
 2557 0F54  CD 1C08     	CALL	U1AE5		; anzeigen
 2558 0F57  21 0000     	LD	HL,0		; Programm loeschen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  40
BAC85   Z80

 2559 0F5A  22 22D9     	LD	(Z1000),HL	; Anfang BASIC-Programm
 2560 0F5D  21 22DB     	LD	HL,U21F3
 2561 0F60  22 03D7     	LD	(SVARPT),HL	; Programmende+1
 2562 0F63  22 03D9     	LD	(DVARPT),HL
 2563 0F66  22 03DB     	LD	(FSLPTR),HL	; erste freie Adresse hinter den Variablen
 2564 0F69  CD 0F92     U0E38:	CALL	STAR_A		; Einlesen ASCII-File
 2565 0F6C  3A 0053     	LD	A,(U0043)
 2566 0F6F  B7          	OR	A		; fehlerfrei eingelesen?
 2567 0F70  C0          	RET	NZ		; nein
 2568 0F71  2A 0047     	LD	HL,(U0033)	; Ende ASCII-File
 2569 0F74  36 1D       	LD	(HL),1DH	; RUN anhaengen
 2570 0F76  23          	INC	HL
 2571 0F77  22 0047     	LD	(U0033),HL	; Ende ASCII-File
 2572 0F7A  C3 1028     	JP	STAR_T		; Uebersetzen ASCII-File nach BASIC
 2573                   ;
 2574                   ; CSAVE - Sonderbehandlung
 2575                   ;
 2576 0F7D  AF          CSAVE:	XOR	A		; kein Kopierschutz
 2577 0F7E  32 035D     	LD	(DATBYT),A
 2578 0F81  CD DCB0     	CALL	CASS01		; *.SSS Name holen
 2579 0F84  2A 03D7     	LD	HL,(SVARPT)	; Programmende+1
 2580 0F87  11 22D9     	LD	DE,Z1000	; Anfang BASIC-Programm
 2581 0F8A  B7          	OR	A
 2582 0F8B  ED 52       	SBC	HL,DE		; Laenge des BASICODE-Programms
 2583 0F8D  44          	LD	B,H
 2584 0F8E  4D          	LD	C,L
 2585                   ;	LD	DE,Z1000	; Anfang BASIC-Programm (doppelt gemoppelt ???)
 2586 0F8F  C3 DD57     	JP	CSAVE0		; BASIC-Programm abspeichern
 2587                   ;
 2588                   ; *A - Einlesen ASCII-File
 2589                   ;
 2590 0F92  CD 1A39     STAR_A:	CALL	U18EC		; BASICODE Bandeingabe vorbereiten
 2591 0F95  CD 1A83     U0E67:	CALL	BCSYN		; Synchronisation mit Frequenzmessung
 2592 0F98  3E FF       	LD	A,0FFH
 2593 0F9A  32 0053     	LD	(U0043),A
 2594 0F9D  2A 03D7     	LD	HL,(SVARPT)	; Programmende+1
 2595 0FA0  22 0045     	LD	(U0031),HL	; Beginn ASCII-File
 2596 0FA3  CD 1AF4     U0E75:	CALL	BCIN		; ein Byte lesen
 2597 0FA6  38 FB       	JR	C,U0E75		; Fehler, wiederholen
 2598 0FA8  C2 1964     	JP	NZ,BCIOLD	; Taste gedrueckt -> ISR (Eingabe) zurueckstellen
 2599 0FAB  FE 02       	CP	2
 2600 0FAD  28 08       	JR	Z,U0E89		; Startbyte erkannt
 2601 0FAF  21 1DA1     	LD	HL,U1BFE	; Text 'kein BASICODE-Programm!'
 2602 0FB2  CD 1C08     	CALL	U1AE5		; anzeigen
 2603 0FB5  18 DE       	JR	U0E67
 2604                   	;
 2605 0FB7  CD 1AF4     U0E89:	CALL	BCIN		; ein Byte lesen
 2606 0FBA  38 18       	JR	C,U0EA6		; Fehler oder letztes Byte
 2607 0FBC  20 26       	JR	NZ,U0EB6	; Taste gedrueckt
 2608 0FBE  E5          	PUSH	HL
 2609 0FBF  ED 72       	SBC	HL,SP		; Stack erreicht?
 2610 0FC1  E1          	POP	HL
 2611 0FC2  38 0C       	JR	C,U0EA2
 2612 0FC4  CD 1C05     	CALL	U0ECA		; 'Speichergrenze erreicht!'
 2613 0FC7  21 FFF8     	LD	HL,-8
 2614 0FCA  39          	ADD	HL,SP
 2615 0FCB  2B          	DEC	HL
 2616 0FCC  36 0D       	LD	(HL),CR
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  41
BAC85   Z80

 2617 0FCE  18 14       	JR	U0EB6
 2618                   	;
 2619 0FD0  77          U0EA2:	LD	(HL),A		; Byte eintragen
 2620 0FD1  23          	INC	HL		; naechste Adresse
 2621 0FD2  18 E3       	JR	U0E89		; und weiter
 2622                   	;
 2623 0FD4  2B          U0EA6:	DEC	HL
 2624 0FD5  AF          	XOR	A		; A=0, wenn OK
 2625 0FD6  D9          	EXX
 2626 0FD7  24          	INC	H		; Pruefsumme
 2627 0FD8  25          	DEC	H		; richtig?
 2628 0FD9  D9          	EXX
 2629 0FDA  28 0A       	JR	Z,U0EB8		; ja
 2630 0FDC  E5          	PUSH	HL
 2631 0FDD  21 1D44     	LD	HL,U1BA1	; Text 'Lesefehler erkannt!'
 2632 0FE0  CD 1C08     	CALL	U1AE5		; anzeigen
 2633 0FE3  E1          	POP	HL
 2634 0FE4  3E FF       U0EB6:	LD	A,0FFH
 2635 0FE6  32 0053     U0EB8:	LD	(U0043),A	; FF=Lesefehler, 00=OK
 2636 0FE9  22 0047     	LD	(U0033),HL	; Ende ASCII-File
 2637 0FEC  CD 1964     	CALL	BCIOLD		; umgeleitete ISR (Eingabe) zurueckstellen
 2638 0FEF  3A 003B     	LD	A,(FLAGS)
 2639 0FF2  F6 02       	OR	2		; Bit 1 setzen, ASCII-File im Speicher
 2640 0FF4  32 003B     	LD	(FLAGS),A
 2641 0FF7  C9          	RET
 2642                   ;
 2643                   ; *W - Retten ASCII-File
 2644                   ;
 2645 0FF8  3A 003B     STAR_W:	LD	A,(FLAGS)
 2646 0FFB  E6 02       	AND	2		; Bit 1?
 2647 0FFD  CA 1BFC     	JP	Z,U1ADC		; kein ASCII-File im Speicher!
 2648 1000  CD 1A66     	CALL	U1919		; BASICODE Bandsusgabe vorbereiten
 2649 1003  CD 1AD1     	CALL	VTON		; 5 Sekunden Vorton
 2650 1006  26 00       	LD	H,0		; Startwert fuer Pruefsumme
 2651 1008  D9          	EXX
 2652 1009  3E 02       	LD	A,2		; Startbyte STX (Start of Text)
 2653 100B  CD 1B52     	CALL	BCOUT		; ein Byte schreiben
 2654 100E  2A 0045     	LD	HL,(U0031)	; Beginn ASCII-File
 2655 1011  ED 5B 0047  	LD	DE,(U0033)	; Ende ASCII-File
 2656 1015  7E          U0EED:	LD	A,(HL)		; Zeichen aus Speicher holen
 2657 1016  23          	INC	HL
 2658 1017  CD 1B52     	CALL	BCOUT		; ein Byte schreiben
 2659 101A  CD 068A     	CALL	U0622		; Taste gedrueckt?
 2660 101D  C2 1957     	JP	NZ,BCOOLD	; ja, umgeleitete ISR (Ausgabe) zurueckstellen
 2661 1020  CD C689     	CALL	CPREG		; ASCII-File fertig?
 2662 1023  20 F0       	JR	NZ,U0EED	; nein, weiter
 2663 1025  C3 1945     	JP	U18D0		; Ende-Byte, Pruefbyte und ISR rueckstellen
 2664                   ;
 2665                   ; *T - Uebersetzen ASCII-File ==> BASIC
 2666                   ;
 2667 1028  CD 1BD7     STAR_T:	CALL	U1AB5		; ASCII-File und BASIC-Programm im Speicher?
 2668 102B  CB 4F       	BIT	1,A
 2669 102D  CA 1BFC     	JP	Z,U1ADC		; kein ASCII-File im Speicher!
 2670 1030  3A 003B     	LD	A,(FLAGS)
 2671 1033  F6 01       	OR	1		; Bit 0 setzen
 2672 1035  E6 BF       	AND	0BFH		; Bit 6 ruecksetzen
 2673 1037  32 003B     	LD	(FLAGS),A
 2674 103A  2A 0045     	LD	HL,(U0031)	; Beginn ASCII-File
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  42
BAC85   Z80

 2675 103D  22 0049     	LD	(CPOINT),HL	; Pufferzeiger
 2676 1040  CD 0AA2     	CALL	U09AE		; IRM-Adresse auf links/unten einstellen
 2677 1043  CD F018     	CALL	IRMON
 2678 1046  2A B7BE     	LD	HL,(UOUT1+1)	; Adresse der aktuellen Druckerausgabe
 2679 1049  22 0051     	LD	(U0041),HL	; hier merken
 2680 104C  21 0AC0     	LD	HL,U09DD	; Zeichen auf untere Zeile malen
 2681 104F  22 B7BE     	LD	(UOUT1+1),HL	; jetzt hier eintragen
 2682 1052  2A B7B9     	LD	HL,(OUTAB)	; Adresse Ausgabezeiger
 2683 1055  22 003C     	LD	(XPOS2),HL	; zwischenspeichern
 2684 1058  21 13FB     	LD	HL,U12DF+1	; Zeiger auf 02=UOT1
 2685 105B  22 B7B9     	LD	(OUTAB),HL	; Ausgaberoutine umstellen, damit Anzeige auf
 2686 105E  C3 07D0     	JP	IOFRET		; der unteren Bildschirmzeile erfolgt
 2687                   ;
 2688                   ; *C - Uebersetzen BASIC ==> ASCII
 2689                   ;
 2690 1061  CD 1BD7     STAR_C:	CALL	U1AB5		; ASCII-File und BASIC-Programm im Speicher?
 2691 1064  CB 47       	BIT	0,A		; BASIC-Programm?
 2692 1066  20 06       	JR	NZ,U0F52	; vorhanden
 2693 1068  21 1E33     	LD	HL,U1C90	; Text 'kein Programm im Speicher!'
 2694 106B  C3 1C08     	JP	U1AE5		; anzeigen
 2695                   	;
 2696 106E  21 22D8     U0F52:	LD	HL,Z1000-1	; Anfang BASIC-Programm
 2697 1071  3A 003B     U0F55:	LD	A,(FLAGS)
 2698 1074  E6 3F       	AND	3FH		; Bit 6 und 7 (Fehler) ruecksetzen
 2699 1076  32 003B     	LD	(FLAGS),A
 2700 1079  23          	INC	HL
 2701 107A  7E          	LD	A,(HL)		; 2x 00 hintereinander
 2702 107B  23          	INC	HL		; kennzeichnet Programmende
 2703 107C  B6          	OR	(HL)
 2704 107D  CA 112E     	JP	Z,U1012		; fertig
 2705 1080  23          	INC	HL
 2706 1081  CD 067B     	CALL	U0613		; Taste gedrueckt?
 2707 1084  FE 03       	CP	3		; BRK?
 2708 1086  C8          	RET	Z		; Abbruch mit BRK
 2709 1087  5E          	LD	E,(HL)
 2710 1088  23          	INC	HL
 2711 1089  56          	LD	D,(HL)		; DE = Zeilennummer
 2712 108A  CD C8BD     U0F6E:	CALL	TCHAR		; naechstes gueltiges Zeichen holen
 2713 108D  B7          	OR	A
 2714 108E  28 7A       	JR	Z,U0FEE		; 0 = Zeilenende
 2715 1090  FE 22       	CP	'"'
 2716 1092  28 6D       	JR	Z,U0FE5		; Beginn einer Zeichenkette
 2717 1094  FE 8E       	CP	8EH		; REM?
 2718 1096  28 69       	JR	Z,U0FE5		; ja
 2719 1098  FE 80       	CP	80H
 2720 109A  38 EE       	JR	C,U0F6E		; kein Token
 2721 109C  E5          	PUSH	HL
 2722 109D  0E 80       	LD	C,80H		; Bit 7 setzen: Regelverstoss
 2723 109F  FE 8B       	CP	8BH		; RESTORE?
 2724 10A1  20 05       	JR	NZ,U0F8C
 2725 10A3  CD C8BD     	CALL	TCHAR		; naechstes gueltiges Zeichen holen
 2726 10A6  18 4D       	JR	U0FD9
 2727                   	;
 2728 10A8  FE B1       U0F8C:	CP	0B1H		; AND?
 2729 10AA  28 08       	JR	Z,U0F98
 2730 10AC  FE B2       	CP	0B2H		; OR?
 2731 10AE  28 04       	JR	Z,U0F98
 2732 10B0  FE AA       	CP	0AAH		; NOT?
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  43
BAC85   Z80

 2733 10B2  20 23       	JR	NZ,U0FBB
 2734                   	;
 2735                   ; logische Operationen mit AND, OR oder NOT erfordern Klammern,
 2736                   ; wenn Vergleichsoperatioren benutzt werden
 2737 10B4  CD C8BD     U0F98:	CALL	TCHAR		; naechstes gueltiges Zeichen holen
 2738 10B7  FE 28       	CP	'('		; folgt eine Klammer?
 2739 10B9  28 07       	JR	Z,U0FA6
 2740 10BB  7E          U0F9F:	LD	A,(HL)
 2741 10BC  23          	INC	HL
 2742 10BD  CD 1213     	CALL	U10F7		; Test auf Verleichsoperatoren
 2743 10C0  20 F9       	JR	NZ,U0F9F	; weitersuchen bis Zeilenende
 2744 10C2  E1          U0FA6:	POP	HL
 2745 10C3  E5          	PUSH	HL
 2746 10C4  2B          U0FA8:	DEC	HL
 2747 10C5  7E          	LD	A,(HL)
 2748 10C6  FE 20       	CP	' '
 2749 10C8  28 FA       	JR	Z,U0FA8		; Leerzeichen uebergehen
 2750 10CA  FE 29       	CP	')'
 2751 10CC  28 27       	JR	Z,U0FD9		; Klammer zu gefunden, OK
 2752 10CE  2B          U0FB2:	DEC	HL
 2753 10CF  7E          	LD	A,(HL)
 2754 10D0  CD 1217     	CALL	U10FB
 2755 10D3  20 F9       	JR	NZ,U0FB2
 2756 10D5  18 1E       	JR	U0FD9
 2757                   	;
 2758                   ; auf NEXT muss Variable folgen
 2759 10D7  FE 82       U0FBB:	CP	82H		; NEXT?
 2760 10D9  20 10       	JR	NZ,U0FCF
 2761 10DB  CD C8BD     	CALL	TCHAR		; naechstes gueltiges Zeichen holen
 2762 10DE  FE 5B       	CP	'Z'+1
 2763 10E0  30 06       	JR	NC,U0FCC	; auf NEXT folgt keine Variable
 2764 10E2  FE 41       	CP	'A'
 2765 10E4  38 02       	JR	C,U0FCC		; auf NEXT folgt keine Variable
 2766 10E6  3E 01       	LD	A,1
 2767 10E8  3D          U0FCC:	DEC	A		; Z=1, wenn Variable folgt
 2768 10E9  18 0A       	JR	U0FD9
 2769                   	;
 2770 10EB  21 1FB6     U0FCF:	LD	HL,U1E13	; Tabelle mit erlaubten Token
 2771 10EE  01 002E     	LD	BC,U1E41-U1E13	; Anzahl
 2772 10F1  ED B1       	CPIR
 2773 10F3  0E 40       	LD	C,40H		; Bit 6 setzen: unerlaubter Befehl
 2774 10F5  E1          U0FD9:	POP	HL
 2775 10F6  28 92       	JR	Z,U0F6E
 2776 10F8  3A 003B     	LD	A,(FLAGS)
 2777 10FB  B1          	OR	C		; Bit 6 oder 7 setzen
 2778 10FC  32 003B     	LD	(FLAGS),A
 2779 10FF  18 89       	JR	U0F6E
 2780                   	;
 2781                   ;Zeichenkette oder REM
 2782 1101  4F          U0FE5:	LD	C,A		; C = '"'
 2783 1102  23          U0FE6:	INC	HL		; naechstes Zeichen
 2784 1103  7E          	LD	A,(HL)		; holen
 2785 1104  B9          	CP	C		; Ende der Zeichenkette?
 2786 1105  28 83       	JR	Z,U0F6E		; ja, weiter testen
 2787 1107  B7          	OR	A		; 0 = Zeilenende
 2788 1108  20 F8       	JR	NZ,U0FE6	; ansonsten weiter nach dem Ende der Zeichenkette suchen
 2789                   	;
 2790                   ;Zeilenende
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  44
BAC85   Z80

 2791 110A  3A 003B     U0FEE:	LD	A,(FLAGS)
 2792 110D  CB 77       	BIT	6,A
 2793 110F  20 07       	JR	NZ,U0FFC	; -> unerlaubter Befehl
 2794 1111  CB 7F       	BIT	7,A
 2795 1113  20 08       	JR	NZ,U1001	; -> Regelverstoss
 2796 1115  C3 1071     	JP	U0F55
 2797                   	;
 2798 1118  21 1DD0     U0FFC:	LD	HL,U1C2D	; Text 'unerlaubter BASICODE-Befehl!'
 2799 111B  18 03       	JR	U1004
 2800                   	;
 2801 111D  21 1DED     U1001:	LD	HL,U1C4A	; Text 'Regelverstoss!'
 2802 1120  D5          U1004:	PUSH	DE
 2803 1121  CD 1C08     	CALL	U1AE5		; anzeigen
 2804 1124  D1          	POP	DE
 2805 1125  CD C4BB     	CALL	ZPOIT
 2806 1128  D5          	PUSH	DE
 2807 1129  23          	INC	HL
 2808 112A  23          	INC	HL
 2809 112B  C3 C401     	JP	EDITO2+3
 2810                   	;
 2811                   ; BASIC-Programm fertig geprueft, Beginn der Konvertierung BASIC -> ASCII
 2812 112E  E5          U1012:	PUSH	HL		; Ende BASIC-Programm
 2813 112F  11 22DA     	LD	DE,Z1000+1	; Beginn BASIC-Programm
 2814 1132  B7          	OR	A		; CY=0
 2815 1133  ED 52       	SBC	HL,DE
 2816 1135  4D          	LD	C,L
 2817 1136  44          	LD	B,H		; BC = Laenge BASIC-Programm
 2818 1137  21 FFD0     	LD	HL,-48		; 48 Byte fuer Stack frei halten
 2819 113A  39          	ADD	HL,SP
 2820 113B  EB          	EX	DE,HL		; DE = 48 Byte vor Stack
 2821 113C  E1          	POP	HL		; Ende BASIC-Programm
 2822 113D  ED B8       	LDDR			; BASIC-Programm hier hin verschieben
 2823 113F  ED 43 22D9  	LD	(Z1000),BC	; kein BASIC-Programm mehr im Speicher
 2824 1143  EB          	EX	DE,HL		; HL = Beginn des verschobenen BASIC-Programms
 2825 1144  01 22DB     	LD	BC,U21F3	; Hier ASCII-File ablegen
 2826 1147  ED 43 03D7  	LD	(SVARPT),BC	; Programmende+1
 2827 114B  3E 0D       	LD	A,CR
 2828 114D  CD 1BB0     	CALL	U1A8A		; Zeichen im ASCII-File ablegen und malen
 2829 1150  23          U1034:	INC	HL
 2830 1151  5E          	LD	E,(HL)
 2831 1152  23          	INC	HL
 2832 1153  56          	LD	D,(HL)
 2833 1154  ED 53 0051  	LD	(U0041),DE	; Zeilennummer ablegen
 2834 1158  AF          	XOR	A		; Zaehler fuer Zeilenlaenge
 2835 1159  08          	EX	AF,AF'
 2836 115A  E5          	PUSH	HL		; Zeiger auf BASIC-Programm
 2837 115B  C5          	PUSH	BC		; Zeiger auf ASCII-File
 2838 115C  AF          	XOR	A
 2839 115D  06 98       	LD	B,98H
 2840 115F  CD D6AE     	CALL	SGN1		; Zeilennummer
 2841 1162  CD D834     	CALL	NUMKON		; konvertieren
 2842 1165  C1          	POP	BC
 2843 1166  CD C8BD     U104A:	CALL	TCHAR		; naechstes gueltiges Zeichen holen
 2844 1169  B7          	OR	A
 2845 116A  28 05       	JR	Z,U1055
 2846 116C  CD 1BB0     	CALL	U1A8A		; Zeichen im ASCII-File ablegen und malen
 2847 116F  18 F5       	JR	U104A
 2848                   	;
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  45
BAC85   Z80

 2849 1171  E1          U1055:	POP	HL
 2850 1172  3A 003B     	LD	A,(FLAGS)
 2851 1175  F6 40       	OR	40H		; Bit 6 setzen (unerlaubter Befehl)
 2852 1177  32 003B     	LD	(FLAGS),A
 2853 117A  59          U105E:	LD	E,C
 2854 117B  50          	LD	D,B
 2855 117C  CD C689     	CALL	CPREG		; Vergleiche Register DE mit HL
 2856 117F  DA 1C05     	JP	C,U0ECA		; 'Speichergrenze erreicht!'
 2857 1182  CD C8BD     	CALL	TCHAR		; naechstes gueltiges Zeichen holen
 2858 1185  B7          	OR	A
 2859 1186  28 51       	JR	Z,U10BD
 2860 1188  FE 22       	CP	'"'
 2861 118A  28 3C       	JR	Z,U10AC		; Zeichenkette
 2862 118C  FE 80       	CP	80H
 2863 118E  30 05       	JR	NC,U1079	; Token
 2864 1190  CD 1BB0     	CALL	U1A8A		; Zeichen im ASCII-File ablegen und malen
 2865 1193  18 E5       	JR	U105E
 2866                   	;
 2867                   ; Token decodieren
 2868 1195  FE BF       U1079:	CP	0BFH		; LN?
 2869 1197  11 1EAE     	LD	DE,U1D0B	; Umwandeln in LOG
 2870 119A  28 1F       	JR	Z,U109F
 2871 119C  F5          	PUSH	AF
 2872 119D  E5          	PUSH	HL
 2873 119E  C5          	PUSH	BC
 2874 119F  21 1FDF     	LD	HL,U1E3C	; GOSUB, GOTO, STEP, THEN, TO
 2875 11A2  01 0005     	LD	BC,5		; 5 Token testen
 2876 11A5  ED B1       	CPIR
 2877 11A7  20 0A       	JR	NZ,U1097	; keiner der 5 Token
 2878 11A9  F5          	PUSH	AF
 2879 11AA  3A 003B     	LD	A,(FLAGS)
 2880 11AD  F6 40       	OR	40H		; Bit 6 setzen (unerlaubter Befehl)
 2881 11AF  32 003B     	LD	(FLAGS),A
 2882 11B2  F1          	POP	AF
 2883 11B3  CD C79A     U1097:	CALL	LIST11		; Token aufloesen
 2884 11B6  C1          	POP	BC
 2885 11B7  E1          	POP	HL
 2886 11B8  CD 1BB0     U109C:	CALL	U1A8A		; Zeichen im ASCII-File ablegen und malen
 2887 11BB  1A          U109F:	LD	A,(DE)
 2888 11BC  13          	INC	DE
 2889 11BD  B7          	OR	A
 2890 11BE  F2 11B8     	JP	P,U109C
 2891 11C1  F1          	POP	AF
 2892 11C2  FE 8E       	CP	8EH	; REM?
 2893 11C4  20 B4       	JR	NZ,U105E	; weiter im Text
 2894 11C6  18 03       	JR	U10AF		; den Rest nach REM einfach kopieren
 2895                   	;
 2896 11C8  CD 1BB0     U10AC:	CALL	U1A8A		; Zeichen im ASCII-File ablegen und malen
 2897 11CB  5F          U10AF:	LD	E,A
 2898 11CC  23          U10B0:	INC	HL
 2899 11CD  7E          	LD	A,(HL)
 2900 11CE  B7          	OR	A
 2901 11CF  28 08       	JR	Z,U10BD		; Zeilenende
 2902 11D1  CD 1BB0     	CALL	U1A8A		; Zeichen im ASCII-File ablegen und malen
 2903 11D4  BB          	CP	E
 2904 11D5  20 F5       	JR	NZ,U10B0
 2905 11D7  18 A1       	JR	U105E
 2906                   	;
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  46
BAC85   Z80

 2907 11D9  08          U10BD:	EX	AF,AF'
 2908 11DA  FE 3D       	CP	61		; Zeile darf max. 60 Zeichen lang sein
 2909 11DC  38 16       	JR	C,U10D8		; OK
 2910 11DE  C5          	PUSH	BC
 2911 11DF  E5          	PUSH	HL
 2912 11E0  21 1E95     	LD	HL,U1CF2	; Zeile
 2913 11E3  CD C5F1     	CALL	TEXTOE
 2914 11E6  2A 0051     	LD	HL,(U0041)	; Zeilennummer
 2915 11E9  CD D829     	CALL	NUMBO
 2916 11EC  21 1E9C     	LD	HL,U1CF9	; ist zu lang.
 2917 11EF  CD C5F1     	CALL	TEXTOE
 2918 11F2  E1          	POP	HL
 2919 11F3  C1          	POP	BC
 2920 11F4  3E 0D       U10D8:	LD	A,CR
 2921 11F6  CD 1BB0     	CALL	U1A8A		; Zeichen im ASCII-File ablegen und malen
 2922 11F9  23          	INC	HL
 2923 11FA  7E          	LD	A,(HL)
 2924 11FB  23          	INC	HL
 2925 11FC  B6          	OR	(HL)		; Programmende?
 2926 11FD  C2 1150     	JP	NZ,U1034	; weiter konvertieren
 2927 1200  ED 43 0047  	LD	(U0033),BC	; Ende ASCII-File
 2928 1204  2A 03D7     	LD	HL,(SVARPT)	; Programmende+1
 2929 1207  22 0045     	LD	(U0031),HL	; Beginn ASCII-File
 2930 120A  3A 003B     	LD	A,(FLAGS)
 2931 120D  F6 02       	OR	2		; Bit 1 setzen: ASCII-File im Speicher
 2932 120F  32 003B     	LD	(FLAGS),A
 2933 1212  C9          	RET
 2934                   ;
 2935                   ; Setze Regelverstoss, wenn Vergleichsoperatoren ohne Klammer benutzt wurden
 2936                   ;
 2937 1213  FE B4       U10F7:	CP	0B4H	; =
 2938 1215  28 0F       	JR	Z,U110A
 2939 1217  FE 3A       U10FB:	CP	':'
 2940 1219  C8          	RET	Z		; Z=1, neuer Befehl
 2941 121A  B7          	OR	A
 2942 121B  C8          	RET	Z		; Z=1, Zeilenende
 2943 121C  FE 80       	CP	80H
 2944 121E  D8          	RET	C		; C=1, ASCII-Zeichen (kein Token)
 2945 121F  FE B3       	CP	0B3H	; >
 2946 1221  28 03       	JR	Z,U110A
 2947 1223  FE B5       	CP	0B5H	; <
 2948 1225  C0          	RET	NZ
 2949 1226  3A 003B     U110A:	LD	A,(FLAGS)
 2950 1229  B1          	OR	C		; Regelverstoss setzen (Klammer fehlt)
 2951 122A  32 003B     	LD	(FLAGS),A
 2952 122D  AF          	XOR	A		; Z=1
 2953 122E  C9          	RET
 2954                   ;
 2955                   ; *K - Listen ASCII-File
 2956                   ;
 2957 122F  3A 003B     STAR_K:	LD	A,(FLAGS)
 2958 1232  E6 02       	AND	2		; Bit 1 gesetzt?
 2959 1234  CA 1BFC     	JP	Z,U1ADC		; kein ASCII-File im Speicher!
 2960 1237  CD C791     	CALL	LCREG
 2961 123A  2A 0045     	LD	HL,(U0031)	; Beginn ASCII-File
 2962 123D  ED 5B 0047  	LD	DE,(U0033)	; Ende ASCII-File
 2963 1241  7E          U1125:	LD	A,(HL)
 2964 1242  23          	INC	HL
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  47
BAC85   Z80

 2965 1243  FE 0D       	CP	CR
 2966 1245  28 0F       	JR	Z,U113A		; neue Zeile
 2967 1247  FE 20       	CP	20H
 2968 1249  30 02       	JR	NC,U1131
 2969 124B  3E 23       	LD	A,'#'		; statt Steuerzeichen ein '#' anzeigen
 2970 124D  CD DDD5     U1131:	CALL	CO		; Zeichen anzeigen
 2971 1250  CD C689     U1134:	CALL	CPREG		; Vergleiche Register DE mit HL
 2972 1253  20 EC       	JR	NZ,U1125	; weiter bis zum Ende ASCII-File
 2973 1255  C9          	RET
 2974                   	;
 2975 1256  E5          U113A:	PUSH	HL
 2976 1257  CD CB61     	CALL	CRWDY2		; Anzeige CR, LF, Dummyzeichen
 2977 125A  CD C767     	CALL	LIST9		; Stop nach vorgegebener Zeilenanzahl
 2978 125D  E1          	POP	HL
 2979 125E  CD 067B     	CALL	U0613		; Taste gedrueckt?
 2980 1261  FE 03       	CP	3
 2981 1263  20 EB       	JR	NZ,U1134	; weiter anzeigen
 2982 1265  C9          	RET
 2983                   ;
 2984                   ; GOTO 20	Programmstart, System-Reset, Loeschen aller Variablen
 2985                   ; PE:	A	Groesse des Stringraums in Byte (256 Byte werden mindestens benutzt)
 2986                   ;	CC(0)	Vordergrundfarbe
 2987                   ;	CC(1)	Hintergrundfarbe
 2988                   ; PA:	HO=39	Anzahl Textspalten-1
 2989                   ;	VE=31	Anzahl Textzeilen-1
 2990                   ;	HG=320	Bildschirmbreite in Pixeln
 2991                   ;	VG=240	Bildschirmhoehe in Piceln
 2992                   ;	CN=0	Voreinstellung = zeichnen (nicht loeschen	
 2993                   ;	IN=0
 2994                   ;	IN$=""
 2995                   ;	SR$=""
 2996                   ;
 2997 1266  CD 206D     GO20:	CALL	U1ECA		; Farbe nach Variable CC einstellen
 2998 1269  E1          	POP	HL
 2999 126A  D1          	POP	DE
 3000 126B  C1          	POP	BC
 3001 126C  F1          	POP	AF
 3002 126D  08          	EX	AF,AF'
 3003 126E  D9          	EXX
 3004 126F  3A 003B     	LD	A,(FLAGS)
 3005 1272  E6 F4       	AND	0F4H		; Bit 0, 1 und 3 ruecksetzen
 3006 1274  32 003B     	LD	(FLAGS),A
 3007                   ; 02.01.2024: hier Loeschen des Bildschirms erforderlich? - ja.
 3008 1277  CD 05DC     	CALL	CLS		; Bildschirm loeschen
 3009 127A  AF          	XOR	A
 3010 127B  CD C8DF     	CALL	RESTO
 3011 127E  01 4100     	LD	BC,4100H	; A
 3012 1281  CD 1799     	CALL	U167B		; Wert der Variable A nach HL holen
 3013 1284  11 0100     	LD	DE,256		; Mindestgroesse
 3014 1287  CD C689     	CALL	CPREG		; Vergleiche Register DE mit HL
 3015 128A  38 01       	JR	C,U116E		; Mindestgroesse 256 benutzen
 3016 128C  EB          	EX	DE,HL		; Wert der Variablen A benutzen
 3017 128D  AF          U116E:	XOR	A		; Z=1
 3018 128E  CD C9B2     	CALL	CLEAR+8		; Variablen loeschen
 3019 1291  21 1FE4     	LD	HL,U1E41	; vordefinierte Variablen
 3020 1294  ED 5B 03D7  	LD	DE,(SVARPT)	; Programmende+1
 3021 1298  01 0030     	LD	BC,U1E71-U1E41
 3022 129B  ED B0       	LDIR			; Variablen mit Startwerten belegen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  48
BAC85   Z80

 3023 129D  EB          	EX	DE,HL		; HL=Ende der belegten Variablen
 3024 129E  22 03D9     	LD	(DVARPT),HL
 3025 12A1  22 03DB     	LD	(FSLPTR),HL	; erste freie Adresse hinter den Variablen
 3026 12A4  CD 05C4     	CALL	U05C5		; Fenster auf volle Groesse stellen
 3027 12A7  D9          	EXX
 3028 12A8  08          	EX	AF,AF'
 3029 12A9  F5          	PUSH	AF
 3030 12AA  C5          	PUSH	BC
 3031 12AB  D5          	PUSH	DE
 3032 12AC  E9          	JP	(HL)
 3033                   ;
 3034                   ; GOSUB 110	Setzen des Cursors an eine bestimmte Position
 3035                   ;		Uebergabe der Position in den Variablen HO und VE
 3036                   ;
 3037 12AD  CD 206D     GO110:	CALL	U1ECA		; Farbe nach Variable CC einstellen
 3038 12B0  01 5645     	LD	BC,'VE'
 3039 12B3  CD 1799     	CALL	U167B		; Wert der Variable VE nach HL holen
 3040 12B6  7D          	LD	A,L
 3041 12B7  FE 20       	CP	32		; ausserhalb?
 3042 12B9  38 07       	JR	C,U11A3		; nein
 3043 12BB  CB 7F       	BIT	7,A
 3044 12BD  3E 1F       	LD	A,31		; Position ganz unten
 3045 12BF  28 01       	JR	Z,U11A3
 3046 12C1  AF          	XOR	A		; Position ganz oben
 3047 12C2  F5          U11A3:	PUSH	AF
 3048 12C3  01 484F     	LD	BC,'HO'
 3049 12C6  CD 1799     	CALL	U167B		; Wert der Variable HO nach HL holen
 3050 12C9  7D          	LD	A,L
 3051 12CA  FE 28       	CP	40		; ausserhalb?
 3052 12CC  38 07       	JR	C,U11B6		; nein
 3053 12CE  CB 7F       	BIT	7,A
 3054 12D0  3E 27       	LD	A,39		; Position ganz rechts
 3055 12D2  28 01       	JR	Z,U11B6
 3056 12D4  AF          	XOR	A		; Position ganz links
 3057 12D5  6F          U11B6:	LD	L,A
 3058 12D6  F1          	POP	AF
 3059 12D7  67          	LD	H,A
 3060                   ;	JP	U05E1		; Cursor auf HL setzen
 3061                   ;
 3062                   ; Cursor auf HL setzen
 3063                   ;	
 3064 12D8  C5          U05E1:	PUSH	BC
 3065 12D9  CD F018     	CALL	IRMON		; veraendert BC-Register
 3066 12DC  22 B7A0     	LD	(CURSO),HL
 3067 12DF  18 07       	JR	U05F1
 3068                   ;
 3069                   ; aktuelle Cursorposition nach HL
 3070                   ;	
 3071 12E1  C5          U05EA:	PUSH	BC
 3072 12E2  CD F018     	CALL	IRMON		; veraendert BC-Register
 3073 12E5  2A B7A0     	LD	HL,(CURSO)
 3074 12E8  CD F01B     U05F1:	CALL	IRMOFF
 3075 12EB  C1          	POP	BC		; veraendert BC-Register
 3076 12EC  C9          	RET
 3077                   ;
 3078                   ; GOSUB 120	Ermittlung der Position des Cursors
 3079                   ;		Rueckgabe der Position in den Variablen HO und VE
 3080                   ;
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  49
BAC85   Z80

 3081 12ED  CD 12E1     GO120:	CALL	U05EA		; Cursorposition nach HL
 3082 12F0  E5          	PUSH	HL
 3083 12F1  01 484F     	LD	BC,'HO'
 3084 12F4  CD CF48     	CALL	DIM7		; Adresse der Variable HO nach DE holen
 3085 12F7  E1          	POP	HL
 3086 12F8  E5          	PUSH	HL
 3087 12F9  7D          	LD	A,L		; A=Spalte
 3088 12FA  CD 1304     	CALL	U11D3		; Wert in Variable eintragen
 3089 12FD  01 5645     	LD	BC,'VE'
 3090 1300  CD CF48     	CALL	DIM7		; Adresse der Variable VE nach DE holen
 3091 1303  F1          	POP	AF		; A=Zeile
 3092 1304  6F          U11D3:	LD	L,A
 3093 1305  26 00       	LD	H,0		; HL=Wert
 3094 1307  C3 1825     	JP	U1671		; in Variable eintragen
 3095                   ;
 3096                   ; GOSUB 200	Auslesen eines Tastendrucks
 3097                   ;		Rueckgabe des Zeichens in der Variablen IN$
 3098                   ;		Rueckgabe einer leeren Variable IN$, wenn keine Taste gedrueckt wurde
 3099                   ;
 3100 130A  CD 067B     GO200:	CALL	U0613		; Taste gedrueckt?
 3101 130D  18 03       	JR	U11E7
 3102                   ;
 3103                   ; GOSUB 210	Warten auf einen Tastendruck
 3104                   ;		Rueckgabe des Zeichens in der Variablen IN$
 3105                   ;
 3106 130F  CD 0694     GO210:	CALL	U062C		; Eingabe ein Zeichen
 3107 1312  FE 03       U11E7:	CP	3
 3108 1314  20 05       	JR	NZ,U11F0
 3109 1316  E1          	POP	HL
 3110 1317  E1          	POP	HL
 3111 1318  C3 C918     	JP	STOP
 3112                   	;
 3113 131B  B7          U11F0:	OR	A
 3114 131C  F5          	PUSH	AF
 3115 131D  01 49CE     	LD	BC,'IN'+80H	; IN$
 3116 1320  CD CF48     	CALL	DIM7		; Adresse der Variable IN$ nach DE holen
 3117 1323  EB          	EX	DE,HL
 3118 1324  36 00       	LD	(HL),0
 3119 1326  F1          	POP	AF
 3120 1327  5F          	LD	E,A
 3121 1328  28 40       	JR	Z,U123F
 3122 132A  FE 01       	CP	1
 3123 132C  20 17       	JR	NZ,U121A
 3124 132E  1E 7F       	LD	E,7FH
 3125 1330  E5          	PUSH	HL
 3126 1331  CD 12E1     	CALL	U05EA		; Cursorposition nach HL
 3127 1334  2C          	INC	L
 3128 1335  2D          	DEC	L
 3129 1336  E1          	POP	HL
 3130 1337  28 31       	JR	Z,U123F
 3131 1339  36 03       	LD	(HL),3
 3132 133B  23          	INC	HL
 3133 133C  23          	INC	HL
 3134 133D  01 1EAB     	LD	BC,U1D08
 3135 1340  71          	LD	(HL),C
 3136 1341  23          	INC	HL
 3137 1342  70          	LD	(HL),B
 3138 1343  18 25       	JR	U123F
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  50
BAC85   Z80

 3139                   	;
 3140 1345  3E 01       U121A:	LD	A,1
 3141 1347  77          	LD	(HL),A
 3142 1348  23          	INC	HL
 3143 1349  23          	INC	HL
 3144 134A  D5          	PUSH	DE
 3145 134B  E5          	PUSH	HL
 3146 134C  CD D1E1     	CALL	STROP
 3147 134F  E1          	POP	HL
 3148 1350  73          	LD	(HL),E
 3149 1351  23          	INC	HL
 3150 1352  72          	LD	(HL),D
 3151 1353  EB          	EX	DE,HL
 3152 1354  D1          	POP	DE
 3153 1355  73          	LD	(HL),E
 3154 1356  7B          	LD	A,E
 3155 1357  FE 08       	CP	8
 3156 1359  38 08       	JR	C,U1238
 3157 135B  FE 0C       	CP	0CH
 3158 135D  30 04       	JR	NC,U1238
 3159 135F  C6 14       	ADD	14H
 3160 1361  18 06       	JR	U123E
 3161                   	;
 3162 1363  FE 60       U1238:	CP	60H		; Kleinbuchstabe?
 3163 1365  38 03       	JR	C,U123F		; nein
 3164 1367  D6 20       	SUB	20H		; in Grossbuchstabe wandeln
 3165 1369  5F          U123E:	LD	E,A
 3166 136A  16 00       U123F:	LD	D,0
 3167 136C  D5          	PUSH	DE
 3168 136D  01 494E     	LD	BC,'IN'
 3169 1370  CD CF48     	CALL	DIM7		; Adresse der Variable IN nach DE holen
 3170 1373  E1          	POP	HL
 3171 1374  C3 1825     	JP	U1671		; in Variable 'IN' eintragen
 3172                   ;
 3173                   ; Cursorposition ausserhalb bei GOSUB 220
 3174                   ;
 3175 1377  AF          U124C:	XOR	A
 3176 1378  18 EF       	JR	U123E
 3177                   ;
 3178                   ; GOSUB 220	Auslesen eines Zeichens vom Bildschirm
 3179                   ;		Uebergeben der Bildschirmposition in den Variablen HO und VE
 3180                   ;		Rueckgeben des Zeichens als numerischer Wert in der Variablen IN
 3181                   ;
 3182 137A  01 5645     GO220:	LD	BC,'VE'
 3183 137D  CD 1799     	CALL	U167B		; Wert der Variable VE nach HL holen
 3184 1380  7D          	LD	A,L
 3185 1381  FE 20       	CP	20H
 3186 1383  30 F2       	JR	NC,U124C	; VE ausserhalb!
 3187 1385  F5          	PUSH	AF
 3188 1386  01 484F     	LD	BC,'HO'
 3189 1389  CD 1799     	CALL	U167B		; Wert der Variable HO nach HL holen
 3190 138C  7D          	LD	A,L
 3191 138D  FE 28       	CP	40
 3192 138F  E1          	POP	HL		; H=Zeile
 3193 1390  30 E5       	JR	NC,U124C	; HO ausserhalb!
 3194 1392  6F          	LD	L,A		; L=Spalte
 3195 1393  CD 06C4     	CALL	U0654		; Zeichen aus VRAM nach Register A lesen
 3196 1396  5F          	LD	E,A
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  51
BAC85   Z80

 3197 1397  FE C9       	CP	0C9H		; C9 im VRAM ???
 3198 1399  20 C8       	JR	NZ,U1238	; nein, upcase
 3199 139B  18 CC       	JR	U123E		; in Variable IN uebergeben
 3200                   ;
 3201                   ; GOSUB 260	Ermittlung einer Zufallszahl zwischen 0 und 1
 3202                   ;		Rueckgabe der Zahl in der Variablen RV
 3203                   ;
 3204 139D  AF          GO260:	XOR	A
 3205 139E  3C          	INC	A
 3206 139F  CD DA06     	CALL	RND+9
 3207 13A2  3A 03E6     	LD	A,(WRA1+1)
 3208 13A5  5F          	LD	E,A
 3209 13A6  ED 5F       	LD	A,R
 3210 13A8  83          	ADD	E
 3211 13A9  32 03E6     	LD	(WRA1+1),A
 3212 13AC  01 5256     	LD	BC,'RV'
 3213 13AF  CD CF48     U1286:	CALL	DIM7		; Adresse der Variable nach DE holen
 3214 13B2  EB          	EX	DE,HL
 3215 13B3  C3 D6F7     	JP	OPTRAN
 3216                   ;
 3217                   ; GOSUB 270	 Ermittlung der Groesse des freien Speichers
 3218                   ;		 Rueckgabe des Wertes in der Variablen FR
 3219                   ;
 3220 13B6  AF          GO270:	XOR	A
 3221 13B7  32 03AE     	LD	(DATYPE),A
 3222 13BA  CD D090     	CALL	FRE
 3223 13BD  CD 13D8     	CALL	U12AF
 3224 13C0  CD D6C8     	CALL	OPARST
 3225 13C3  3E 01       	LD	A,1
 3226 13C5  32 03AE     	LD	(DATYPE),A
 3227 13C8  CD D090     	CALL	FRE
 3228 13CB  CD 13D8     	CALL	U12AF
 3229 13CE  C1          	POP	BC
 3230 13CF  D1          	POP	DE
 3231 13D0  CD D46F     	CALL	ADD5
 3232 13D3  01 4652     	LD	BC,'FR'
 3233 13D6  18 D7       	JR	U1286
 3234                   ;
 3235 13D8  CD D697     U12AF:	CALL	TSGNM
 3236 13DB  F0          	RET	P
 3237 13DC  01 9100     	LD	BC,9100H	; 65536
 3238 13DF  11 0000     	LD	DE,0
 3239 13E2  C3 D46F     	JP	ADD5
 3240                   ;
 3241                   ; GOSUB 300	Umwandlung eines numerischen Wertes in einen String
 3242                   ;		Uebergabe des numerischen Wertes in der Variablen SR
 3243                   ;		Rueckgabe des Strings in der Variablen SR$
 3244                   ;
 3245 13E5  01 5352     GO300:	LD	BC,'SR'
 3246 13E8  CD CF48     	CALL	DIM7		; Adresse der Variable SR nach DE holen
 3247 13EB  EB          	EX	DE,HL
 3248 13EC  CD D6DD     	CALL	OPKOP		; Wert in Arithmetikregister 1 laden
 3249 13EF  CD D834     	CALL	NUMKON
 3250 13F2  23          	INC	HL
 3251 13F3  E5          	PUSH	HL
 3252 13F4  AF          	XOR	A
 3253 13F5  4F          	LD	C,A
 3254 13F6  ED B1       	CPIR
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  52
BAC85   Z80

 3255 13F8  79          	LD	A,C
 3256 13F9  2F          	CPL
 3257 13FA  C6 02       U12DF:	ADD	2		; wird auch als Zeiger auf UOT1=2 genutzt!
 3258 13FC  CD D1E1     	CALL	STROP
 3259 13FF  D6 02       	SUB	2
 3260 1401  13          	INC	DE
 3261 1402  13          	INC	DE
 3262 1403  4F          	LD	C,A
 3263 1404  06 00       	LD	B,0
 3264 1406  E1          	POP	HL
 3265 1407  E5          	PUSH	HL
 3266 1408  D5          	PUSH	DE
 3267 1409  ED B0       	LDIR
 3268 140B  E1          	POP	HL
 3269 140C  D1          	POP	DE
 3270 140D  4F          	LD	C,A
 3271 140E  1A          	LD	A,(DE)
 3272 140F  1B          	DEC	DE
 3273 1410  FE 2E       	CP	2EH
 3274 1412  20 04       	JR	NZ,U12FD
 3275 1414  0C          	INC	C
 3276 1415  2B          	DEC	HL
 3277 1416  36 30       	LD	(HL),30H
 3278 1418  1A          U12FD:	LD	A,(DE)
 3279 1419  FE 2D       	CP	2DH
 3280 141B  20 03       	JR	NZ,U1305
 3281 141D  0C          	INC	C
 3282 141E  2B          	DEC	HL
 3283 141F  77          	LD	(HL),A
 3284 1420  C5          U1305:	PUSH	BC
 3285 1421  E5          	PUSH	HL
 3286 1422  01 53D2     	LD	BC,'SR'+80H	; SR$
 3287 1425  CD CF48     	CALL	DIM7		; Adresse der Variable SR$ nach DE holen
 3288 1428  E1          	POP	HL
 3289 1429  C1          	POP	BC
 3290 142A  EB          	EX	DE,HL
 3291 142B  71          	LD	(HL),C
 3292 142C  23          	INC	HL
 3293 142D  23          	INC	HL
 3294 142E  73          	LD	(HL),E
 3295 142F  23          	INC	HL
 3296 1430  72          	LD	(HL),D
 3297 1431  C9          	RET
 3298                   ;
 3299                   ; GOSUB 310	Umwandlung eines numerischen Wertes in einen String
 3300                   ;		Uebergabe des numerischen Wertes in der Variablen SR
 3301                   ;		Uebergabe einer festen Stringldnge in der Variablen CT
 3302                   ;		Uebergabe der Position des Dezimalpunkts in der Variablen CN
 3303                   ;		Rueckgabe des Strings in der Variablen SR$
 3304                   ;
 3305 1432  CD 1763     GO310:	CALL	GETCN		; CN holen
 3306 1435  01 4354     	LD	BC,'CT'
 3307 1438  CD 1799     	CALL	U167B		; Wert der Variable CT nach HL holen
 3308 143B  7D          	LD	A,L
 3309 143C  65          	LD	H,L
 3310 143D  22 003C     	LD	(XPOS2),HL
 3311 1440  F5          	PUSH	AF
 3312 1441  CD D1E1     	CALL	STROP
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  53
BAC85   Z80

 3313 1444  D5          	PUSH	DE
 3314 1445  01 53D2     	LD	BC,'SR'+80H	; SR$
 3315 1448  CD CF48     	CALL	DIM7		; Adresse der Variable SR$ nach DE holen
 3316 144B  E1          	POP	HL
 3317 144C  22 0051     	LD	(U0041),HL
 3318 144F  EB          	EX	DE,HL
 3319 1450  F1          	POP	AF
 3320 1451  77          	LD	(HL),A
 3321 1452  23          	INC	HL
 3322 1453  23          	INC	HL
 3323 1454  73          	LD	(HL),E
 3324 1455  23          	INC	HL
 3325 1456  72          	LD	(HL),D
 3326 1457  D5          	PUSH	DE
 3327 1458  01 5352     	LD	BC,'SR'
 3328 145B  CD CF48     	CALL	DIM7		; Adresse der Variable SR nach DE holen
 3329 145E  EB          	EX	DE,HL
 3330 145F  E5          	PUSH	HL
 3331 1460  CD D6DD     	CALL	OPKOP		; Wert in Arithmetikregister 1 laden
 3332 1463  CD D697     	CALL	TSGNM
 3333 1466  E1          	POP	HL
 3334 1467  E3          	EX	(SP),HL
 3335 1468  3A 003C     	LD	A,(XPOS2)
 3336 146B  30 09       	JR	NC,U135B
 3337 146D  36 2D       	LD	(HL),2DH
 3338 146F  23          	INC	HL
 3339 1470  D6 02       	SUB	2
 3340 1472  DA 151B     	JP	C,U1400
 3341 1475  3C          	INC	A
 3342 1476  47          U135B:	LD	B,A
 3343 1477  3A 0044     	LD	A,(CN)		; CN
 3344 147A  4F          	LD	C,A
 3345 147B  B7          	OR	A
 3346 147C  28 01       	JR	Z,U1364
 3347 147E  0C          	INC	C
 3348 147F  0C          U1364:	INC	C
 3349 1480  78          	LD	A,B
 3350 1481  91          	SUB	C
 3351 1482  DA 151B     	JP	C,U1400
 3352 1485  3C          	INC	A
 3353 1486  32 003C     	LD	(XPOS2),A
 3354 1489  E3          	EX	(SP),HL
 3355 148A  F5          	PUSH	AF
 3356 148B  E5          	PUSH	HL
 3357 148C  CD 152D     	CALL	U1412
 3358 148F  E1          	POP	HL
 3359 1490  CD D6EE     	CALL	OPLAD
 3360 1493  CD D5F5     	CALL	DIV1
 3361 1496  CD D6BC     	CALL	ABS
 3362 1499  3E 20       	LD	A,20H
 3363 149B  B7          	OR	A
 3364 149C  08          	EX	AF,AF'
 3365 149D  3A 0044     	LD	A,(CN)		; CN
 3366 14A0  4F          	LD	C,A
 3367 14A1  F1          	POP	AF
 3368 14A2  81          	ADD	C
 3369 14A3  4F          	LD	C,A
 3370 14A4  06 00       	LD	B,0
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  54
BAC85   Z80

 3371 14A6  C5          	PUSH	BC
 3372 14A7  CD D6C8     	CALL	OPARST
 3373 14AA  CD 152D     	CALL	U1412
 3374 14AD  01 8000     	LD	BC,8000H	; 0.5
 3375 14B0  11 0000     	LD	DE,0
 3376 14B3  CD D5F5     	CALL	DIV1
 3377 14B6  C1          	POP	BC
 3378 14B7  D1          	POP	DE
 3379 14B8  CD D46F     	CALL	ADD5
 3380 14BB  C1          	POP	BC
 3381 14BC  E1          	POP	HL
 3382 14BD  3A 03E8     	LD	A,(WRA1+3)
 3383 14C0  FE 81       	CP	81H
 3384 14C2  30 58       	JR	NC,U1401
 3385 14C4  C5          U13A9:	PUSH	BC
 3386 14C5  3A 003C     	LD	A,(XPOS2)
 3387 14C8  B8          	CP	B
 3388 14C9  20 03       	JR	NZ,U13B3
 3389 14CB  36 2E       	LD	(HL),'.'
 3390 14CD  23          	INC	HL
 3391 14CE  3D          U13B3:	DEC	A
 3392 14CF  B8          	CP	B
 3393 14D0  20 04       	JR	NZ,U13BB
 3394 14D2  08          	EX	AF,AF'
 3395 14D3  3E 30       	LD	A,'0'
 3396 14D5  08          	EX	AF,AF'
 3397 14D6  E5          U13BB:	PUSH	HL
 3398 14D7  01 8420     	LD	BC,8420H	; 10
 3399 14DA  11 0000     	LD	DE,0
 3400 14DD  CD D59A     	CALL	MUL1
 3401 14E0  CD D6C8     	CALL	OPARST
 3402 14E3  CD C96F     	CALL	EPRVL3		; Ausdruck berechnen -> DE
 3403 14E6  7B          	LD	A,E
 3404 14E7  32 003E     	LD	(YPOS2),A
 3405 14EA  CD D0C0     	CALL	POS1
 3406 14ED  CD D6C0     	CALL	ABS1
 3407 14F0  C1          	POP	BC
 3408 14F1  D1          	POP	DE
 3409 14F2  CD D46F     	CALL	ADD5
 3410 14F5  3A 003E     	LD	A,(YPOS2)
 3411 14F8  B7          	OR	A
 3412 14F9  E1          	POP	HL
 3413 14FA  28 09       	JR	Z,U13EA
 3414 14FC  1E 30       	LD	E,'0'
 3415 14FE  83          	ADD	E
 3416 14FF  77          	LD	(HL),A
 3417 1500  08          	EX	AF,AF'
 3418 1501  7B          	LD	A,E
 3419 1502  37          	SCF
 3420 1503  18 02       	JR	U13EC
 3421                   	;
 3422 1505  08          U13EA:	EX	AF,AF'
 3423 1506  77          	LD	(HL),A
 3424 1507  08          U13EC:	EX	AF,AF'
 3425 1508  23          	INC	HL
 3426 1509  C1          	POP	BC
 3427 150A  04          	INC	B
 3428 150B  78          	LD	A,B
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  55
BAC85   Z80

 3429 150C  B9          	CP	C
 3430 150D  20 B5       	JR	NZ,U13A9
 3431 150F  08          	EX	AF,AF'
 3432 1510  D8          	RET	C
 3433 1511  2A 0051     	LD	HL,(U0041)
 3434 1514  7E          	LD	A,(HL)
 3435 1515  FE 2D       	CP	'-'
 3436 1517  C0          	RET	NZ
 3437 1518  36 20       	LD	(HL),' '
 3438 151A  C9          	RET
 3439                   	;
 3440 151B  E1          U1400:	POP	HL
 3441 151C  2A 0051     U1401:	LD	HL,(U0041)
 3442 151F  3A 003E     	LD	A,(YPOS2)
 3443 1522  3C          	INC	A
 3444 1523  47          	LD	B,A
 3445 1524  3E 2A       	LD	A,'*'
 3446 1526  18 02       	JR	U140F
 3447                   	;
 3448 1528  77          U140D:	LD	(HL),A
 3449 1529  23          	INC	HL
 3450 152A  10 FC       U140F:	DJNZ	U140D
 3451 152C  C9          	RET
 3452                   ;
 3453 152D  CD D0C0     U1412:	CALL	POS1
 3454 1530  01 8420     	LD	BC,8420H	; 10
 3455 1533  11 0000     	LD	DE,0
 3456 1536  C3 D92A     	JP	EXPO+2
 3457                   ;
 3458                   ; GOSUB 330	Umwandlung aller Kleinbuchstaben in einem String in Grossbuchstaben
 3459                   ;		Uebergabe und Rueckgabe des Strings in der Variablen SR$
 3460                   ;
 3461 1539  01 53D2     GO330:	LD	BC,'SR'+80H	; SR$
 3462 153C  CD CF48     	CALL	DIM7		; Adresse der Variable SR$ nach DE holen
 3463 153F  EB          	EX	DE,HL
 3464 1540  7E          	LD	A,(HL)
 3465 1541  23          	INC	HL
 3466 1542  23          	INC	HL
 3467 1543  E5          	PUSH	HL
 3468 1544  5E          	LD	E,(HL)
 3469 1545  23          	INC	HL
 3470 1546  56          	LD	D,(HL)
 3471 1547  EB          	EX	DE,HL
 3472 1548  E3          	EX	(SP),HL
 3473 1549  E5          	PUSH	HL
 3474 154A  CD D1E1     	CALL	STROP
 3475 154D  E1          	POP	HL
 3476 154E  73          	LD	(HL),E
 3477 154F  23          	INC	HL
 3478 1550  72          	LD	(HL),D
 3479 1551  E1          	POP	HL
 3480 1552  47          	LD	B,A
 3481 1553  04          	INC	B
 3482 1554  18 0E       	JR	U1449
 3483                   	;
 3484 1556  7E          U143B:	LD	A,(HL)
 3485 1557  FE 60       	CP	60H
 3486 1559  38 06       	JR	C,U1446
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  56
BAC85   Z80

 3487 155B  FE 7F       	CP	7FH
 3488 155D  30 02       	JR	NC,U1446
 3489 155F  D6 20       	SUB	20H
 3490 1561  12          U1446:	LD	(DE),A
 3491 1562  23          	INC	HL
 3492 1563  13          	INC	DE
 3493 1564  10 F0       U1449:	DJNZ	U143B
 3494 1566  C9          	RET
 3495                   ;
 3496                   ; GOSUB 350	Ausgabe eines Strings auf dem Drucker
 3497                   ;		Uebergabe des Strings in der Variablen SR$
 3498                   ;
 3499 1567  CD 17AF     GO350:	CALL	U1691		; Zeichenkette SR$ holen
 3500 156A  EB          	EX	DE,HL		; Adresse in HL
 3501 156B  18 05       	JR	U1457
 3502                   	;
 3503 156D  7E          U1452:	LD	A,(HL)		; Zeichen holen
 3504 156E  23          	INC	HL
 3505 156F  CD 078D     	CALL	PRINT		; Zeichen an Drucker senden
 3506 1572  10 F9       U1457:	DJNZ	U1452
 3507 1574  C9          	RET
 3508                   ;
 3509                   ; GOSUB 360	Ausgabe eines Zeilenumbruchs auf dem Drucker
 3510                   ;
 3511 1575  21 1EA8     GO360:	LD	HL,U1D05	; CR,LF
 3512 1578  06 03       	LD	B,3		; 2+1
 3513 157A  18 F6       	JR	U1457
 3514                   ;
 3515                   ; GOSUB 400	Ausgabe eines Tones
 3516                   ;		Uebergabe der Lautstaerke, Dauer und Tonhoehe
 3517                   ;		 in den Variablen SV, SD und SP
 3518                   ;
 3519 157C  01 5356     GO400:	LD	BC,'SV'		; Sound Volume (Lautstaerke) 0-15
 3520 157F  CD 1799     	CALL	U167B		; Wert der Variable SV nach HL holen
 3521 1582  E5          	PUSH	HL
 3522 1583  CD 1702     	CALL	U15DA		; Zeitdauer SD
 3523 1586  01 5350     	LD	BC,'SP'		; Sound Pitch (Tonhoehe)
 3524 1589  CD 1799     	CALL	U167B		; Wert der Variable SP nach HL holen
 3525 158C  7D          	LD	A,L
 3526 158D  C1          	POP	BC
 3527 158E  2A 01EC     	LD	HL,(01ECH)	; Interrupt CTC Kanal 2 - Tondauer, Blinkfrequenz
 3528 1591  E5          	PUSH	HL		; merken
 3529 1592  21 1C59     	LD	HL,ISRC2	; interne ISR fuer CTC2
 3530 1595  22 01EC     	LD	(01ECH),HL	; jetzt aktivieren
 3531 1598  CD 06E7     	CALL	U0677
 3532 159B  E1          	POP	HL
 3533 159C  22 01EC     	LD	(01ECH),HL	; urspruengliche ISR
 3534 159F  C9          	RET
 3535                   ;
 3536                   ; GOSUB 450	Warten einer bestimmten Zeit auf einen Tastendruck
 3537                   ;		Uebergabe der Dauer in der Variablen SD (in 100ms-Einheiten)
 3538                   ;
 3539 15A0  CD 1702     GO450:	CALL	U15DA		; Zeitdauer
 3540 15A3  C4 15C2     	CALL	NZ,U14A7
 3541 15A6  F5          	PUSH	AF
 3542 15A7  D5          	PUSH	DE
 3543 15A8  7C          	LD	A,H
 3544 15A9  45          	LD	B,L
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  57
BAC85   Z80

 3545 15AA  CD D0B1     	CALL	FRE3
 3546 15AD  CD 13D8     	CALL	U12AF
 3547 15B0  21 03E8     	LD	HL,WRA1+3
 3548 15B3  7E          	LD	A,(HL)
 3549 15B4  D6 02       	SUB	2
 3550 15B6  30 01       	JR	NC,U149E
 3551 15B8  AF          	XOR	A
 3552 15B9  77          U149E:	LD	(HL),A
 3553 15BA  E1          	POP	HL
 3554 15BB  CD D6F7     	CALL	OPTRAN
 3555 15BE  F1          	POP	AF
 3556 15BF  C3 1312     	JP	U11E7
 3557                   ;
 3558 15C2  2A 01EC     U14A7:	LD	HL,(01ECH)	; Interrupt CTC Kanal 2 - Tondauer, Blinkfrequenz
 3559 15C5  22 004F     	LD	(U003F),HL	; Originalwert hier merken
 3560 15C8  21 1C59     	LD	HL,ISRC2
 3561 15CB  22 01EC     	LD	(01ECH),HL	; interne ISR fuer CTC2
 3562 15CE  3E 03       	LD	A,3
 3563 15D0  D3 8C       	OUT	(CTC0),A
 3564 15D2  3E A7       	LD	A,0A7H
 3565 15D4  D3 8E       	OUT	(CTC2),A
 3566 15D6  3E AB       	LD	A,0ABH
 3567 15D8  D3 8E       	OUT	(CTC2),A
 3568 15DA  2A 005A     U14BF:	LD	HL,(U004A)
 3569 15DD  7C          	LD	A,H
 3570 15DE  B5          	OR	L
 3571 15DF  28 05       	JR	Z,U14CB
 3572 15E1  CD 067B     	CALL	U0613		; Taste gedrueckt?
 3573 15E4  28 F4       	JR	Z,U14BF
 3574 15E6  E5          U14CB:	PUSH	HL
 3575 15E7  2A 004F     	LD	HL,(U003F)	; gemerkte ISR
 3576 15EA  22 01EC     	LD	(01ECH),HL	; Interrupt CTC Kanal 2 - Tondauer, Blinkfrequenz
 3577 15ED  E1          	POP	HL
 3578 15EE  C9          	RET
 3579                   ;
 3580                   ; GOSUB 500	Oeffnen einer Datei
 3581                   ;		Uebergabe des Namens in der Variablen NF$
 3582                   ;		Festlegung eines Datei-Identifiers in der Variablen NF
 3583                   ;
 3584 15EF  CD F018     GO500:	CALL	IRMON
 3585 15F2  21 B6D8     	LD	HL,0B6D8H	; VRAM-Adresse Bild 0, letzte Zeile
 3586 15F5  11 0010     	LD	DE,U0000
 3587 15F8  01 0028     	LD	BC,40		; gesamte Zeile
 3588 15FB  ED B0       	LDIR			; Inhalt der Bildschirmzeile in Puffer kopieren
 3589 15FD  CD F01B     	CALL	IRMOFF
 3590 1600  CD 177E     	CALL	U1656		; Offset gemaess NF holen nach HL und B
 3591 1603  C5          	PUSH	BC		; B=NF (0-7)
 3592 1604  48          	LD	C,B
 3593 1605  CD 1776     	CALL	U164E		; Kanal bereits geoeffnet?
 3594 1608  DA 1790     	JP	C,U1668		; ja, Fehler
 3595 160B  79          	LD	A,C		; C=NF
 3596 160C  FE 04       	CP	4
 3597 160E  3A 0055     	LD	A,(U0045)
 3598 1611  38 03       	JR	C,U14ED		; NF = 0..3
 3599 1613  E6 F0       	AND	0F0H		; ein anderer Kanal aus 4-7 geoeffnet?
 3600 1615  11          	DB	11H	; LD DE,0FE6H
 3601 1616  E6 0F       U14ED:	AND	0FH		; ein anderer Kanal aus 0-3 geoeffnet?
 3602 1618  C2 1790     	JP	NZ,U1668	; ja, Fehler
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  58
BAC85   Z80

 3603 161B  E5          	PUSH	HL		; Kanal-Offset
 3604         0000      if DEV
 3612                   endif
 3613 161C  01 4EC6     	LD	BC,'NF'+80H	; NF$
 3614 161F  CD CF48     	CALL	DIM7		; Adresse der Variable NF$ nach DE holen
 3615 1622  D5          	PUSH	DE
 3616 1623  21 0060     	LD	HL,FNAME	; Dateiname hier ablegen fuer MBIN/MBOUT
 3617 1626  5D          	LD	E,L
 3618 1627  54          	LD	D,H
 3619 1628  13          	INC	DE
 3620                   ; 28.12.2023:
 3621                   ; Dateinamen fuer MBIN/MBOUT vorbereiten, dazu 3x Dateityp, 8x Dateiname
 3622 1629  36 C4       	LD	(HL),'D'+80H	; Dateityp .DDD
 3623 162B  01 0002     	LD	BC,2		; 3 Zeichen
 3624 162E  ED B0       	LDIR			; kopieren
 3625 1630  23          	INC	HL
 3626 1631  13          	INC	DE
 3627 1632  36 20       	LD	(HL),' '
 3628 1634  0E 07       	LD	C,7		; 8 Zeichen (B ist noch 0 vom letzten LDIR)
 3629 1636  ED B0       	LDIR			; 8x mit Leerzeichen vorbelegen
 3630                   ;	INC	HL		; abschliessende 0 nicht mehr erforderlich
 3631                   ;	LD	(HL),C		; Ende-0 anhaengen
 3632                   
 3633 1638  E1          	POP	HL		; HL = NF$
 3634 1639  4E          	LD	C,(HL)		; BC = Laenge der Zeichenkette
 3635 163A  23          	INC	HL
 3636                   ;	LD	B,(HL)		; B ist immer 0, noch vom letzten LDIR
 3637 163B  23          	INC	HL
 3638 163C  5E          	LD	E,(HL)
 3639 163D  23          	INC	HL
 3640 163E  56          	LD	D,(HL)		; DE = Beginn der Zeichenkette
 3641 163F  79          	LD	A,C
 3642 1640  B7          	OR	A
 3643 1641  28 0C       	JR	Z,U1518		; Laenge = 0
 3644 1643  FE 08       	CP	8
 3645 1645  38 02       	JR	C,U1517		; Laenge < 8
 3646 1647  0E 08       	LD	C,8		; Laenge auf max. 8 begrenzen
 3647 1649  21 0063     U1517:	LD	HL,FNAME+3	; Dateiname
 3648 164C  EB          	EX	DE,HL
 3649 164D  ED B0       	LDIR			; Dateiname dorthin kopieren
 3650 164F  E1          U1518:	POP	HL		; Kanal-Offset (0, 2, 4 .. 14)
 3651 1650  11 2014     	LD	DE,U1E71	; Sprungverteiler zum Oeffnen einer Datei
 3652 1653  CD 1770     	CALL	U1648		; Datei oeffnen
 3653 1656  C1          	POP	BC
 3654 1657  DA 1791     	JP	C,U1669		; Fehler
 3655 165A  3A 0055     	LD	A,(U0045)
 3656 165D  4F          	LD	C,A
 3657 165E  04          	INC	B
 3658 165F  AF          	XOR	A
 3659 1660  37          	SCF
 3660 1661  17          U152A:	RLA
 3661 1662  10 FD       	DJNZ	U152A
 3662 1664  B1          	OR	C
 3663 1665  32 0055     	LD	(U0045),A
 3664 1668  18 5C       	JR	U158F
 3665                   ;
 3666                   ; GOSUB 540	Lesen eines Strings aus einer Datei
 3667                   ;		Uebergabe des Identifiers in der Variablen NF
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  59
BAC85   Z80

 3668                   ;		Rueckgabe des Strings in der Variablen IN$
 3669                   ;
 3670 166A  CD 177E     GO540:	CALL	U1656		; Offset gemaess NF holen nach HL und B
 3671 166D  CB 40       	BIT	0,B		; Kanal zum Schreiben geoeffnet?
 3672 166F  C2 1791     	JP	NZ,U1669	; ja, unzulaessig
 3673 1672  11 17BE     	LD	DE,U16A0	; IN$ zurueckgeben
 3674 1675  CD 1776     U153E:	CALL	U164E		; Kanal geoeffnet?
 3675 1678  D2 1791     	JP	NC,U1669	; nein, unzulaessig
 3676 167B  D5          	PUSH	DE
 3677 167C  11 2034     	LD	DE,U1E91	; Sprungverteiler Lesen/Schreiben
 3678 167F  19          	ADD	HL,DE
 3679 1680  5E          	LD	E,(HL)
 3680 1681  23          	INC	HL
 3681 1682  56          	LD	D,(HL)		; Adresse der Routine lesen
 3682 1683  D5          	PUSH	DE
 3683 1684  FD E1       	POP	IY		; und in IY eintragen fuer spaeteres CALL (IY)
 3684 1686  C9          	RET
 3685                   ;
 3686                   ; GOSUB 560	Schreiben eines Strings in eine Datei
 3687                   ;		Uebergabe des Identifiers in der Variablen NF
 3688                   ;		Uebergabe des Strings in der Variablen SR$
 3689                   ;
 3690 1687  CD 177E     GO560:	CALL	U1656		; Offset gemaess NF holen nach HL und B
 3691 168A  CB 40       	BIT	0,B		; Kanal zum Lesen geoeffnet?
 3692 168C  CA 1791     	JP	Z,U1669		; ja, unzulaessig
 3693 168F  11 182F     	LD	DE,U170A	; SR$ zurueckgeben
 3694 1692  18 E1       	JR	U153E
 3695                   ;
 3696                   ; GOSUB 580	Schliessen einer Datei
 3697                   ;		Uebergabe des Identifiers in der Variablen NF
 3698                   ;
 3699 1694  CD 177E     GO580:	CALL	U1656		; Offset gemaess NF holen nach HL und B
 3700 1697  C5          	PUSH	BC
 3701 1698  CD 1776     	CALL	U164E		; Kanal geoeffnet?
 3702 169B  C1          	POP	BC
 3703 169C  D2 1791     	JP	NC,U1669	; nein, unzulaessig
 3704 169F  C5          	PUSH	BC
 3705 16A0  04          	INC	B
 3706 16A1  3A 0055     	LD	A,(U0045)	; geoeffnete Kanaele
 3707 16A4  1F          U156D:	RRA
 3708 16A5  10 FD       	DJNZ	U156D
 3709 16A7  D2 1790     	JP	NC,U1668	; Fehler, nicht der richtige Kanal
 3710 16AA  11 2024     	LD	DE,U1E81	; Sprungverteiler zum Schliessen einer Datei
 3711 16AD  CD 1770     	CALL	U1648		; Datei schliessen
 3712 16B0  C1          	POP	BC
 3713 16B1  DA 1791     	JP	C,U1669		; Fehler
 3714 16B4  3A 0055     	LD	A,(U0045)	; geoeffnete Kanaelt
 3715 16B7  4F          	LD	C,A
 3716 16B8  04          	INC	B
 3717 16B9  AF          	XOR	A		; alle Bits 0
 3718 16BA  37          	SCF			; 1-Bit
 3719 16BB  17          U1584:	RLA			; an die gewuenschte Stelle schieben
 3720 16BC  10 FD       	DJNZ	U1584
 3721 16BE  2F          	CPL			; Bit negieren
 3722 16BF  A1          	AND	C		; geoeffneten Kanal zuruecksetzen
 3723 16C0  32 0055     	LD	(U0045),A	; und eintragen
 3724 16C3  CD 0AAB     	CALL	U09C8		; unterste Bildschirmzeile malen
 3725 16C6  01 494E     U158F:	LD	BC,'IN'
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  60
BAC85   Z80

 3726 16C9  CD CF48     	CALL	DIM7		; Adresse der Variable IN nach DE holen
 3727 16CC  13          	INC	DE
 3728 16CD  13          	INC	DE
 3729 16CE  13          	INC	DE
 3730 16CF  AF          	XOR	A
 3731 16D0  12          	LD	(DE),A
 3732 16D1  C9          	RET
 3733                   ;
 3734                   ; GOSUB 600	Initialisieren des Grafikmodus, Loeschen des Bildschirms
 3735                   ;
 3736 16D2  CD 206D     GO600:	CALL	U1ECA		; Farbe nach Variable CC einstellen
 3737 16D5  01 484F     	LD	BC,'HO'
 3738 16D8  CD 17A5     	CALL	U1687		; Variable 'HO' auf 0 setzen
 3739 16DB  01 5645     	LD	BC,'VE'
 3740 16DE  CD 17A5     	CALL	U1687		; Variable 'VE' auf 0 setzen
 3741 16E1  21 0000     	LD	HL,0
 3742 16E4  22 003C     	LD	(XPOS2),HL
 3743 16E7  22 003E     	LD	(YPOS2),HL
 3744 16EA  22 0040     	LD	(XPOS1),HL
 3745 16ED  22 0042     	LD	(YPOS1),HL
 3746 16F0  C3 05DC     	JP	CLS		; Bildschirm loeschen
 3747                   ;
 3748                   ; GOTO 950	Beenden des BASICODE-Programms
 3749                   ;
 3750 16F3  CD 206D     GO950:	CALL	U1ECA		; Farbe nach Variable CC einstellen
 3751 16F6  E5          	PUSH	HL
 3752 16F7  CD 05DC     	CALL	CLS		; Bildschirm loeschen
 3753 16FA  E1          	POP	HL
 3754 16FB  AF          	XOR	A		; Z=1 (BREAK IN ... nicht anzeigen)
 3755 16FC  CD 06B5     	CALL	U0642		; BRK/STOP aktivieren
 3756 16FF  C3 C91B     	JP	END0		; zurueck in BASIC-ROM
 3757                   ;
 3758                   ; Warteschleife fuer GOSUB 400 (Tondauer) und GOSUB 450 (Warte auf Tastendruck)
 3759                   ;
 3760 1702  01 5344     U15DA:	LD	BC,'SD'		; Sound Duration (Tondauer in 0,1s Schritten)
 3761 1705  CD CF48     	CALL	DIM7		; Adresse der Variable SD nach DE holen
 3762 1708  D5          	PUSH	DE
 3763 1709  EB          	EX	DE,HL
 3764 170A  CD D6DD     	CALL	OPKOP		; Wert in Arithmetikregister 1 laden
 3765 170D  21 03E8     	LD	HL,WRA1+3
 3766 1710  7E          	LD	A,(HL)
 3767 1711  B7          	OR	A
 3768 1712  28 10       	JR	Z,U15FC
 3769 1714  C6 02       	ADD	2
 3770 1716  77          	LD	(HL),A
 3771 1717  FE 90       	CP	90H
 3772 1719  38 09       	JR	C,U15FC
 3773 171B  01 9180     	LD	BC,9180H	; -65536
 3774 171E  11 0000     	LD	DE,0
 3775 1721  CD D46F     	CALL	ADD5
 3776 1724  CD C96F     U15FC:	CALL	EPRVL3		; Ausdruck berechnen -> DE
 3777 1727  EB          	EX	DE,HL
 3778 1728  22 005A     	LD	(U004A),HL
 3779 172B  7C          	LD	A,H
 3780 172C  B5          	OR	L
 3781 172D  D1          	POP	DE
 3782 172E  C9          	RET
 3783                   ;
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  61
BAC85   Z80

 3784                   ; Werte der Variablen HO, VE und CN holen
 3785                   ;
 3786 172F  01 484F     U1607:	LD	BC,'HO'		; Horizontalposition
 3787 1732  CD CF48     	CALL	DIM7		; Adresse der Variable HO nach DE holen
 3788 1735  EB          	EX	DE,HL
 3789 1736  CD D6DD     	CALL	OPKOP		; Wert in Arithmetikregister 1 laden
 3790 1739  01 8920     	LD	BC,8920H
 3791 173C  11 0000     	LD	DE,0		; 320
 3792 173F  CD D59A     	CALL	MUL1		; HO*320
 3793 1742  CD C96F     	CALL	EPRVL3		; Ausdruck berechnen -> DE
 3794 1745  ED 53 003C  	LD	(XPOS2),DE	; X-Position ablegen
 3795 1749  01 5645     	LD	BC,'VE'		; Vertikalposition
 3796 174C  CD CF48     	CALL	DIM7		; Adresse der Variable VE nach DE holen
 3797 174F  EB          	EX	DE,HL
 3798 1750  CD D6DD     	CALL	OPKOP		; Wert in Arithmetikregister 1 laden
 3799 1753  01 8870     	LD	BC,8870H	; (BC=8900H waere 256)
 3800 1756  11 0000     	LD	DE,0		; 240
 3801 1759  CD D59A     	CALL	MUL1		; VE*240
 3802 175C  CD C96F     	CALL	EPRVL3		; Ausdruck berechnen -> DE
 3803 175F  ED 53 003E  	LD	(YPOS2),DE	; Y-Position ablegen
 3804 1763  01 434E     GETCN:	LD	BC,'CN'		; Farbe (Color Numerisch)
 3805 1766  CD 1799     	CALL	U167B		; Wert der Variable CN nach HL holen
 3806 1769  7D          	LD	A,L
 3807 176A  32 0044     	LD	(CN),A		; Wert von CN speichern
 3808 176D  C9          	RET
 3809                   
 3810 176E  FD E9       CALLIY:	JP	(IY)		; CALL (IY)
 3811         176F      CALLHL:	EQU	$-1		; CALL (HL)
 3812                   ;
 3813                   ; Verzweigen gemaess Sprungverteiler
 3814                   ; PE:	DE = Adresse des Sprungverteilers
 3815                   ;	HL = Offset (0 bei NF=0, 2 bei NF=2 usw.)
 3816                   ;
 3817 1770  19          U1648:	ADD	HL,DE
 3818 1771  7E          	LD	A,(HL)
 3819 1772  23          	INC	HL
 3820 1773  66          	LD	H,(HL)
 3821 1774  6F          	LD	L,A
 3822 1775  E9          	JP	(HL)
 3823                   ;
 3824                   ; Kanal geoeffnet?
 3825                   ; PE:	B=Kanal-Nr. NF (0-7)
 3826                   ;
 3827 1776  04          U164E:	INC	B		; B = 1-8
 3828 1777  3A 0055     	LD	A,(U0045)
 3829 177A  1F          U1652:	RRA
 3830 177B  10 FD       	DJNZ	U1652
 3831 177D  C9          	RET
 3832                   ;
 3833                   ; Offset entsprechend Variable NF holen
 3834                   ; PA:	HL = NF*2
 3835                   ;	B = NF
 3836                   ;
 3837 177E  D5          U1656:	PUSH	DE
 3838 177F  01 4E46     	LD	BC,'NF'
 3839 1782  CD 1799     	CALL	U167B		; Wert der Variable NF nach HL holen
 3840 1785  D1          	POP	DE
 3841 1786  24          	INC	H
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  62
BAC85   Z80

 3842 1787  25          	DEC	H
 3843 1788  20 06       	JR	NZ,U1668	; H > 0 ist unzulaessig
 3844 178A  7D          	LD	A,L
 3845 178B  45          	LD	B,L
 3846 178C  29          	ADD	HL,HL
 3847 178D  FE 08       	CP	8
 3848 178F  D8          	RET	C		; OK (NF liegt zwischen 0 und 7)
 3849                   ; Fehler:
 3850 1790  F1          U1668:	POP	AF		; RET-Adresse vom Stack nehmen
 3851 1791  3E FF       U1669:	LD	A,0FFH		; Fehler setzen
 3852 1793  32 0053     	LD	(U0043),A
 3853 1796  C3 1817     	JP	U16F9		; Variable IN zurueckmelden
 3854                   ;
 3855                   ; Wert einer Variable lesen
 3856                   ; PE:	BC=Name der Variablen
 3857                   ; PA:	HL=Zahlenwert
 3858                   ;
 3859 1799  CD CF48     U167B:	CALL	DIM7		; Adresse der Variable nach DE holen
 3860 179C  EB          	EX	DE,HL
 3861 179D  CD D6DD     	CALL	OPKOP		; Wert in Arithmetikregister 1 laden
 3862 17A0  CD C96F     	CALL	EPRVL3		; Ausdruck berechnen -> DE
 3863 17A3  EB          	EX	DE,HL		; Uebergabe in HL
 3864 17A4  C9          	RET
 3865                   ;
 3866                   ; Wert einer Variable holen und Inhalt auf 0 setzen
 3867                   ; PE:	BC=Name der Variablen
 3868                   ;
 3869 17A5  CD CF48     U1687:	CALL	DIM7		; Adresse der Variable nach DE holen
 3870 17A8  AF          	XOR	A
 3871 17A9  12          	LD	(DE),A		; 0 eintragen
 3872 17AA  13          	INC	DE
 3873 17AB  13          	INC	DE
 3874 17AC  13          	INC	DE
 3875 17AD  12          	LD	(DE),A		; 0 eintragen
 3876 17AE  C9          	RET
 3877                   ;
 3878                   ; Zeichenkette aus SR$ holen
 3879                   ;
 3880 17AF  01 53D2     U1691:	LD	BC,'SR'+80H	; SR$
 3881 17B2  CD CF48     	CALL	DIM7		; Adresse der Variable SR$ nach DE holen
 3882 17B5  EB          	EX	DE,HL
 3883 17B6  46          	LD	B,(HL)		; B = Anzahl Zeichen
 3884 17B7  04          	INC	B		; Laenge+1
 3885 17B8  23          	INC	HL
 3886 17B9  23          	INC	HL
 3887 17BA  5E          	LD	E,(HL)
 3888 17BB  23          	INC	HL
 3889 17BC  56          	LD	D,(HL)		; DE = Zeiger auf Zeichenkette
 3890 17BD  C9          	RET
 3891                   ;
 3892                   ; Variable IN$ zurueckgeben (aus Datei Lesen)
 3893                   ;
 3894 17BE  01 49CE     U16A0:	LD	BC,'IN'+80H	; IN$
 3895 17C1  CD CF48     	CALL	DIM7		; Adresse der Variable IN$ nach DE holen
 3896 17C4  D5          	PUSH	DE
 3897 17C5  2A 03DB     	LD	HL,(FSLPTR)	; erste freie Adresse hinter den Variablen
 3898 17C8  AF          	XOR	A
 3899 17C9  32 0053     	LD	(U0043),A	; 00 = kein Fehler
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  63
BAC85   Z80

 3900 17CC  5F          	LD	E,A
 3901 17CD  E5          U16AF:	PUSH	HL
 3902 17CE  D5          	PUSH	DE
 3903 17CF  CD 176E     	CALL	CALLIY		; CALL (IY) => hier Leseroutine
 3904 17D2  D1          	POP	DE
 3905 17D3  E1          	POP	HL
 3906 17D4  FE 0D       	CP	CR
 3907 17D6  28 26       	JR	Z,U16E0
 3908 17D8  FE 20       	CP	' '
 3909 17DA  38 04       	JR	C,U16C2
 3910 17DC  FE 7F       	CP	7FH
 3911 17DE  38 07       	JR	C,U16C9
 3912 17E0  3E FF       U16C2:	LD	A,0FFH
 3913 17E2  32 0053     	LD	(U0043),A	; FF = Fehler
 3914 17E5  3E 23       	LD	A,23H
 3915 17E7  77          U16C9:	LD	(HL),A
 3916 17E8  23          	INC	HL
 3917 17E9  E5          	PUSH	HL
 3918 17EA  ED 72       	SBC	HL,SP
 3919 17EC  E1          	POP	HL
 3920 17ED  D2 C33E     	JP	NC,OMER
 3921 17F0  1C          	INC	E
 3922 17F1  3A 0054     	LD	A,(U0044)	; FFH = Abbruch/Fehler (0 = OK)
 3923 17F4  57          	LD	D,A
 3924 17F5  3A 0053     	LD	A,(U0043)
 3925 17F8  B2          	OR	D
 3926 17F9  32 0053     	LD	(U0043),A
 3927 17FC  18 CF       	JR	U16AF
 3928                   	;
 3929 17FE  7B          U16E0:	LD	A,E
 3930 17FF  CD D1E1     	CALL	STROP
 3931 1802  E1          	POP	HL
 3932 1803  77          	LD	(HL),A
 3933 1804  23          	INC	HL
 3934 1805  23          	INC	HL
 3935 1806  73          	LD	(HL),E
 3936 1807  23          	INC	HL
 3937 1808  72          	LD	(HL),D
 3938 1809  2B          	DEC	HL
 3939 180A  2B          	DEC	HL
 3940 180B  2B          	DEC	HL
 3941 180C  B7          	OR	A
 3942 180D  28 08       	JR	Z,U16F9		; Variable IN zurueckmelden
 3943 180F  2A 03DB     	LD	HL,(FSLPTR)	; erste freie Adresse hinter den Variablen
 3944 1812  4F          	LD	C,A
 3945 1813  06 00       	LD	B,0
 3946 1815  ED B0       	LDIR
 3947 1817  01 494E     U16F9:	LD	BC,'IN'
 3948 181A  CD CF48     	CALL	DIM7		; Adresse der Variable IN nach DE holen
 3949 181D  3A 0053     	LD	A,(U0043)
 3950 1820  3C          	INC	A
 3951 1821  6F          	LD	L,A
 3952 1822  26 00       	LD	H,0
 3953 1824  2B          	DEC	HL
 3954                   ;	JP	U1671		; in Variable 'IN' eintragen
 3955                   ;
 3956                   ; Wert in eine Variable eintragen
 3957                   ; PE:	HL=Wert
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  64
BAC85   Z80

 3958                   ;	DE=Adresse
 3959                   ;
 3960 1825  7C          U1671:	LD	A,H
 3961 1826  45          	LD	B,L
 3962 1827  D5          	PUSH	DE
 3963 1828  CD D0B1     	CALL	FRE3
 3964 182B  E1          	POP	HL
 3965 182C  C3 D6F7     	JP	OPTRAN
 3966                   ;
 3967                   ; Variable SR$ zurueckgeben (in Datei schreiben)
 3968                   ;
 3969 182F  CD 17AF     U170A:	CALL	U1691		; Zeichenkette SR$ holen
 3970 1832  0E 00       	LD	C,0		; fehlerfrei annehmen
 3971 1834  18 0E       	JR	U171F
 3972                   	;
 3973 1836  C5          U1711:	PUSH	BC
 3974 1837  D5          	PUSH	DE
 3975 1838  1A          	LD	A,(DE)		; Zeichen aus SR$
 3976 1839  CD 176E     	CALL	CALLIY		; CALL (IY) => hier Schreibroutine
 3977 183C  D1          	POP	DE
 3978 183D  C1          	POP	BC
 3979 183E  3A 0054     	LD	A,(U0044)	; FFH = Abbruch/Fehler (0 = OK)
 3980 1841  B1          	OR	C
 3981 1842  4F          	LD	C,A
 3982 1843  13          	INC	DE		; naechstes Zeichen
 3983 1844  10 F0       U171F:	DJNZ	U1711		; bis Zeichenanzahl abgearbeitet ist
 3984 1846  79          	LD	A,C
 3985 1847  32 0053     	LD	(U0043),A
 3986 184A  3E 0D       	LD	A,CR		; Zeichenkette in Datei mit CR abschliessen
 3987 184C  CD 176E     	CALL	CALLIY		; CALL (IY) => hier Schreibroutine
 3988 184F  18 C6       	JR	U16F9		; Variable IN zurueckmelden
 3989                   ;
 3990                   ; Datei oeffnen (BASICODE lesen)
 3991                   ; NF=0
 3992                   ;
 3993 1851  CD 18C5     U172D:	CALL	U178A		; Stack 1KByte nach vorn verlagern
 3994 1854  D8          	RET	C		; zu wenig Speicherplatz
 3995 1855  2A 0047     	LD	HL,(U0033)	; Ende ASCII-File
 3996 1858  22 0049     	LD	(CPOINT),HL	; als Pufferzeiger eintragen (Puffer = leer)
 3997 185B  18 07       	JR	U1740
 3998                   ;
 3999                   ; Datei Lesen (BASICODE lesen)
 4000                   ; NF=0
 4001                   ;
 4002 185D  3A 0056     U1739:	LD	A,(U0046)
 4003 1860  FE 04       	CP	4
 4004 1862  28 21       	JR	Z,U1761
 4005 1864  F5          U1740:	PUSH	AF
 4006 1865  ED 5B 0047  	LD	DE,(U0033)	; Ende ASCII-File
 4007 1869  2A 0049     	LD	HL,(CPOINT)	; Pufferzeiger
 4008 186C  CD C689     	CALL	CPREG		; Vergleiche Register DE mit HL
 4009 186F  CC 198A     	CALL	Z,U17F1		; Puffer leer, 1 KByte-Block einlesen
 4010 1872  7E          	LD	A,(HL)
 4011 1873  23          	INC	HL
 4012 1874  22 0049     	LD	(CPOINT),HL	; Pufferzeiger
 4013 1877  32 0056     	LD	(U0046),A
 4014 187A  FE 04       	CP	4
 4015 187C  20 05       	JR	NZ,U175F
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  65
BAC85   Z80

 4016 187E  21 0053     	LD	HL,U0043
 4017 1881  CB C6       	SET	0,(HL)
 4018 1883  F1          U175F:	POP	AF
 4019 1884  C9          	RET
 4020                   	;
 4021 1885  21 0053     U1761:	LD	HL,U0043
 4022 1888  CB C6       	SET	0,(HL)
 4023 188A  3E 0D       	LD	A,CR
 4024 188C  C9          	RET
 4025                   ;
 4026                   ; Datei schliessen (BASICODE schreiben)
 4027                   ; NF=1
 4028                   ;
 4029 188D  2A 0049     U17D7:	LD	HL,(CPOINT)	; Pufferzeiger
 4030 1890  ED 5B 0047  	LD	DE,(U0033)	; Ende ASCII-File
 4031 1894  36 04       U17DE:	LD	(HL),4		; ENDE-Zeichen eintragen
 4032 1896  23          	INC	HL
 4033 1897  CD C689     	CALL	CPREG		; Vergleiche Register DE mit HL
 4034 189A  20 F8       	JR	NZ,U17DE	; bis Rest vom Puffer damit gefuellt ist
 4035 189C  CD 190F     	CALL	U18A2		; letzten Datenblock schreiben
 4036 189F  3A 0053     	LD	A,(U0043)
 4037 18A2  87          	ADD	A
 4038 18A3  D8          	RET	C
 4039                   ;	JP	U1769		; Datei Schliessen (BASICODE lesen)
 4040                   ;
 4041                   ; Datei schliessen (BASICODE lesen)
 4042                   ; - 1K Pufferspeicher wird wieder freigegeben
 4043                   ; NF=0
 4044                   ;
 4045 18A4  F3          U1769:	DI
 4046 18A5  21 0000     	LD	HL,0
 4047 18A8  39          	ADD	HL,SP		; HL = aktueller Stackpointer, CY=0
 4048 18A9  ED 5B 0045  	LD	DE,(U0031)	; DE = Beginn ASCII-File
 4049 18AD  D5          	PUSH	DE		; Begin ASCII-File
 4050 18AE  EB          	EX	DE,HL
 4051 18AF  ED 52       	SBC	HL,DE		; Groesse der Stack-Belegung berechnen
 4052 18B1  38 0F       	JR	C,U1787		; zu wenig Platz
 4053 18B3  4D          	LD	C,L
 4054 18B4  44          	LD	B,H
 4055 18B5  E1          	POP	HL		; Beginn ASCII-File
 4056 18B6  ED 5B 0047  	LD	DE,(U0033)	; Ende ASCII-File
 4057 18BA  1B          	DEC	DE
 4058 18BB  2B          	DEC	HL
 4059 18BC  ED B8       	LDDR			; Stack-Inhalt mit nehmen
 4060 18BE  EB          	EX	DE,HL
 4061 18BF  23          	INC	HL		; Stack an Ende verlegen
 4062 18C0  F9          	LD	SP,HL		; und SP neu setzen
 4063 18C1  3E          	DB	3EH	; LD A,0E1H (POP HL verhindern)
 4064 18C2  E1          U1787:	POP	HL
 4065 18C3  FB          	EI
 4066 18C4  C9          	RET
 4067                   ;
 4068                   ; Vorbereitung fuer Lesen bzw. Schreiben von BASICODE-Datenfile
 4069                   ; - Blocknummer auf FFH setzen
 4070                   ; - Stack um 1KByte nach vorn verlegen
 4071                   ; PA:	CY=1	zu wenig Speicherplatz
 4072                   ;
 4073 18C5  3E FF       U178A:	LD	A,0FFH
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  66
BAC85   Z80

 4074 18C7  32 004B     	LD	(BLNR),A
 4075 18CA  F3          	DI
 4076 18CB  21 0000     	LD	HL,0
 4077 18CE  39          	ADD	HL,SP
 4078 18CF  E5          	PUSH	HL		; aktueller Stack
 4079 18D0  11 FC00     	LD	DE,-400H	; 1 KByte
 4080 18D3  19          	ADD	HL,DE		; vor dem Stack
 4081 18D4  ED 5B 03DB  	LD	DE,(FSLPTR)	; erste freie Adresse hinter den Variablen
 4082 18D8  CD C689     	CALL	CPREG		; Vergleiche Register DE mit HL
 4083 18DB  C1          	POP	BC		; aktueller Stack
 4084 18DC  38 14       	JR	C,U17B7		; zu wenig Platz
 4085 18DE  F9          	LD	SP,HL		; Stack 1KByte nach vorn verlegen
 4086 18DF  EB          	EX	DE,HL		; neuer Stack jetzt in DE
 4087 18E0  C5          	PUSH	BC		; aktueller Stack
 4088 18E1  2A 0356     	LD	HL,(STDPTR)	; RAM-Mindestgroesse (KC85/3=7EFF KC85/4=BEFF)
 4089 18E4  22 0047     	LD	(U0033),HL	; Ende ASCII-File
 4090 18E7  ED 42       	SBC	HL,BC		; Groesse der Stack-Belegung berechnen
 4091 18E9  4D          	LD	C,L
 4092 18EA  44          	LD	B,H
 4093 18EB  E1          	POP	HL		; aktueller Stack
 4094 18EC  ED B0       	LDIR			; Stack-Inhalt mit nehmen
 4095 18EE  ED 53 0045  	LD	(U0031),DE	; Beginn ASCII-File
 4096 18F2  FB          U17B7:	EI
 4097 18F3  C9          	RET
 4098                   ;
 4099                   ; Datei oeffnen (BASICODE schreiben)
 4100                   ; NF=1
 4101                   ;
 4102 18F4  CD 18C5     U17B9:	CALL	U178A		; Stack 1KByte nach vorn verlagern
 4103 18F7  D8          	RET	C		; zu wenig Speicherplatz
 4104 18F8  2A 0045     	LD	HL,(U0031)	; Beginn ASCII-File
 4105 18FB  22 0049     	LD	(CPOINT),HL	; als Pufferzeiger setzen (Puffer = leer)
 4106 18FE  C9          	RET
 4107                   ;
 4108                   ; Datei Schreiben (BASICODE schreiben)
 4109                   ; NF=1
 4110                   ;
 4111 18FF  2A 0049     U17C4:	LD	HL,(CPOINT)	; Pufferzeiger
 4112 1902  77          	LD	(HL),A		; Datenbyte in Puffer eintragen
 4113 1903  23          	INC	HL		; +1
 4114 1904  22 0049     	LD	(CPOINT),HL	; Pufferzeiger neu
 4115 1907  ED 5B 0047  	LD	DE,(U0033)	; Ende ASCII-File
 4116 190B  CD C689     	CALL	CPREG		; Vergleiche Register DE mit HL
 4117 190E  C0          	RET	NZ		; noch Platz im Puffer
 4118                   ;
 4119                   ; BASICODE Datenblock 1 KByte aus Puffer schreiben
 4120                   ;
 4121 190F  26 00       U18A2:	LD	H,0		; Startwert Pruefbyte
 4122 1911  D9          	EXX
 4123 1912  CD 1A66     	CALL	U1919		; BASICODE Bandsusgabe vorbereiten
 4124 1915  3A 004B     	LD	A,(BLNR)
 4125 1918  3C          	INC	A		; Blocknummer +1
 4126 1919  32 004B     	LD	(BLNR),A
 4127 191C  AF          	XOR	A
 4128 191D  32 0054     	LD	(U0044),A	; Abbruch/Fehler zurueck setzen
 4129 1920  CD 1AD1     	CALL	VTON		; 5 Sekunden Vorton
 4130 1923  3E 01       	LD	A,1		; 01H = STH start of header
 4131 1925  CD 1B52     	CALL	BCOUT		; ein Byte schreiben
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  67
BAC85   Z80

 4132 1928  3A 004B     	LD	A,(BLNR)	; Blocknummer
 4133 192B  CD 1B52     	CALL	BCOUT		; ein Byte schreiben
 4134 192E  2A 0045     	LD	HL,(U0031)	; Beginn ASCII-File
 4135 1931  22 0049     	LD	(CPOINT),HL	; Pufferzeiger
 4136 1934  01 0400     	LD	BC,1024		; Blockgroesse = 1 KByte
 4137 1937  7E          U18CA:	LD	A,(HL)		; Byte aus Puffer entnehmen
 4138 1938  CD 1B52     	CALL	BCOUT		; ein Byte schreiben
 4139 193B  CD 068A     	CALL	U0622		; Taste gedrueckt?
 4140 193E  20 12       	JR	NZ,U18E5	; ja
 4141 1940  ED A1       	CPI			; HL=HL+1 und BC=BC-1
 4142 1942  EA 1937     	JP	PE,U18CA	; bis BC=0
 4143 1945  3E 03       U18D0:	LD	A,3		; Ende-Byte 03H = ETX
 4144 1947  CD 1B52     	CALL	BCOUT		; ein Byte schreiben
 4145 194A  CD 1B4D     	CALL	BCPRO		; Pruefbyte schreiben
 4146 194D  CD 1ACB     	CALL	NTON		; 1 Sekunde Nachton
 4147 1950  18 05       	JR	BCOOLD		; umgeleitete ISR (Ausgabe) zurueckstellen
 4148                   	;
 4149 1952  3E FF       U18E5:	LD	A,0FFH
 4150 1954  32 0054     	LD	(U0044),A	; Abbruch/Fehler setzen
 4151                   ;	JR	BCOOLD		; umgeleitete ISR (Ausgabe) zurueckstellen
 4152                   ;
 4153                   ; umgeleitete ISR (bei Ausgabe) wieder zurueckstellen
 4154                   ;
 4155 1957  F3          BCOOLD:	DI
 4156 1958  3E 03       	LD	A,3
 4157 195A  D3 8D       	OUT	(CTC1),A
 4158 195C  2A 004F     	LD	HL,(U003F)	; gemerkter Wert fuer
 4159 195F  22 01EA     	LD	(01EAH),HL	; ISR CTC1
 4160 1962  18 0D       	JR	BCOLD
 4161                   ;
 4162                   ; umgeleitete ISR (bei Eingabe) wieder zurueckstellen
 4163                   ;
 4164 1964  F3          BCIOLD:	DI
 4165 1965  2A 004D     	LD	HL,(U003D)	; gemerkter Wert fuer
 4166 1968  22 01E4     	LD	(01E4H),HL	; Interrupt PIO Kanal A - Kassetteneingabe
 4167 196B  2A 004F     	LD	HL,(U003F)	; gemerkter Wert fuer
 4168 196E  22 01EC     	LD	(01ECH),HL	; Interrupt CTC 2
 4169 1971  3E 03       BCOLD:	LD	A,3
 4170 1973  D3 8D       	OUT	(CTC1),A	; CTC1 stoppen
 4171 1975  D3 8A       	OUT	(PIOAS),A	; PIO-A DI
 4172 1977  DB 88       	IN	A,(PIOAD)
 4173 1979  E6 9F       	AND	9FH		; LED aus, Stop Recorder
 4174 197B  D3 88       	OUT	(PIOAD),A
 4175 197D  3E 47       	LD	A,47H
 4176 197F  D3 8E       	OUT	(CTC2),A	; CTC2 Zaehler, ZK folgt
 4177 1981  D3 8E       	OUT	(CTC2),A	; ZK
 4178 1983  FB          	EI
 4179 1984  21 1D06     	LD	HL,U1B63	; Text 'Bitte Band stoppen'
 4180 1987  C3 1C08     	JP	U1AE5		; anzeigen
 4181                   ;
 4182                   ; BASICODE-Datenblock 1 KByte einlesen in Puffer
 4183                   ;
 4184 198A  3A 004B     U17F1:	LD	A,(BLNR)
 4185 198D  3C          	INC	A		; erwartete Blocknummer+1
 4186 198E  32 004B     	LD	(BLNR),A
 4187 1991  AF          	XOR	A
 4188 1992  32 0054     	LD	(U0044),A	; Abbruch/Fehler zuruecksetzen
 4189 1995  CD 1A39     	CALL	U18EC		; BASICODE Bandeingabe vorbereiten
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  68
BAC85   Z80

 4190 1998  CD 1A83     U17FF:	CALL	BCSYN		; Synchronisation mit Frequenzmessung
 4191 199B  CD 1AF4     U1802:	CALL	BCIN		; ein Byte lesen
 4192 199E  38 FB       	JR	C,U1802		; Fehler, naechstes Byte lesen
 4193 19A0  20 48       	JR	NZ,U1851	; Taste gedrueckt
 4194 19A2  FE 01       	CP	1		; 01H = STH start of header
 4195 19A4  28 08       	JR	Z,U1815
 4196 19A6  21 1DB9     	LD	HL,U1C16	; Text 'kein BASICODE-Bestand!'
 4197 19A9  CD 1C08     	CALL	U1AE5		; anzeigen
 4198 19AC  18 EA       	JR	U17FF		; und wiederholen
 4199                   	;
 4200 19AE  CD 1AF4     U1815:	CALL	BCIN		; ein Byte lesen (Blocknummer)
 4201 19B1  20 37       	JR	NZ,U1851	; Taste gedrueckt
 4202 19B3  32 01F2     	LD	(U01F2),A	; Blocknummer in (IX+2) eintragen
 4203 19B6  4F          	LD	C,A
 4204 19B7  3A 004B     	LD	A,(BLNR)	; erwartete Blocknummer
 4205 19BA  B9          	CP	C
 4206 19BB  28 05       	JR	Z,U1829		; Blocknummer stimmt
 4207 19BD  CD 19F6     	CALL	U185D		; Anzeige gelesene und erwartete Blocknummer
 4208 19C0  18 D6       	JR	U17FF		; und wiederholen
 4209                   	;
 4210 19C2  2A 0045     U1829:	LD	HL,(U0031)	; Beginn ASCII-File
 4211 19C5  22 0049     	LD	(CPOINT),HL	; Pufferzeiger
 4212 19C8  01 0400     	LD	BC,1024		; Blockgroesse = 1 KByte
 4213 19CB  CD 1AF4     U1832:	CALL	BCIN		; ein Byte lesen
 4214 19CE  20 1A       	JR	NZ,U1851	; Taste gedrueckt
 4215 19D0  77          	LD	(HL),A		; Byte in Puffer ablegen
 4216 19D1  ED A1       	CPI			; HL=HL+1 und BC=BC-1
 4217 19D3  EA 19CB     	JP	PE,U1832	; bis BC=0
 4218 19D6  CD 1AF4     	CALL	BCIN		; ein Byte lesen (Ende-Byte 03H = ETX)
 4219                   				; wird nicht ueberprueft
 4220 19D9  CD 1AF4     	CALL	BCIN		; ein Byte lesen (Check-Byte)
 4221 19DC  20 0C       	JR	NZ,U1851	; Taste gedrueckt
 4222 19DE  D9          	EXX
 4223 19DF  24          	INC	H		; Pruefsumme von BCIN berechnet
 4224 19E0  25          	DEC	H		; Pruefsumme korrekt?
 4225 19E1  28 0C       	JR	Z,U1856		; ja
 4226 19E3  CD 1A22     	CALL	U188B		; Lesefehler, zurueck J/N?
 4227 19E6  28 B0       	JR	Z,U17FF		; ja, wiederholen
 4228 19E8  18 05       	JR	U1856
 4229                   	;
 4230 19EA  3E FF       U1851:	LD	A,0FFH		; Kennung fuer Abbruch/Fehler
 4231 19EC  32 0054     	LD	(U0044),A	; Abbruch eintragen
 4232 19EF  CD 1964     U1856:	CALL	BCIOLD		; umgeleitete ISR (Eingabe) zurueckstellen
 4233 19F2  2A 0045     	LD	HL,(U0031)	; Beginn ASCII-File
 4234 19F5  C9          	RET
 4235                   ;
 4236                   ; Anzeige der gelesenen und erwarteten Blocknummer
 4237                   ;
 4238 19F6  21 1D7D     U185D:	LD	HL,U1BDA	; Zeichenkette "falsche Blocknummer..."
 4239 19F9  11 1D92     	LD	DE,U1BEF	; hier die gelesene Blocknummer einbauen
 4240 19FC  3A 01F2     	LD	A,(U01F2)	; entspricht (IX+2) = gelesene Blocknummer
 4241 19FF  CD 1A0E     	CALL	DEHEX		; in Zeichenkette einbauen
 4242 1A02  11 1D9E     	LD	DE,U1BFB	; hier die erwartete Blocknummer einbauen
 4243 1A05  3A 004B     U186C:	LD	A,(BLNR)	; erwartete Blocknummer
 4244 1A08  CD 1A0E     	CALL	DEHEX		; in Zeichenkette einbauen
 4245 1A0B  C3 1C08     	JP	U1AE5		; und anzeigen
 4246                   ;
 4247                   ; aehnlich AHEX, aber Eintragen in Zeichenkette (DE)
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  69
BAC85   Z80

 4248                   ;
 4249 1A0E  F5          DEHEX:	PUSH	AF
 4250 1A0F  0F          	RRCA
 4251 1A10  0F          	RRCA
 4252 1A11  0F          	RRCA
 4253 1A12  0F          	RRCA
 4254 1A13  CD 1A18     	CALL	HEX1		; 1x aufrufen
 4255 1A16  13          	INC	DE		; naechste Position
 4256 1A17  F1          	POP	AF		; und dann reinlaufen
 4257 1A18  E6 0F       HEX1:	AND	0FH		; Maske
 4258 1A1A  C6 90       	ADD	A,90H		; uebliche
 4259 1A1C  27          	DAA			; Routine
 4260 1A1D  CE 40       	ADC	A,40H		; fuer die
 4261 1A1F  27          	DAA			; Hexausgabe
 4262 1A20  12          	LD	(DE),A
 4263 1A21  C9          	RET
 4264                   ;
 4265                   ; Anzeige Lesefehler und Abfrage Wiederholung J/N?
 4266                   ;
 4267 1A22  21 1D58     U188B:	LD	HL,U1BB5	; Text 'Lesefehler in Block ...'
 4268 1A25  11 1D6D     	LD	DE,U1BCA	; hier die erwartete Blocknummer einbauen
 4269 1A28  CD 1A05     	CALL	U186C		; und anzeigen...
 4270 1A2B  CD 0694     U1894:	CALL	U062C		; Tastatureingabe abwarten
 4271 1A2E  E6 5F       	AND	5FH		; upcase
 4272 1A30  FE 4A       	CP	'J'
 4273 1A32  C8          	RET	Z		; Z=1 heisst wiederholen
 4274 1A33  FE 4E       	CP	'N'
 4275 1A35  20 F4       	JR	NZ,U1894
 4276 1A37  3D          	DEC	A		; Z=0 nicht wiederholen
 4277 1A38  C9          	RET
 4278                   ;
 4279                   ; BASICODE Bandeingabe vorbereiten
 4280                   ;
 4281 1A39  21 1CF3     U18EC:	LD	HL,U1B50	; Text 'Bitte Band starten'
 4282 1A3C  CD 1C08     	CALL	U1AE5		; anzeigen
 4283 1A3F  F3          	DI
 4284 1A40  3E 83       	LD	A,83H
 4285 1A42  D3 8A       	OUT	(PIOAS),A
 4286 1A44  2A 01E4     	LD	HL,(01E4H)	; Interrupt PIO Kanal A - Kassetteneingabe
 4287 1A47  22 004D     	LD	(U003D),HL	; hier merken
 4288 1A4A  21 1C35     	LD	HL,ISRPA
 4289 1A4D  22 01E4     	LD	(01E4H),HL	; neuer Wert
 4290 1A50  2A 01EC     	LD	HL,(01ECH)	; Interrupt CTC Kanal 2 - Tondauer, Blinkfrequenz
 4291 1A53  22 004F     	LD	(U003F),HL
 4292 1A56  21 1C59     	LD	HL,ISRC2
 4293 1A59  22 01EC     	LD	(01ECH),HL	; interne ISR fuer CTC2
 4294 1A5C  DB 88       U190F:	IN	A,(PIOAD)
 4295 1A5E  F6 40       	OR	40H
 4296 1A60  E6 DF       	AND	0DFH
 4297 1A62  D3 88       	OUT	(PIOAD),A
 4298 1A64  FB          	EI
 4299 1A65  C9          	RET
 4300                   ;
 4301                   ; BASICODE Bandsusgabe vorbereiten
 4302                   ;
 4303 1A66  21 1CF3     U1919:	LD	HL,U1B50	; Text 'Bitte Band starten'
 4304 1A69  CD 1C08     	CALL	U1AE5		; anzeigen
 4305 1A6C  3E 03       	LD	A,3
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  70
BAC85   Z80

 4306 1A6E  D3 8E       	OUT	(CTC2),A	; CTC2 stoppen
 4307 1A70  F3          	DI
 4308 1A71  2A 01EA     	LD	HL,(01EAH)	; Interrupt CTC Kanal 1 - Kassettenausgabe
 4309 1A74  22 004F     	LD	(U003F),HL	; hier merken
 4310 1A77  21 1C4F     	LD	HL,ISRC1	; neue ISR
 4311 1A7A  22 01EA     	LD	(01EAH),HL	; fuer CTC1 eintragen
 4312 1A7D  AF          	XOR	A
 4313 1A7E  32 01F0     	LD	(U01F0),A	; (IX+0) Zeitkonstante Kassettenroutinen
 4314 1A81  18 D9       	JR	U190F
 4315                   ;
 4316                   ; Synchronisation mit Frequenzmessung
 4317                   ; PA:	Z=0	Taste gedrueckt
 4318                   ;	B'	Schwingungen fuer "1"
 4319                   ;	C'	Schwingungen fuer "0"
 4320                   ;	H'=0	Startwert fuer Pruefsummenberechnung
 4321                   ;
 4322 1A83  D9          BCSYN:	EXX
 4323 1A84  01 0D10     BCY1:	LD	BC,0D10H	; ca. 0.7 sek Tondauer bei 2400Hz
 4324 1A87  5A          BCY2:	LD	E,D
 4325 1A88  CD 068A     	CALL	U0622		; Taste gedrueckt?
 4326 1A8B  C0          	RET	NZ		; ja
 4327 1A8C  CD 1B96     	CALL	BCBY		; eine Schwingung messen
 4328 1A8F  57          	LD	D,A
 4329 1A90  C6 04       	ADD	A,4
 4330 1A92  BB          	CP	E
 4331 1A93  38 EF       	JR	C,BCY1		; ausser Toloeranz (+5)
 4332 1A95  D6 09       	SUB	9
 4333 1A97  BB          	CP	E
 4334 1A98  30 EA       	JR	NC,BCY1		; ausser Toleranz (-5)
 4335 1A9A  ED A1       	CPI			; wie DEC BC
 4336 1A9C  EA 1A87     	JP	PE,BCY2		; wdh. bis BC=0
 4337 1A9F  60          	LD	H,B
 4338 1AA0  68          	LD	L,B		; HL=0
 4339 1AA1  50          	LD	D,B		; D=0
 4340 1AA2  CD 068A     BCY3:	CALL	U0622		; Taste gedrueckt?
 4341 1AA5  C0          	RET	NZ		; ja
 4342 1AA6  CD 1B96     	CALL	BCBY		; eine Schwingung messen
 4343 1AA9  5F          	LD	E,A
 4344 1AAA  19          	ADD	HL,DE		; addieren
 4345 1AAB  10 F5       	DJNZ	BCY3		; 256 Messungen addieren
 4346 1AAD  E5          	PUSH	HL
 4347 1AAE  7C          	LD	A,H
 4348 1AAF  CB 3C       	SRL	H		; /2
 4349 1AB1  84          	ADD	H
 4350 1AB2  47          	LD	B,A		; B=1.5 Schwingungen	"1"
 4351 1AB3  CB 3C       	SRL	H
 4352 1AB5  84          	ADD	H
 4353 1AB6  4F          	LD	C,A		; C=1.75 Schwingungen	"0"
 4354 1AB7  26 00       	LD	H,0		; Startwert fuer Pruefsummenberechnung in H'
 4355 1AB9  D9          	EXX
 4356 1ABA  E1          	POP	HL
 4357 1ABB  7C          	LD	A,H
 4358 1ABC  FE 45       	CP	45H
 4359 1ABE  38 05       	JR	C,U1B2F
 4360 1AC0  21 1E65     	LD	HL,U1CC2	; Text "Ein sehr schwaches Kassetteninterface..."
 4361 1AC3  18 03       	JR	U1B32		; anzeigen
 4362                   
 4363 1AC5  21 1D19     U1B2F:	LD	HL,U1B76	; Text 'Ich lese BASICODE'
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  71
BAC85   Z80

 4364 1AC8  C3 1C08     U1B32:	JP	U1AE5		; anzeigen
 4365                   ;
 4366                   ; Nachton ausgeben, ca. 1 Sekunde
 4367                   ;
 4368 1ACB  C5          NTON:	PUSH	BC
 4369 1ACC  01 C012     	LD	BC,0C012H	; ca. 1 sek
 4370 1ACF  18 0C       	JR	BCTON
 4371                   ;
 4372                   ; Vorton ausgeben, ca. 5 Sekunden
 4373                   ;
 4374 1AD1  C5          VTON:	PUSH	BC
 4375 1AD2  01 C05D     	LD	BC,0C05DH	; ca. 5 Sekunden
 4376 1AD5  3E 85       	LD	A,85H
 4377 1AD7  D3 8D       	OUT	(CTC1),A	; Zeitgeber, VT=16, ZK folgt
 4378 1AD9  3E 17       	LD	A,17H		; ZK fuer 2400Hz
 4379 1ADB  D3 8D       	OUT	(CTC1),A
 4380 1ADD  3A 01F0     BCTON:	LD	A,(U01F0)	; Zeitkonstante
 4381 1AE0  B7          	OR	A
 4382 1AE1  20 FA       	JR	NZ,BCTON	; warten, bis von ISR 0 eingetragen ist
 4383 1AE3  3E 01       	LD	A,1
 4384 1AE5  32 01F0     	LD	(U01F0),A	; wieder auf 1 setzen
 4385 1AE8  10 F3       	DJNZ	BCTON
 4386 1AEA  0D          	DEC	C
 4387 1AEB  20 F0       	JR	NZ,BCTON	; wiederholen
 4388 1AED  3E FF       	LD	A,0FFH
 4389 1AEF  32 01F0     	LD	(U01F0),A	; und noch weitere 255 Schwingungen
 4390 1AF2  C1          	POP	BC
 4391 1AF3  C9          	RET
 4392                   ;
 4393                   ; Ein Byte BASICODE lesen
 4394                   ; PA:	Z=0	Taste gedrueckt
 4395                   ;	CY=1	Fehler
 4396                   ;
 4397 1AF4  D9          BCIN:	EXX
 4398 1AF5  2E 00       	LD	L,0
 4399 1AF7  5D          	LD	E,L		; E=0
 4400 1AF8  CD 068A     BCI1:	CALL	U0622		; Taste gedrueckt?
 4401 1AFB  C0          	RET	NZ		; ja
 4402 1AFC  2D          	DEC	L
 4403 1AFD  28 4B       	JR	Z,BCI6		; 256 mal kein Startbit gelesen
 4404 1AFF  CD 1BA1     	CALL	BCHB		; Zeit abwarten
 4405 1B02  57          	LD	D,A
 4406 1B03  83          	ADD	E
 4407 1B04  5A          	LD	E,D
 4408 1B05  B9          	CP	C
 4409 1B06  38 F0       	JR	C,BCI1		; kein Startbit
 4410 1B08  CB 3F       	SRL	A
 4411 1B0A  B9          	CP	C
 4412 1B0B  30 EB       	JR	NC,BCI1		; kein Startbit
 4413 1B0D  1E 80       	LD	E,80H
 4414 1B0F  2E 00       	LD	L,0
 4415 1B11  7D          BCI2:	LD	A,L
 4416 1B12  B7          	OR	A
 4417 1B13  CC 1BA1     	CALL	Z,BCHB		; Bit lesen
 4418 1B16  2E 00       	LD	L,0
 4419 1B18  B8          	CP	B
 4420 1B19  30 1D       	JR	NC,BCI5		; "0" einschieben
 4421 1B1B  57          	LD	D,A
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  72
BAC85   Z80

 4422 1B1C  CD 1BA1     	CALL	BCHB		; Bit lesen
 4423 1B1F  82          	ADD	D
 4424 1B20  B9          	CP	C
 4425 1B21  30 15       	JR	NC,BCI5		; "0" einschieben
 4426 1B23  B8          	CP	B
 4427 1B24  38 06       	JR	C,BCI3
 4428 1B26  CD 1BA1     	CALL	BCHB		; Bit lesen
 4429 1B29  87          	ADD	A
 4430 1B2A  18 03       	JR	BCI4
 4431                   	;
 4432 1B2C  CD 1B96     BCI3:	CALL	BCBY		; eine Schwingung messen
 4433 1B2F  B8          BCI4:	CP	B
 4434 1B30  38 06       	JR	C,BCI5		; "1" einschieben
 4435 1B32  D6 17       	SUB	17H
 4436 1B34  CB 3F       	SRL	A
 4437 1B36  6F          	LD	L,A
 4438 1B37  37          	SCF			; "1"
 4439 1B38  CB 1B       BCI5:	RR	E		; Bit einschieben
 4440 1B3A  30 D5       	JR	NC,BCI2		; 8 Bit einlesen
 4441 1B3C  7B          	LD	A,E
 4442 1B3D  AC          	XOR	H		; Pruefsumme berechnen in H'
 4443 1B3E  67          	LD	H,A
 4444 1B3F  7B          	LD	A,E
 4445 1B40  EE 80       	XOR	80H		; Bit 7 invertieren
 4446 1B42  CD 0AC0     	CALL	U09DD		; Zeichen in unterste Zeile malen
 4447 1B45  CD 068A     	CALL	U0622		; Taste gedrueckt?
 4448 1B48  D9          	EXX
 4449 1B49  C9          	RET			; Z=0, wenn Taste gedrueckt wurde
 4450                   	;
 4451 1B4A  D9          BCI6:	EXX
 4452                   ;
 4453                   ; Dateiarbeit, ungenutzte Routinen
 4454                   ; NF=4..7
 4455                   ;
 4456 1B4B  37          U09AC:	SCF			; Fehler-Kennung
 4457 1B4C  C9          	RET
 4458                   ;
 4459                   ; Pruefbyte (H') ausgeben
 4460                   ;
 4461 1B4D  D9          BCPRO:	EXX
 4462 1B4E  7C          	LD	A,H		; Pruefbyte
 4463 1B4F  EE 80       	XOR	80H
 4464 1B51  D9          	EXX
 4465                   ;
 4466                   ; Datenbyte ausgeben im BASICODE-Format
 4467                   ;
 4468 1B52  D9          BCOUT:	EXX
 4469 1B53  CD 0AC0     	CALL	U09DD		; Zeichen malen
 4470 1B56  EE 80       	XOR	80H		; Bit 7 negieren
 4471 1B58  4F          	LD	C,A		; Zeichen
 4472 1B59  06 09       	LD	B,9		; insgesamt 9 Bit mit Startbit
 4473 1B5B  AC          	XOR	H		; Pruefsumme nebenbei mit berechnen
 4474 1B5C  67          	LD	H,A
 4475 1B5D  CB 21       	SLA	C		; Startbit "0" einschieben
 4476 1B5F  3A 01F0     BCO1:	LD	A,(U01F0)	; (IX+0)
 4477 1B62  3C          	INC	A
 4478 1B63  3D          	DEC	A		; CY bleibt unveraendert
 4479 1B64  20 F9       	JR	NZ,BCO1		; warten, bis 0 eingetragen ist
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  73
BAC85   Z80

 4480 1B66  3E 85       	LD	A,85H
 4481 1B68  D3 8D       	OUT	(CTC1),A	; neue ZK ankuendigen
 4482 1B6A  CB 19       	RR	C
 4483 1B6C  30 08       	JR	NC,BCO2	; Bit 0 oder 1?
 4484 1B6E  3E 17       	LD	A,17H		; ZK fuer 2400Hz
 4485 1B70  D3 8D       	OUT	(CTC1),A
 4486 1B72  3E 04       	LD	A,4		; 2 Schwingungen
 4487 1B74  18 06       	JR	BCO3
 4488                   	;
 4489 1B76  3E 2E       BCO2:	LD	A,2EH		; ZK fuer 1200Hz
 4490 1B78  D3 8D       	OUT	(CTC1),A
 4491 1B7A  3E 02       	LD	A,2		; 1 Schwingung
 4492 1B7C  32 01F0     BCO3:	LD	(U01F0),A	; (IX+0)
 4493 1B7F  10 DE       	DJNZ	BCO1
 4494 1B81  3A 01F0     BCO4:	LD	A,(U01F0)	; (IX+0)
 4495 1B84  B7          	OR	A
 4496 1B85  20 FA       	JR	NZ,BCO4		; warten bis 0 eingetragen ist
 4497 1B87  3E 85       	LD	A,85H
 4498 1B89  D3 8D       	OUT	(CTC1),A	; neue ZK ankuendigen
 4499 1B8B  3E 17       	LD	A,17H		; ZK fuer 2400Hz
 4500 1B8D  D3 8D       	OUT	(CTC1),A
 4501 1B8F  3E 08       	LD	A,8		; 4 Schwingungen = 2 Stoppbits
 4502 1B91  32 01F0     	LD	(U01F0),A
 4503 1B94  D9          	EXX
 4504 1B95  C9          	RET
 4505                   ;
 4506                   ; eine Schwingung messen (Addieden von 2 Halbwellen)
 4507                   ;
 4508 1B96  D5          BCBY:	PUSH	DE
 4509 1B97  CD 1BA1     	CALL	BCHB		; erste Halbwelle
 4510 1B9A  5F          	LD	E,A
 4511 1B9B  CD 1BA1     	CALL	BCHB		; zweite Halbwelle
 4512 1B9E  83          	ADD	A,E		; addieren
 4513 1B9F  D1          	POP	DE
 4514 1BA0  C9          	RET
 4515                   ;
 4516                   ; Warten auf Flankenwechsel am PIO
 4517                   ;
 4518 1BA1  AF          BCHB:	XOR	A
 4519 1BA2  32 01F0     	LD	(U01F0),A	; (IX+0) auf 0 setzen
 4520 1BA5  DB 88       BCHW:	IN	A,(PIOAD)
 4521 1BA7  D3 88       	OUT	(PIOAD),A	; PIO freigeben
 4522 1BA9  3A 01F0     	LD	A,(U01F0)
 4523 1BAC  B7          	OR	A
 4524 1BAD  28 F6       	JR	Z,BCHW		; Warten, bis Zeit eingetragen ist
 4525 1BAF  C9          	RET
 4526                   ;
 4527                   ; Zeichen im ASCII-Speicher ablegen und auf Bildschirm malen
 4528                   ;	
 4529 1BB0  F5          U1A8A:	PUSH	AF		; Zeichen
 4530 1BB1  3A 003B     	LD	A,(FLAGS)
 4531 1BB4  CB 77       	BIT	6,A		; unerlaubter Befehl?
 4532 1BB6  28 11       	JR	Z,U1AA3
 4533 1BB8  E6 BF       	AND	0BFH		; Bit 6 ruecksetzen
 4534 1BBA  32 003B     	LD	(FLAGS),A
 4535 1BBD  0B          	DEC	BC
 4536 1BBE  0A          	LD	A,(BC)		; letztes Zeichen
 4537 1BBF  03          	INC	BC
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  74
BAC85   Z80

 4538 1BC0  FE 3A       	CP	':'		; war das ein Doppelpunkt?
 4539 1BC2  28 05       	JR	Z,U1AA3
 4540 1BC4  3E 20       	LD	A,' '		; danach immer ein Leerzeichen
 4541 1BC6  CD 1BCA     	CALL	U1AA4		; eintragen, dann reinlaufen
 4542 1BC9  F1          U1AA3:	POP	AF
 4543 1BCA  02          U1AA4:	LD	(BC),A		; Zeichen in ASCII-File schreiben
 4544 1BCB  03          	INC	BC		; Zeiger weiter ruecken
 4545         0001      IF KC3
 4546 1BCC  08          	EX	AF,AF'
 4547 1BCD  3C          	INC	A		; Zeichen zaehlen
 4548 1BCE  F5          	PUSH	AF		; A' retten (weil OS/pi bei IRMON/OF A' veraendert)
 4549 1BCF  08          	EX	AF,AF'
 4550 1BD0  CD 0AC0     	CALL	U09DD		; Zeichen malen
 4551 1BD3  08          	EX	AF,AF'
 4552 1BD4  F1          	POP	AF		; A' regenerieren
 4553 1BD5  08          	EX	AF,AF'
 4554 1BD6  C9          	RET
 4555                   ELSE
 4560                   ENDIF
 4561                   
 4562                   ;
 4563                   ; Test: ASCII-File und BASIC-Programm im Speicher?
 4564                   ;
 4565 1BD7  21 22D9     U1AB5:	LD	HL,Z1000	; Anfang BASIC-Programm
 4566                   ;	LD	D,A		; ???
 4567 1BDA  5E          	LD	E,(HL)
 4568 1BDB  23          	INC	HL
 4569 1BDC  7E          	LD	A,(HL)
 4570 1BDD  2B          	DEC	HL
 4571 1BDE  B3          	OR	E
 4572                   ;	LD	A,D		; ???
 4573 1BDF  3E 01       	LD	A,1		; A=1 (BASIC-Programm im Speicher)
 4574 1BE1  20 01       	JR	NZ,U1AC4
 4575 1BE3  3D          	DEC	A		; A=0 (kein BASIC-Programm im Speicher)
 4576 1BE4  4F          U1AC4:	LD	C,A
 4577 1BE5  3A 003B     	LD	A,(FLAGS)
 4578 1BE8  E6 02       	AND	2		; Bi1 1: ASCII-File im Speicher?
 4579 1BEA  28 0E       	JR	Z,U1ADA		; nein
 4580 1BEC  2A 0045     	LD	HL,(U0031)	; Beginn ASCII-File
 4581 1BEF  ED 5B 03D7  	LD	DE,(SVARPT)	; BASIC-Programmende+1
 4582 1BF3  CD C689     	CALL	CPREG		; Vergleiche Register DE mit HL
 4583 1BF6  38 02       	JR	C,U1ADA		; BASIC-Programm hat ASCII ueberschrieben!
 4584 1BF8  CB C9       	SET	1,C		; ASCII-File im Speicher
 4585 1BFA  79          U1ADA:	LD	A,C
 4586 1BFB  C9          	RET
 4587                   	
 4588 1BFC  21 1DFC     U1ADC:	LD	HL,U1C59	; Text 'kein ASCII-File im Speicher!'
 4589 1BFF  CD 1C08     	CALL	U1AE5		; anzeigen
 4590 1C02  C3 C08C     	JP	SECST		; RESTART BASIC-Interpreter
 4591                   ;
 4592                   ; Anzeige 'Speicher voll'
 4593                   ;
 4594 1C05  21 1D2B     U0ECA:	LD	HL,U1B88	; Text 'Speichergrenze erreicht!'
 4595                   ;	JP	U1AE5		; anzeigen
 4596                   ;
 4597                   ; Zeichenkette anzeigen, welche in (HL) uebergeben wird
 4598                   ; Das erste Byte gibt dabei die Anzahl der folgenden Zeichen an
 4599                   ;
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  75
BAC85   Z80

 4600 1C08  E5          U1AE5:	PUSH	HL
 4601 1C09  2A 0358     	LD	HL,(CULINO)	; aktuelle Zeilennummer
 4602 1C0C  23          	INC	HL
 4603 1C0D  7C          	LD	A,H
 4604 1C0E  B5          	OR	L		; Zeilennummer=0?
 4605 1C0F  E1          	POP	HL
 4606 1C10  20 0B       	JR	NZ,U1AFA	; wir befinden und im Programm
 4607                   ; im Direktmode normal anzeigen
 4608 1C12  46          	LD	B,(HL)		; Anzahl
 4609 1C13  23          U1AF0:	INC	HL
 4610 1C14  7E          	LD	A,(HL)		; Zeichen
 4611 1C15  CD DDD5     	CALL	CO		; anzeigen
 4612 1C18  10 F9       	DJNZ	U1AF0
 4613 1C1A  C3 CB61     	JP	CRWDY2		; Anzeige CR, LF, Dummyzeichen
 4614                   ; im Programmmode auf untere Zeile malen
 4615 1C1D  CD 0AA2     U1AFA:	CALL	U09AE		; IRM-Adresse auf links/unten einstellen
 4616 1C20  46          	LD	B,(HL)		; Anzahl
 4617 1C21  48          	LD	C,B
 4618 1C22  23          U1AFF:	INC	HL
 4619 1C23  7E          	LD	A,(HL)		; Zeichen
 4620 1C24  CD 0AC0     	CALL	U09DD		; in unterste Zeile malen
 4621 1C27  10 F9       	DJNZ	U1AFF
 4622 1C29  3E 28       	LD	A,28H
 4623 1C2B  91          	SUB	C
 4624 1C2C  47          	LD	B,A
 4625 1C2D  3E 20       	LD	A,20H
 4626 1C2F  CD 0AC0     U1B0C:	CALL	U09DD		; Zeichen malen
 4627 1C32  10 FB       	DJNZ	U1B0C
 4628 1C34  C9          	RET
 4629                   ;
 4630                   ; ISR PIO-A (Kassetteneingabe)
 4631                   ;
 4632 1C35  F5          ISRPA:	PUSH	AF
 4633 1C36  DB 8E       	IN	A,(CTC2)	; aktueller Zaehlerstand
 4634 1C38  ED 44       	NEG
 4635 1C3A  32 01F0     	LD	(U01F0),A	; Ablage der Zeit auf (IX+0)
 4636 1C3D  3E 07       	LD	A,7
 4637 1C3F  D3 8E       	OUT	(CTC2),A	; CTC ruecksetzen, neue ZK
 4638 1C41  3E FC       	LD	A,0FCH
 4639 1C43  D3 8E       	OUT	(CTC2),A	; ZK laden
 4640 1C45  DB 88       	IN	A,(PIOAD)
 4641 1C47  EE 20       	XOR	20H		; LED ein/aus
 4642 1C49  D3 88       	OUT	(PIOAD),A
 4643 1C4B  F1          IRET:	POP	AF
 4644 1C4C  FB          	EI
 4645 1C4D  ED 4D       	RETI
 4646                   ;
 4647                   ; ISR CTC Kanal 1 (Kassettenausgabe)
 4648                   ; (IX+0) decrementieren
 4649                   ;
 4650 1C4F  F5          ISRC1:	PUSH	AF
 4651 1C50  3A 01F0     	LD	A,(U01F0)	; schneller als DEC (IX+0)
 4652 1C53  3D          	DEC	A		; 18 statt 23 Takte
 4653 1C54  32 01F0     	LD	(U01F0),A	; (IX+0)
 4654 1C57  18 F2       	JR	IRET		; POP AF, EI, RETI
 4655                   ;
 4656                   ; ISR CTC Kanal 2 (Ton)-Dauer und Kassetteneingabe
 4657                   ;
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  76
BAC85   Z80

 4658 1C59  F5          ISRC2:	PUSH	AF
 4659 1C5A  E5          	PUSH	HL
 4660 1C5B  2A 005A     	LD	HL,(U004A)	; Zaehler
 4661 1C5E  2B          	DEC	HL		; decrementieren
 4662 1C5F  22 005A     	LD	(U004A),HL	; und zurueckschreiben
 4663 1C62  7C          	LD	A,H
 4664 1C63  B5          	OR	L		; Zaehler=0?
 4665 1C64  20 0A       	JR	NZ,ISRCO	; nein
 4666 1C66  3E 03       	LD	A,3
 4667 1C68  D3 8D       	OUT	(CTC1),A	; CTC1 stoppen
 4668 1C6A  3E 47       	LD	A,47H
 4669 1C6C  D3 8E       	OUT	(CTC2),A	; CTC2 neu starten
 4670 1C6E  D3 8E       	OUT	(CTC2),A	; mit dieser Zeitkonstante
 4671 1C70  E1          ISRCO:	POP	HL
 4672 1C71  18 D8       	JR	IRET		; POP AF, EI, RETI
 4673                   ;
 4674                   ; 02.01.2024: Kopie einer Tastaturtabelle direkt hier im Programm
 4675                   ; diese KTAB deaktiviert STOP- und BRK-Taste
 4676                   ;
 4677 1C73  57 77       KTAB2:	DB	'Ww'		;		00 01
 4678 1C75  41 61       	DB	'Aa'		;		02 03
 4679 1C77  32 22       	DB	'2"'		;		04 05
 4680 1C79  08 19       	DB	8,19H		; CUL		06 07
 4681 1C7B  10 0C       	DB	10H,0CH		; HOME		08 09
 4682 1C7D  2D 3D       	DB	'-='		;		0A 0B
 4683 1C7F  F2 F8       	DB	0F2H,0F8H	; F2		0C 0D
 4684 1C81  59 79       	DB	'Yy'		;		0E 0F	
 4685 1C83  45 65       	DB	'Ee'		;		10 11
 4686 1C85  53 73       	DB	'Ss'		;		12 13
 4687 1C87  33 23       	DB	'3#'		;		14 15
 4688 1C89  5E 5D       	DB	'^]'		;		16 17
 4689 1C8B  01 0F       	DB	1,0FH		; CLR		18 19
 4690 1C8D  3A 2A       	DB	':*'		;		1A 1B
 4691 1C8F  F3 F9       	DB	0F3H,0F9H	; F3		1C 1D
 4692 1C91  58 78       	DB	'Xx'		;		1E 1F
 4693 1C93  54 74       	DB	'Tt'		;		20 21
 4694 1C95  46 66       	DB	'Ff'		;		22 23
 4695 1C97  35 25       	DB	'5%'		;		24 25
 4696 1C99  50 70       	DB	'Pp'		;		26 27
 4697 1C9B  1F 02       	DB	1FH,2		; DEL		28 29
 4698 1C9D  30 40       	DB	'0',40H		;		2A 2B
 4699 1C9F  F5 FB       	DB	0F5H,0FBH	; F5		2C 2D
 4700 1CA1  56 76       	DB	'Vv'		;		2E 2F
 4701 1CA3  55 75       	DB	'Uu'		;		30 31
 4702 1CA5  48 68       	DB	'Hh'		;		32 33
 4703 1CA7  37 27       	DB	'7',27H		; 7 / Apostroph	34 35
 4704 1CA9  4F 6F       	DB	'Oo'		;		36 37
 4705 1CAB  1A 14       	DB	1AH,14H		; INS		38 39
 4706 1CAD  39 29       	DB	'9)'		;		3A 3B
 4707 1CAF  00 00       	DB	0,0		; BRK		3C 3D
 4708 1CB1  4E 6E       	DB	'Nn'		;		3E 3F
 4709 1CB3  49 69       	DB	'Ii'		;		40 41
 4710 1CB5  4A 6A       	DB	'Jj'		;		42 43
 4711 1CB7  38 28       	DB	'8('		;		44 45
 4712 1CB9  20 5B       	DB	' ['		; SPC		46 47
 4713 1CBB  4B 6B       	DB	'Kk'		;		48 49
 4714 1CBD  2C 3C       	DB	',<'		;		4A 4B
 4715         0001      IF KC3
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  77
BAC85   Z80

 4716 1CBF  00 00       	DB	0,0		; STOP		4C 4D
 4717                   ELSE
 4719                   ENDIF
 4720 1CC1  4D 6D       	DB	'Mm'		;		4E 4F
 4721 1CC3  5A 7A       	DB	'Zz'		;		50 51
 4722 1CC5  47 67       	DB	'Gg'		;		52 53
 4723 1CC7  36 26       	DB	'6&'		;		54 55
 4724 1CC9  1C 1D       	DB	1CH,1DH		; LIST/RUN	56 57
 4725 1CCB  4C 6C       	DB	'Ll'		;		58 59
 4726 1CCD  2E 3E       	DB	'.>'		;		5A 5B
 4727 1CCF  F6 FC       	DB	0F6H,0FCH	; F6		5C 5D
 4728 1CD1  42 62       	DB	'Bb'		;		5E 5F
 4729 1CD3  52 72       	DB	'Rr'		;		60 61
 4730 1CD5  44 64       	DB	'Dd'		;		62 63
 4731 1CD7  34 24       	DB	'4$'		;		64 65
 4732 1CD9  5F 5C       	DB	'_\'		;		66 67
 4733 1CDB  2B 3B       	DB	'+;'		;		68 69
 4734 1CDD  2F 3F       	DB	'/?'		;		6A 6B
 4735 1CDF  F4 FA       	DB	0F4H,0FAH	; F4		6C 6D
 4736 1CE1  43 63       	DB	'Cc'		;		6E 6F
 4737 1CE3  51 71       	DB	'Qq'		;		70 71
 4738 1CE5  16 05       	DB	16H,5		; CAPS		72 73
 4739 1CE7  31 21       	DB	'1!'		;		74 75
 4740 1CE9  0A 12       	DB	LF,12H		; CUD		76 77
 4741 1CEB  0B 11       	DB	0BH,11H		; CUU		78 79
 4742 1CED  09 18       	DB	9,18H		; CUR		7A 7B
 4743 1CEF  F1 F7       	DB	0F1H,0F7H	; F1		7C 7D
 4744 1CF1  0D 0E       	DB	CR,0EH		; ENTER		7E 7F
 4745                   ;
 4746                   ; Zeichenketten, jeweils erst die Anzahl der Bytes, dann der Text
 4747                   ;
 4748 1CF3  12 42 69 74 U1B50:	DB	18,'Bitte Band starten'
 4749 1D06  12 42 69 74 U1B63:	DB	18,'Bitte Band stoppen'
 4750 1D19  11 49 63 68 U1B76:	DB	17,'Ich lese BASICODE'
 4751 1D2B  18 53 70 65 U1B88:	DB	24,'Speichergrenze erreicht!'
 4752 1D44  13 4C 65 73 U1BA1:	DB	19,'Lesefehler erkannt!'
 4753 1D58  24 4C 65 73 U1BB5:	DB	36,'Lesefehler in Block '
 4754 1D6D  20 20 21 20 U1BCA:	DB	'  ! zurueck? J/N'
 4755 1D7D  23 66 61 6C U1BDA:	DB	35,'falsche Blocknummer '
 4756 1D92  20 20 3B 20 U1BEF:	DB	'  ; erwarte '
 4757 1D9E  20 20 21    U1BFB:	DB	'  !'
 4758 1DA1  17 6B 65 69 U1BFE:	DB	23,'kein BASICODE-Programm!'
 4759 1DB9  16 6B 65 69 U1C16:	DB	22,'kein BASICODE-Bestand!'		; keine BASICODE-Datei
 4760 1DD0  1C 75 6E 65 U1C2D:	DB	28,'unerlaubter BASICODE-Befehl!'
 4761 1DED  0E 52 65 67 U1C4A:	DB	14,'Regelverstoss!'
 4762 1DFC  1C 6B 65 69 U1C59:	DB	28,'kein ASCII-File im Speicher!'
 4763 1E19  19 50 72 6F U1C76:	DB	25,'Programm wurde geloescht!'
 4764 1E33  1A 6B 65 69 U1C90:	DB	26,'kein Programm im Speicher!'
 4765 1E4E  16 42 65 73 U1CAB:	DB	22,'Bestaende geschlossen!'		; Dateien geschlossen
 4766 1E65  28 45 69 6E U1CC2:	DB	40,'Ein sehr schwaches Kassetteninterface...'
 4767 1E8E  4E 61 6D 65 	DB	'Name: ',0
 4768 1E95  5A 65 69 6C U1CF2:	DB	'Zeile ',0
 4769 1E9C  20 69 73 74 U1CF9:	DB	' ist zu lang'
 4770 1EA8  0D 0A 00    U1D05:	DB	CR,LF,0
 4771 1EAB  08 20 08    U1D08:	DB	8,' ',8
 4772 1EAE  4C 4F 47 80 U1D0B:	DB	'LOG',80H
 4773 1EB2  20 42 79 74 U1D0F:	DB	' Bytes',CR,LF,0
 4774 1EBB  0D 0A 50 72 U1D18:	DB	CR,LF,'Programm:',0
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  78
BAC85   Z80

 4775 1EC7  41 53 43 2D U1D24:	DB	'ASC-File:',0
 4776 1ED1  46 72 65 69 U1D2E:	DB	'Frei    :',0
 4777 1EDB  0D 0A 20 2A U1D38:	DB	CR,LF,' *  - BASICODE-Menu'
 4778 1EF0  0D 0A 20 2A 	DB	CR,LF,' *L - Laden, Uebersetzen und Starten'
 4779 1F16  0D 0A 20 2A 	DB	CR,LF,' *A - Einlesen ASCII-File'
 4780 1F31  0D 0A 20 2A 	DB	CR,LF,' *W - Retten ASCII-File'
 4781 1F4A  0D 0A 20 2A 	DB	CR,LF,' *T - Uebersetzen ASCII-File ==> BASIC'
 4782 1F72  0D 0A 20 2A 	DB	CR,LF,' *C - Uebersetzen BASIC ==> ASCII-File'
 4783 1F9A  0D 0A 20 2A 	DB	CR,LF,' *K - Listen ASCII-File'
 4784 1FB3  0D 0A 00    	DB	CR,LF,0
 4785                   ;
 4786                   ; erlaubte Token im BASICODE-Programm
 4787                   ;
 4788 1FB6  B8          U1E13:	DB	0B8H	; ABS
 4789 1FB7  B1          	DB	0B1H	; AND
 4790 1FB8  CB          	DB	0CBH	; ASC
 4791 1FB9  C4          	DB	0C4H	; ATN
 4792 1FBA  CC          	DB	0CCH	; CHR$
 4793 1FBB  C1          	DB	0C1H	; COS
 4794 1FBC  83          	DB	83H	; DATA
 4795 1FBD  94          	DB	94H	; DEF
 4796 1FBE  85          	DB	85H	; DIM
 4797 1FBF  C0          	DB	0C0H	; EXP
 4798 1FC0  A7          	DB	0A7H	; FN
 4799 1FC1  81          	DB	81H	; FOR
 4800 1FC2  8A          	DB	8AH	; IF
 4801 1FC3  84          	DB	84H	; INPUT
 4802 1FC4  B7          	DB	0B7H	; INT
 4803 1FC5  CD          	DB	0CDH	; LEFT$
 4804 1FC6  C8          	DB	0C8H	; LEN
 4805 1FC7  87          	DB	87H	; LET
 4806 1FC8  BF          	DB	0BFH	; LN
 4807 1FC9  CF          	DB	0CFH	; MID$
 4808 1FCA  AA          	DB	0AAH	; NOT
 4809 1FCB  91          	DB	91H	; ON
 4810 1FCC  B2          	DB	0B2H	; OR
 4811 1FCD  9E          	DB	9EH	; PRINT
 4812 1FCE  86          	DB	86H	; READ
 4813 1FCF  8D          	DB	8DH	; RETURN
 4814 1FD0  CE          	DB	0CEH	; RIGHT$
 4815 1FD1  B6          	DB	0B6H	; SGN
 4816 1FD2  C2          	DB	0C2H	; SIN
 4817 1FD3  BD          	DB	0BDH	; SQR
 4818 1FD4  A5          	DB	0A5H	; TAB(
 4819 1FD5  C3          	DB	0C3H	; TAN
 4820 1FD6  CA          	DB	0CAH	; VAL
 4821 1FD7  AC          	DB	0ACH	; +
 4822 1FD8  AD          	DB	0ADH	; -
 4823 1FD9  AE          	DB	0AEH	; *
 4824 1FDA  AF          	DB	0AFH	; /
 4825 1FDB  B0          	DB	0B0H	; ^
 4826 1FDC  B3          	DB	0B3H	; >
 4827 1FDD  B4          	DB	0B4H	; =
 4828 1FDE  B5          	DB	0B5H	; <
 4829 1FDF  8C          U1E3C:	DB	8CH	; GOSUB
 4830 1FE0  88          	DB	88H	; GOTO
 4831 1FE1  AB          	DB	0ABH	; STEP
 4832 1FE2  A9          	DB	0A9H	; THEN
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  79
BAC85   Z80

 4833 1FE3  A6          	DB	0A6H	; TO
 4834                   ;
 4835                   ; vordefinierte Variablen fuer Laufzeit
 4836                   ;
 4837 1FE4  484F        U1E41:	DW	'HO'
 4838 1FE6  0000        	DW	0
 4839 1FE8  861C        	DW	861CH	; 39
 4840                   
 4841 1FEA  5645        	DW	'VE'
 4842 1FEC  0000        	DW	0
 4843 1FEE  8578        	DW	8578H	; 31
 4844                   
 4845 1FF0  494E        	DW	'IN'
 4846 1FF2  0000        	DW	0
 4847 1FF4  0000        	DW	0	; 0
 4848                   
 4849 1FF6  49CE        	DW	'IN'+80H	; IN$
 4850 1FF8  0000        	DW	0
 4851 1FFA  8420        	DW	8420H	; 10
 4852                   
 4853 1FFC  53D2        	DW	'SR'+80H	; SR$
 4854 1FFE  0000        	DW	0
 4855 2000  8100        	DW	8100H	; 1
 4856                   
 4857 2002  434E        	DW	'CN'
 4858 2004  0000        	DW	0
 4859 2006  0000        	DW	0	; 0
 4860                   
 4861 2008  4847        	DW	'HG'
 4862 200A  0000        	DW	0
 4863 200C  8920        	DW	8920H	; 320
 4864                   
 4865 200E  5647        	DW	'VG'
 4866 2010  0000        	DW	0
 4867 2012  8870        	DW	8870H	; 240
 4868                   ;
 4869                   ; Sprungverteiler zum Oeffnen einer Datei
 4870                   ;
 4871 2014  1851        U1E71:	DW	U172D	; NF=0	BASICODE lesen
 4872 2016  18F4        	DW	U17B9	; NF=1	BASICODE schreiben
 4873 2018  09E1        	DW	U0829	; NF=2	KC-Format lesen (TAPE)
 4874 201A  0A59        	DW	U0915	; NF=3	KC-Format schreiben (TAPE)
 4875         0000      if DEV
 4880                   ELSE
 4881 201C  1B4B        	DW	U09AC	; SCF, RET (kein weiterer Treiber)
 4882 201E  1B4B        	DW	U09AC	; SCF, RET (kein weiterer Treiber)
 4883 2020  1B4B        	DW	U09AC	; SCF, RET (kein weiterer Treiber)
 4884 2022  1B4B        	DW	U09AC	; SCF, RET (kein weiterer Treiber)
 4885                   ENDIF
 4886                   ;
 4887                   ; Sprungverteiler zum Schliessen einer Datei
 4888                   ;
 4889 2024  18A4        U1E81:	DW	U1769	; NF=0	BASICODE lesen
 4890 2026  188D        	DW	U17D7	; NF=1	BASICODE schreiben
 4891 2028  09FB        	DW	U0864	; NF=2	KC-Format lesen (TAPE)
 4892 202A  0A9C        	DW	U099A	; NF=3	KC-Format schreiben (TAPE)
 4893         0000      IF DEV
 4898                   ELSE
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  80
BAC85   Z80

 4899 202C  1B4B        	DW	U09AC	; SCF, RET (Lesen von Diskette)
 4900 202E  1B4B        	DW	U09AC	; SCF, RET (Schreiben auf Diskette)
 4901 2030  1B4B        	DW	U09AC	; SCF, RET (Lesen USB)
 4902 2032  1B4B        	DW	U09AC	; SCF, RET (Schreiben USB)
 4903                   ENDIF
 4904                   ;
 4905                   ; Sprungverteiler zum Datei Lesen/Schreiben (1 Byte)
 4906                   ;
 4907 2034  185D        U1E91:	DW	U1739	; NF=0	BASICODE lesen
 4908 2036  18FF        	DW	U17C4	; NF=1	BASICODE schreiben
 4909 2038  09FE        	DW	U0869	; NF=2	KC-Format lesen (TAPE)
 4910 203A  0A63        	DW	U0946	; NF=3	KC-Format schreiben (TAPE)
 4911         0000      IF DEV
 4916                   ELSE
 4917 203C  1B4B        	DW	U09AC	; SCF, RET (Lesen von Diskette)
 4918 203E  1B4B        	DW	U09AC	; SCF, RET (Schreiben auf Diskette)
 4919 2040  1B4B        	DW	U09AC	; SCF, RET (Lesen USB)
 4920 2042  1B4B        	DW	U09AC	; SCF, RET (Schreiben USB)
 4921                   ENDIF
 4922                   ;
 4923                   ; Sonderbefehle mit *
 4924                   ;
 4925 2044  4C 41 57 54 U1EA1:	DB	'LAWTCK'	; 6 Kennbuchstaben
 4926 204A  122F        U1EA7:	DW	STAR_K		; *K
 4927 204C  1061        	DW	STAR_C		; *C
 4928 204E  1028        	DW	STAR_T		; *T
 4929 2050  0FF8        	DW	STAR_W		; *W
 4930 2052  0F92        	DW	STAR_A		; *A
 4931 2054  0F4A        	DW	STAR_L		; *L
 4932 2056  0EF6        	DW	STAR		; * Menu
 4933 2058  0F7D        	DW	CSAVE
 4934                   ;
 4935                   ; 4 Befehle, welche abgefangen werden
 4936                   ;
 4937 205A  43 4F 4E 54 U1EB7:	DB	'CONT',0
 4938 205F  47 4F 00    	DB	'GO',0
 4939 2062  52 55 4E 00 	DB	'RUN',0
 4940 2066  43 53 41 56 	DB	'CSAVE',0
 4941                   
 4942 206C  00          	NOP
 4943                   ;
 4944                   ; Farbe entsprechend Variable CC(0) und CC(1) einstellen
 4945                   ;
 4946 206D  2A 03DB     U1ECA:	LD	HL,(FSLPTR)	; erste freie Adresse hinter den Variablen
 4947 2070  ED 5B 03D9  	LD	DE,(DVARPT)	; Liste der Feldvariablen
 4948 2074  ED 52       	SBC	HL,DE		; Groesse des Variablenbereiches
 4949 2076  44          	LD	B,H
 4950 2077  4D          	LD	C,L
 4951 2078  03          	INC	BC		; Suchbereich
 4952 2079  EB          	EX	DE,HL
 4953 207A  3E 43       U1ED7:	LD	A,'C'
 4954 207C  ED B1       	CPIR			; 'C' im Variablenbereich suchen
 4955 207E  EA 2082     	JP	PE,U1EE0	; gefunden
 4956                   ; 16.11.2023: Farbe nicht veraendern, wenn CC nicht definiert ist
 4957                   ;	JR	U1F0B		; ausgesucht
 4958 2081  C9          	RET			; CC nicht definiert -> Farbe nicht aendern
 4959                   	;
 4960 2082  7E          U1EE0:	LD	A,(HL)		; folgendes Zeichen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  81
BAC85   Z80

 4961 2083  FE 43       	CP	'C'		; folgt noch ein 'C'?
 4962 2085  28 02       	JR	Z,U1EE7		; ja
 4963 2087  18 F1       	JR	U1ED7		; weitersuchen
 4964                   	;
 4965 2089              U1EE7:	; CC() gefunden
 4966 2089  23          	INC	HL
 4967 208A  23          	INC	HL
 4968 208B  23          	INC	HL
 4969 208C  23          	INC	HL
 4970 208D  23          	INC	HL
 4971 208E  23          	INC	HL
 4972 208F  CD D6DD     	CALL	OPKOP		; Wert in Arithmetikregister 1 laden
 4973 2092  CD C96F     	CALL	EPRVL3		; Ausdruck berechnen -> DE
 4974 2095  7B          	LD	A,E		; Vordergrundfarbe aus CC(0)
 4975 2096  CB 27       	SLA	A	; *2
 4976 2098  CB 27       	SLA	A	; *4
 4977 209A  CB 27       	SLA	A	; *8
 4978                   ; 19.11.2023:
 4979                   ; Grafikfarbe wird ausschliesslich ueber CAOS-Arbeitszelle FARB ermittelt,
 4980                   ; keine Modifikation des Programmcodes mehr erforderlich
 4981                   ;	LD	(U078C+1),A	; Routine zum Linie zeichnen
 4982                   ;	LD	(U0744+1),A	; Routene zum Punkt setzen
 4983 209C  F5          	PUSH	AF
 4984 209D  CD D6DD     	CALL	OPKOP		; Wert in Arithmetikregister 1 laden
 4985 20A0  CD C96F     	CALL	EPRVL3		; Ausdruck berechnen -> DE
 4986 20A3  F1          	POP	AF		; Vordergrundfarbe *8
 4987 20A4  CD F018     	CALL	IRMON
 4988 20A7  32 B7D6     	LD	(FARB),A	; Grafikfarbe eintragen
 4989 20AA  83          	ADD	E		; + Hintergrundfarbe aus CC(1)
 4990                   ;	JR	U1F0D		; Farbwert eintragen
 4991                   ; 16.11.2023: Ferbwert nicht aendern, wenn CC() nicht vorhanden ist
 4992                   ;U1F0B:	LD	A,DEFCOL	; Standardfarbe
 4993                   ;U1F0D:
 4994 20AB  32 B7A3     	LD	(COLOR),A	; neuen Farbwert fuer Textfarbe eintragen
 4995                   ; 17.11.2023: Farbe wird direkt aus COLOR gelesen
 4996                   ;	LD	(U1F25+1),A	; Programmcode modifizieren fuer Textanzeige im Grafikmode
 4997 20AE  C3 07D0     	JP	IOFRET		; IRM OFF, RET
 4998         0001      IF KC3
 4999                   ;
 5000                   ; Farbe in IRM schreiben beim KC85/3
 5001                   ; PE:	HL	Grafikposition
 5002                   ; PA:	HL	Adresse Pixel-IRM
 5003                   ;
 5004 20B1  CD F003     U20E0:	CALL	PV1		; HL=Adresse Pixel-IRM
 5005 20B4  34          	DB	PADR		; DE=Adresse Farb-IRM
 5006 20B5  D8          	RET	C		; ausserhalb
 5007 20B6  F5          	PUSH	AF
 5008 20B7  3A B7A3     	LD	A,(COLOR)
 5009 20BA  12          	LD	(DE),A
 5010 20BB  F1          	POP	AF
 5011 20BC  C9          	RET
 5012                   ELSE
 5029                   ENDIF
 5030                   ;
 5031                   ; Hier steht das BASIC-Programm, welches nur bei RUN sichtbar ist
 5032                   ; (bzw. mit GOSUB 100:LIST)
 5033                   ;
 5034 20BD  00          	DB	0
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  82
BAC85   Z80

 5035 20BE  0000        	DW	0
 5036                   
 5037 20C0              ZEILE2:	;	2! (C) Andreas und Uwe Zierott
 5038 20C0  20E2        	DW	ZEILE4
 5039 20C2  0002        	DW	2		; Zeilennummer
 5040 20C4  9C          	DB	9CH		; REM
 5041 20C5  20 28 43 29 	DB	' (C) Andreas und Uwe Zierott',0
 5042                   
 5043 20E2              ZEILE4:	;	4! Stand: 31.01.1990
 5044 20E2  20FA        	DW	ZEILE6
 5045 20E4  0004        	DW	4		; Zeilennummer
 5046 20E6  9C          	DB	9CH		; REM
 5047 20E7  20 53 74 61 	DB	' Stand: 31.01.1990',0
 5048                   
 5049 20FA              ZEILE6:	;	6! Farbe von Rudolf Wenzel
 5050 20FA  211F        	DW	ZEILE8
 5051 20FC  0006        	DW	6		; Zeilennummer
 5052 20FE  9C          	DB	9CH		; REM
 5053         0001      IF KC3
 5054 20FF  20 46 61 72 	DB	' Farbe von H. Arendt 20.07.1992',0
 5055                   ELSE
 5057                   ENDIF
 5058                   
 5059 211F              ZEILE8:	;	8! Stand: 08.12.1992
 5060 211F  2148        	DW	ZEIL10
 5061 2121  0008        	DW	8		; Zeilennummer
 5062 2123  9C          	DB	9CH		; REM
 5063         0001      IF KC3
 5064 2124  20 4B 43 38 	DB	' KC85/3'
 5065                   ELSE
 5067                   ENDIF
 5068 212B  2D 41 6E 70 	DB	'-Anpassung von ML 03.01.2024',0
 5069                   
 5070 2148              ZEIL10:	;	10 GOTO 1000
 5071 2148  2152        	DW	ZEIL20
 5072 214A  000A        	DW	10		; Zeilennummer
 5073 214C  88          	DB	88H		; GOTO
 5074 214D  31 30 30 30 	DB	'1000',0
 5075                   
 5076 2152              ZEIL20:	;	20 CC(0)=5:CC(1)=2:CALL*1FC4:GOTO 1010
 5077                   	;	CC(0)=7	Zeichenfarbe weiss Standard
 5078                   	;	CC(1)=0	Hintergrundfarbe schwarz Standard
 5079 2152  2173        	DW	ZEI100
 5080 2154  0014        	DW	20		; Zeilennummer
 5081 2156  43 43 28 30 	DB	'CC(0)'
 5082 215B  B4          	DB	0B4H		; =
 5083 215C  37 3A 43 43 	DB	'7:CC(1)'
 5084 2163  B4          	DB	0B4H		; =
 5085 2164  30 3A       	DB	'0:'
 5086 2166  9D AE       	DB	9DH,0AEH	; CALL*
 5087                   	ASCTXT	GO20
    5 2168  31          		DB	(GO20/1000H AND 0FH) + 30H
   12 2169  32          		DB	(GO20/100H AND 0FH) + 30H
   18 216A  36          		DB	(GO20/10H AND 0FH) + 30H
   24 216B  36          		DB	(GO20 AND 0FH) + 30H
 5088 216C  3A          	DB	':'
 5089 216D  88          	DB	88H		; GOTO
 5090 216E  31 30 31 30 	DB	'1010',0
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  83
BAC85   Z80

 5091                   
 5092 2173              ZEI100:	;	100 CALL*1FA1:RETURN
 5093 2173  217F        	DW	ZEI110
 5094 2175  0064        	DW	100		; Zeilennummer
 5095 2177  9D AE       	DB	9DH,0AEH	; CALL*
 5096                   	ASCTXT	GO100
   12 2179  35          		DB	(GO100/100H AND 0FH) + 30H
   16 217A  44          		DB	(GO100/10H AND 0FH) + 37H
   24 217B  39          		DB	(GO100 AND 0FH) + 30H
 5097 217C  3A          	DB	':'
 5098 217D  8D 00       	DB	8DH,0		; RETURN
 5099                   
 5100 217F              ZEI110:	;	110 CALL*1FDA:RETURN
 5101 217F  218C        	DW	ZEI120
 5102 2181  006E        	DW	110
 5103 2183  9D AE       	DB	9DH,0AEH	; CALL*
 5104                   	ASCTXT	GO110
    5 2185  31          		DB	(GO110/1000H AND 0FH) + 30H
   12 2186  32          		DB	(GO110/100H AND 0FH) + 30H
   16 2187  41          		DB	(GO110/10H AND 0FH) + 37H
   22 2188  44          		DB	(GO110 AND 0FH) + 37H
 5105 2189  3A          	DB	':'
 5106 218A  8D 00       	DB	8DH,0		; RETURN
 5107                   
 5108 218C              ZEI120:	;	120 CALL*11BC:RETURN
 5109 218C  2199        	DW	ZEI150
 5110 218E  0078        	DW	120		; Zeilennummer
 5111 2190  9D AE       	DB	9DH,0AEH	; CALL*
 5112                   	ASCTXT	GO120
    5 2192  31          		DB	(GO120/1000H AND 0FH) + 30H
   12 2193  32          		DB	(GO120/100H AND 0FH) + 30H
   16 2194  45          		DB	(GO120/10H AND 0FH) + 37H
   22 2195  44          		DB	(GO120 AND 0FH) + 37H
 5113 2196  3A          	DB	':'
 5114 2197  8D 00       	DB	8DH,0		; RETURN
 5115                   
 5116 2199              ZEI150:	;	150 CALL*1FD3:RETURN
 5117 2199  21A5        	DW	ZEI200
 5118 219B  0096        	DW	150		; Zeilennummer
 5119 219D  9D AE       	DB	9DH,0AEH	; CALL*
 5120                   	ASCTXT	GO150
   12 219F  36          		DB	(GO150/100H AND 0FH) + 30H
   18 21A0  30          		DB	(GO150/10H AND 0FH) + 30H
   24 21A1  33          		DB	(GO150 AND 0FH) + 30H
 5121 21A2  3A          	DB	':'
 5122 21A3  8D 00       	DB	8DH,0		; RETURN
 5123                   
 5124 21A5              ZEI200:	;	200 CALL*11DF:RETURN
 5125 21A5  21B2        	DW	ZEI210
 5126 21A7  00C8        	DW	200		; Zeilennummer
 5127 21A9  9D AE       	DB	9DH,0AEH	; CALL*
 5128                   	ASCTXT	GO200
    5 21AB  31          		DB	(GO200/1000H AND 0FH) + 30H
   12 21AC  33          		DB	(GO200/100H AND 0FH) + 30H
   18 21AD  30          		DB	(GO200/10H AND 0FH) + 30H
   22 21AE  41          		DB	(GO200 AND 0FH) + 37H
 5129 21AF  3A          	DB	':'
 5130 21B0  8D 00       	DB	8DH,0		; RETURN
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  84
BAC85   Z80

 5131                   
 5132 21B2              ZEI210:	;	210 CALL*11E4:RETURN
 5133 21B2  21BF        	DW	ZEI220
 5134 21B4  00D2        	DW	210		; Zeilennummer
 5135 21B6  9D AE       	DB	9DH,0AEH	; CALL*
 5136                   	ASCTXT	GO210
    5 21B8  31          		DB	(GO210/1000H AND 0FH) + 30H
   12 21B9  33          		DB	(GO210/100H AND 0FH) + 30H
   18 21BA  30          		DB	(GO210/10H AND 0FH) + 30H
   22 21BB  46          		DB	(GO210 AND 0FH) + 37H
 5137 21BC  3A          	DB	':'
 5138 21BD  8D 00       	DB	8DH,0		; RETURN
 5139                   
 5140 21BF              ZEI220:	;	220 CALL*124F:RETURN
 5141 21BF  21CC        	DW	ZEI250
 5142 21C1  00DC        	DW	220		; Zeilennummer
 5143 21C3  9D AE       	DB	9DH,0AEH	; CALL*
 5144                   	ASCTXT	GO220
    5 21C5  31          		DB	(GO220/1000H AND 0FH) + 30H
   12 21C6  33          		DB	(GO220/100H AND 0FH) + 30H
   18 21C7  37          		DB	(GO220/10H AND 0FH) + 30H
   22 21C8  41          		DB	(GO220 AND 0FH) + 37H
 5145 21C9  3A          	DB	':'
 5146 21CA  8D 00       	DB	8DH,0		; RETURN
 5147                   
 5148 21CC              ZEI250:	;	250 CALL*6F1:RETURN
 5149 21CC  21D8        	DW	ZEI260
 5150 21CE  00FA        	DW	250		; Zeilennummer
 5151 21D0  9D AE       	DB	9DH,0AEH	; CALL*
 5152                   	ASCTXT	GO250
   12 21D2  37          		DB	(GO250/100H AND 0FH) + 30H
   18 21D3  36          		DB	(GO250/10H AND 0FH) + 30H
   24 21D4  31          		DB	(GO250 AND 0FH) + 30H
 5153 21D5  3A          	DB	':'
 5154 21D6  8D 00       	DB	8DH,0		; RETURN
 5155                   
 5156 21D8              ZEI260:	;	260 CALL*1274:RETURN
 5157 21D8  21E5        	DW	ZEI270
 5158 21DA  0104        	DW	260		; Zeilennummer
 5159 21DC  9D AE       	DB	9DH,0AEH	; CALL*
 5160                   	ASCTXT	GO260
    5 21DE  31          		DB	(GO260/1000H AND 0FH) + 30H
   12 21DF  33          		DB	(GO260/100H AND 0FH) + 30H
   18 21E0  39          		DB	(GO260/10H AND 0FH) + 30H
   22 21E1  44          		DB	(GO260 AND 0FH) + 37H
 5161 21E2  3A          	DB	':'
 5162 21E3  8D 00       	DB	8DH,0		; RETURN
 5163                   
 5164 21E5              ZEI270:	;	270 CALL*128D:RETURN
 5165 21E5  21F2        	DW	ZEI280
 5166 21E7  010E        	DW	270		; Zeilennummer
 5167 21E9  9D AE       	DB	9DH,0AEH	; CALL*
 5168                   	ASCTXT	GO270
    5 21EB  31          		DB	(GO270/1000H AND 0FH) + 30H
   12 21EC  33          		DB	(GO270/100H AND 0FH) + 30H
   16 21ED  42          		DB	(GO270/10H AND 0FH) + 37H
   24 21EE  36          		DB	(GO270 AND 0FH) + 30H
 5169 21EF  3A          	DB	':'
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  85
BAC85   Z80

 5170 21F0  8D 00       	DB	8DH,0		; RETURN
 5171                   
 5172 21F2              ZEI280:	;	280 CALL*12BC:RETURN
 5173 21F2  21FE        	DW	ZEI300
 5174 21F4  0118        	DW	280		; Zeilennummer
 5175                   ; 11.11.2023 GUSOB 280 Funktion deaktiviert
 5176                   ; 02.01.2024 wieder aktiviert
 5177 21F6  9D AE       	DB	9DH,0AEH	; CALL*
 5178                   	ASCTXT	GO280
   12 21F8  36          		DB	(GO280/100H AND 0FH) + 30H
   16 21F9  41          		DB	(GO280/10H AND 0FH) + 37H
   22 21FA  41          		DB	(GO280 AND 0FH) + 37H
 5179 21FB  3A          	DB	':'
 5180 21FC  8D 00       	DB	8DH,0		; RETURN
 5181                   
 5182 21FE              ZEI300:	;	300 CALL*12CA:RETURN
 5183 21FE  220B        	DW	ZEI310
 5184 2200  012C        	DW	300		; Zeilennummer
 5185 2202  9D AE       	DB	9DH,0AEH	; CALL*
 5186                   	ASCTXT	GO300
    5 2204  31          		DB	(GO300/1000H AND 0FH) + 30H
   12 2205  33          		DB	(GO300/100H AND 0FH) + 30H
   16 2206  45          		DB	(GO300/10H AND 0FH) + 37H
   24 2207  35          		DB	(GO300 AND 0FH) + 30H
 5187 2208  3A          	DB	':'
 5188 2209  8D 00       	DB	8DH,0		; RETURN
 5189                   
 5190 220B              ZEI310:	;	310 CALL*1317:RETURN
 5191 220B  2218        	DW	ZEI330
 5192 220D  0136        	DW	310		; Zeilennummer
 5193 220F  9D AE       	DB	9DH,0AEH	; CALL*
 5194                   	ASCTXT	GO310
    5 2211  31          		DB	(GO310/1000H AND 0FH) + 30H
   12 2212  34          		DB	(GO310/100H AND 0FH) + 30H
   18 2213  33          		DB	(GO310/10H AND 0FH) + 30H
   24 2214  32          		DB	(GO310 AND 0FH) + 30H
 5195 2215  3A          	DB	':'
 5196 2216  8D 00       	DB	8DH,0		; RETURN
 5197                   
 5198 2218              ZEI330:	;	330 CALL*141E:RETURN
 5199 2218  2225        	DW	ZEI350
 5200 221A  014A        	DW	330		; Zeilennummer
 5201 221C  9D AE       	DB	9DH,0AEH	; CALL*
 5202                   	ASCTXT	GO330
    5 221E  31          		DB	(GO330/1000H AND 0FH) + 30H
   12 221F  35          		DB	(GO330/100H AND 0FH) + 30H
   18 2220  33          		DB	(GO330/10H AND 0FH) + 30H
   24 2221  39          		DB	(GO330 AND 0FH) + 30H
 5203 2222  3A          	DB	':'
 5204 2223  8D 00       	DB	8DH,0		; RETURN
 5205                   
 5206 2225              ZEI350:	;	350 CALL*144C:RETURN
 5207 2225  2232        	DW	ZEI360
 5208 2227  015E        	DW	350		; Zeilennummer
 5209 2229  9D AE       	DB	9DH,0AEH	; CALL*
 5210                   	ASCTXT	GO350
    5 222B  31          		DB	(GO350/1000H AND 0FH) + 30H
   12 222C  35          		DB	(GO350/100H AND 0FH) + 30H
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  86
BAC85   Z80

   18 222D  36          		DB	(GO350/10H AND 0FH) + 30H
   24 222E  37          		DB	(GO350 AND 0FH) + 30H
 5211 222F  3A          	DB	':'
 5212 2230  8D 00       	DB	8DH,0		; RETURN
 5213                   
 5214 2232              ZEI360:	;	360 CALL*145A:RETURN
 5215 2232  223F        	DW	ZEI400
 5216 2234  0168        	DW	360		; Zeilennummer
 5217 2236  9D AE       	DB	9DH,0AEH	; CALL*
 5218                   	ASCTXT	GO360
    5 2238  31          		DB	(GO360/1000H AND 0FH) + 30H
   12 2239  35          		DB	(GO360/100H AND 0FH) + 30H
   18 223A  37          		DB	(GO360/10H AND 0FH) + 30H
   24 223B  35          		DB	(GO360 AND 0FH) + 30H
 5219 223C  3A          	DB	':'
 5220 223D  8D 00       	DB	8DH,0		; RETURN
 5221                   
 5222 223F              ZEI400:	;	400 CALL*1461:RETURN
 5223 223F  224C        	DW	ZEI450
 5224 2241  0190        	DW	400		; Zeilennummer
 5225 2243  9D AE       	DB	9DH,0AEH	; CALL*
 5226                   	ASCTXT	GO400
    5 2245  31          		DB	(GO400/1000H AND 0FH) + 30H
   12 2246  35          		DB	(GO400/100H AND 0FH) + 30H
   18 2247  37          		DB	(GO400/10H AND 0FH) + 30H
   22 2248  43          		DB	(GO400 AND 0FH) + 37H
 5227 2249  3A          	DB	':'
 5228 224A  8D 00       	DB	8DH,0		; RETURN
 5229                   
 5230 224C              ZEI450:	;	450 CALL*1485:RETURN
 5231 224C  2259        	DW	ZEI500
 5232 224E  01C2        	DW	450		; Zeilennummer
 5233 2250  9D AE       	DB	9DH,0AEH	; CALL*
 5234                   	ASCTXT	GO450
    5 2252  31          		DB	(GO450/1000H AND 0FH) + 30H
   12 2253  35          		DB	(GO450/100H AND 0FH) + 30H
   16 2254  41          		DB	(GO450/10H AND 0FH) + 37H
   24 2255  30          		DB	(GO450 AND 0FH) + 30H
 5235 2256  3A          	DB	':'
 5236 2257  8D 00       	DB	8DH,0		; RETURN
 5237                   
 5238 2259              ZEI500:	;	500 CALL*14D4:RETURN
 5239 2259  2266        	DW	ZEI540
 5240 225B  01F4        	DW	500		; Zeilennummer
 5241 225D  9D AE       	DB	9DH,0AEH	; CALL*
 5242                   	ASCTXT	GO500
    5 225F  31          		DB	(GO500/1000H AND 0FH) + 30H
   12 2260  35          		DB	(GO500/100H AND 0FH) + 30H
   16 2261  45          		DB	(GO500/10H AND 0FH) + 37H
   22 2262  46          		DB	(GO500 AND 0FH) + 37H
 5243 2263  3A          	DB	':'
 5244 2264  8D 00       	DB	8DH,0		; RETURN
 5245                   
 5246 2266              ZEI540:	;	540 CALL*1533:RETURN
 5247 2266  2273        	DW	ZEI560
 5248 2268  021C        	DW	540		; Zeilennummer
 5249 226A  9D AE       	DB	9DH,0AEH	; CALL*
 5250                   	ASCTXT	GO540
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  87
BAC85   Z80

    5 226C  31          		DB	(GO540/1000H AND 0FH) + 30H
   12 226D  36          		DB	(GO540/100H AND 0FH) + 30H
   18 226E  36          		DB	(GO540/10H AND 0FH) + 30H
   22 226F  41          		DB	(GO540 AND 0FH) + 37H
 5251 2270  3A          	DB	':'
 5252 2271  8D 00       	DB	8DH,0		; RETURN
 5253                   
 5254 2273              ZEI560:	;	560 CALL*1550:RETURN
 5255 2273  2280        	DW	ZEI580
 5256 2275  0230        	DW	560		; Zeilennummer
 5257 2277  9D AE       	DB	9DH,0AEH	; CALL*
 5258                   	ASCTXT	GO560
    5 2279  31          		DB	(GO560/1000H AND 0FH) + 30H
   12 227A  36          		DB	(GO560/100H AND 0FH) + 30H
   18 227B  38          		DB	(GO560/10H AND 0FH) + 30H
   24 227C  37          		DB	(GO560 AND 0FH) + 30H
 5259 227D  3A          	DB	':'
 5260 227E  8D 00       	DB	8DH,0		; RETURN
 5261                   
 5262 2280              ZEI580:	;	580 CALL*155D:RETURN
 5263 2280  228D        	DW	ZEI600
 5264 2282  0244        	DW	580		; Zeilennummer
 5265 2284  9D AE       	DB	9DH,0AEH	; CALL*
 5266                   	ASCTXT	GO580
    5 2286  31          		DB	(GO580/1000H AND 0FH) + 30H
   12 2287  36          		DB	(GO580/100H AND 0FH) + 30H
   18 2288  39          		DB	(GO580/10H AND 0FH) + 30H
   24 2289  34          		DB	(GO580 AND 0FH) + 30H
 5267 228A  3A          	DB	':'
 5268 228B  8D 00       	DB	8DH,0		; RETURN
 5269                   
 5270 228D              ZEI600:	;	600 CALL*1FA8:RETURN
 5271 228D  229A        	DW	ZEI620
 5272 228F  0258        	DW	600		; Zeilennummer
 5273 2291  9D AE       	DB	9DH,0AEH	; CALL*
 5274                   	ASCTXT	GO600
    5 2293  31          		DB	(GO600/1000H AND 0FH) + 30H
   12 2294  36          		DB	(GO600/100H AND 0FH) + 30H
   16 2295  44          		DB	(GO600/10H AND 0FH) + 37H
   24 2296  32          		DB	(GO600 AND 0FH) + 30H
 5275 2297  3A          	DB	':'
 5276 2298  8D 00       	DB	8DH,0		; RETURN
 5277                   
 5278 229A              ZEI620:	;	620 CALL*1FAF:RETURN
 5279 229A  22A6        	DW	ZEI630
 5280 229C  026C        	DW	620		; Zeilennummer
 5281 229E  9D AE       	DB	9DH,0AEH	; CALL*
 5282                   	ASCTXT	GO620
   12 22A0  37          		DB	(GO620/100H AND 0FH) + 30H
   18 22A1  39          		DB	(GO620/10H AND 0FH) + 30H
   24 22A2  35          		DB	(GO620 AND 0FH) + 30H
 5283 22A3  3A          	DB	':'
 5284 22A4  8D 00       	DB	8DH,0		; RETURN
 5285                   
 5286 22A6              ZEI630:	;	630 CALL*1FB6:RETURN
 5287 22A6  22B2        	DW	ZEI650
 5288 22A8  0276        	DW	630		; Zeilennummer
 5289 22AA  9D AE       	DB	9DH,0AEH	; CALL*
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  88
BAC85   Z80

 5290                   	ASCTXT	GO630
   12 22AC  37          		DB	(GO630/100H AND 0FH) + 30H
   16 22AD  44          		DB	(GO630/10H AND 0FH) + 37H
   24 22AE  34          		DB	(GO630 AND 0FH) + 30H
 5291 22AF  3A          	DB	':'
 5292 22B0  8D 00       	DB	8DH,0		; RETURN
 5293                   
 5294 22B2              ZEI650:	;	650 CALL*1FBD:RETURN
 5295 22B2  22BE        	DW	ZEI950
 5296 22B4  028A        	DW	650		; Zeilennummer
 5297 22B6  9D AE       	DB	9DH,0AEH	; CALL*
 5298                   	ASCTXT	GO650
   12 22B8  39          		DB	(GO650/100H AND 0FH) + 30H
   18 22B9  33          		DB	(GO650/10H AND 0FH) + 30H
   24 22BA  38          		DB	(GO650 AND 0FH) + 30H
 5299 22BB  3A          	DB	':'
 5300 22BC  8D 00       	DB	8DH,0		; RETURN
 5301                   
 5302 22BE              ZEI950:	;	950 CC(0)=6:CC(1)=1:CALL*1FE1
 5303                   	;	CC(0)=6	Zeichenfarbe gelb
 5304                   	;	CC(1)=1	Hintergrundfarbe blau
 5305 22BE  22D9        	DW	Z1000
 5306 22C0  03B6        	DW	950		; Zeilennummer
 5307 22C2  43 43 28 30 	DB	'CC(0)'
 5308 22C7  B4          	DB	0B4H		; =
 5309 22C8  36 3A 43 43 	DB	'6:CC(1)'
 5310 22CF  B4          	DB	0B4H		; =
 5311 22D0  31 3A       	DB	'1:'
 5312 22D2  9D AE       	DB	9DH,0AEH	; CALL*
 5313                   	ASCTXT	GO950
    5 22D4  31          		DB	(GO950/1000H AND 0FH) + 30H
   12 22D5  36          		DB	(GO950/100H AND 0FH) + 30H
   16 22D6  46          		DB	(GO950/10H AND 0FH) + 37H
   24 22D7  33          		DB	(GO950 AND 0FH) + 30H
 5314 22D8  00          	DB	0
 5315                   
 5316 22D9  0000        Z1000:	DW	0		; Anfang BASIC-Programm
 5317 22DB              U21F3:				; Ende BASCICODE
 5318                   ;
 5319                   ; V.24-Druckertreiber (wird nach BA00H kopiert und dort ausgefuehrt)
 5320                   ;
 5321                   	.phase	0BA00H
 5322 BA00  CD BAFE     UBA00:	CALL	UBAFE
 5323 BA03  76          UBA03:	HALT
 5324 BA04  DD 7E 0D    	LD	A,(IX+13)	; Tastencode
 5325 BA07  B7          	OR	A		; eingetragen?
 5326 BA08  20 F9       	JR	NZ,UBA03	; nein, weiter warten
 5327 BA0A  AF          	XOR	A
 5328 BA0B  32 BD7C     	LD	(UBD78),A
 5329 BA0E  76          UBA0E:	HALT
 5330 BA0F  3A BD7C     	LD	A,(UBD78)
 5331 BA12  B7          	OR	A
 5332 BA13  28 08       	JR	Z,UBA1D
 5333 BA15  CD F003     	CALL	PV1
 5334 BA18  0E          	DB	KBDZ
 5335 BA19  30 F3       	JR	NC,UBA0E
 5336 BA1B  18 06       	JR	UBA23
 5337                   	;
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  89
BAC85   Z80

 5338 BA1D  DD 7E 0D    UBA1D:	LD	A,(IX+13)
 5339 BA20  B7          	OR	A
 5340 BA21  28 EB       	JR	Z,UBA0E
 5341 BA23  FE 08       UBA23:	CP	8
 5342 BA25  20 10       	JR	NZ,UBA37
 5343 BA27  2A BD78     	LD	HL,(UBD74)
 5344 BA2A  7C          	LD	A,H
 5345 BA2B  B5          	OR	L
 5346 BA2C  28 E0       	JR	Z,UBA0E
 5347 BA2E  2B          	DEC	HL
 5348 BA2F  22 BD78     	LD	(UBD74),HL
 5349 BA32  CD BB19     	CALL	UBB19
 5350 BA35  18 D7       	JR	UBA0E
 5351                   	;
 5352 BA37  FE 09       UBA37:	CP	9
 5353 BA39  20 14       	JR	NZ,UBA4F
 5354 BA3B  2A BD76     	LD	HL,(UBD72)
 5355 BA3E  11 013F     	LD	DE,013FH
 5356 BA41  CD BD5D     	CALL	UBD59
 5357 BA44  28 C8       	JR	Z,UBA0E
 5358 BA46  23          	INC	HL
 5359 BA47  22 BD76     	LD	(UBD72),HL
 5360 BA4A  CD BB1F     	CALL	UBB1F
 5361 BA4D  18 BF       	JR	UBA0E
 5362                   	;
 5363 BA4F  FE 0A       UBA4F:	CP	0AH
 5364 BA51  20 10       	JR	NZ,UBA63
 5365 BA53  3A BD7A     	LD	A,(UBD76)
 5366 BA56  FE FF       	CP	0FFH
 5367 BA58  28 B4       	JR	Z,UBA0E
 5368 BA5A  3C          	INC	A
 5369 BA5B  32 BD7A     	LD	(UBD76),A
 5370 BA5E  CD BB35     	CALL	UBB35
 5371 BA61  18 AB       	JR	UBA0E
 5372                   	;
 5373 BA63  FE 0B       UBA63:	CP	0BH
 5374 BA65  20 0F       	JR	NZ,UBA76
 5375 BA67  3A BD7B     	LD	A,(UBD77)
 5376 BA6A  B7          	OR	A
 5377 BA6B  28 A1       	JR	Z,UBA0E
 5378 BA6D  3D          	DEC	A
 5379 BA6E  32 BD7B     	LD	(UBD77),A
 5380 BA71  CD BB2F     	CALL	UBB2F
 5381 BA74  18 98       	JR	UBA0E
 5382                   	;
 5383 BA76  FE 19       UBA76:	CP	19H
 5384 BA78  20 16       	JR	NZ,UBA90
 5385 BA7A  2A BD76     	LD	HL,(UBD72)
 5386 BA7D  ED 5B BD78  	LD	DE,(UBD74)
 5387 BA81  CD BD5D     	CALL	UBD59
 5388 BA84  28 88       	JR	Z,UBA0E
 5389 BA86  CD BB1F     	CALL	UBB1F
 5390 BA89  2B          	DEC	HL
 5391 BA8A  22 BD76     	LD	(UBD72),HL
 5392 BA8D  C3 BA0E     	JP	UBA0E
 5393                   	;
 5394 BA90  FE 18       UBA90:	CP	18H
 5395 BA92  20 17       	JR	NZ,UBAAB
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  90
BAC85   Z80

 5396 BA94  2A BD78     	LD	HL,(UBD74)
 5397 BA97  ED 5B BD76  	LD	DE,(UBD72)
 5398 BA9B  CD BD5D     	CALL	UBD59
 5399 BA9E  CA BA0E     	JP	Z,UBA0E
 5400 BAA1  CD BB19     	CALL	UBB19
 5401 BAA4  23          	INC	HL
 5402 BAA5  22 BD78     	LD	(UBD74),HL
 5403 BAA8  C3 BA0E     	JP	UBA0E
 5404                   	;
 5405 BAAB  FE 12       UBAAB:	CP	12H
 5406 BAAD  20 15       	JR	NZ,UBAC4
 5407 BAAF  3A BD7A     	LD	A,(UBD76)
 5408 BAB2  47          	LD	B,A
 5409 BAB3  3A BD7B     	LD	A,(UBD77)
 5410 BAB6  B8          	CP	B
 5411 BAB7  CA BA0E     	JP	Z,UBA0E
 5412 BABA  CD BB2F     	CALL	UBB2F
 5413 BABD  3C          	INC	A
 5414 BABE  32 BD7B     	LD	(UBD77),A
 5415 BAC1  C3 BA0E     	JP	UBA0E
 5416                   	;
 5417 BAC4  FE 11       UBAC4:	CP	11H
 5418 BAC6  20 15       	JR	NZ,UBADD
 5419 BAC8  3A BD7B     	LD	A,(UBD77)
 5420 BACB  47          	LD	B,A
 5421 BACC  3A BD7A     	LD	A,(UBD76)
 5422 BACF  B8          	CP	B
 5423 BAD0  CA BA0E     	JP	Z,UBA0E
 5424 BAD3  CD BB35     	CALL	UBB35
 5425 BAD6  3D          	DEC	A
 5426 BAD7  32 BD7A     	LD	(UBD76),A
 5427 BADA  C3 BA0E     	JP	UBA0E
 5428                   	;
 5429 BADD  FE 16       UBADD:	CP	16H
 5430 BADF  20 11       	JR	NZ,UBAF2
 5431 BAE1  76          UBAE1:	HALT
 5432 BAE2  DD 7E 0D    	LD	A,(IX+13)
 5433 BAE5  B7          	OR	A
 5434 BAE6  20 F9       	JR	NZ,UBAE1
 5435 BAE8  3A BD7C     	LD	A,(UBD78)
 5436 BAEB  2F          	CPL
 5437 BAEC  32 BD7C     	LD	(UBD78),A
 5438 BAEF  C3 BA0E     	JP	UBA0E
 5439                   	;
 5440 BAF2  FE 0D       UBAF2:	CP	0DH
 5441 BAF4  28 08       	JR	Z,UBAFE
 5442 BAF6  FE 10       	CP	10H
 5443 BAF8  CC BAFE     	CALL	Z,UBAFE
 5444 BAFB  C3 BA0E     	JP	UBA0E
 5445                   ;
 5446 BAFE  3A BD7B     UBAFE:	LD	A,(UBD77)
 5447 BB01  47          	LD	B,A
 5448 BB02  3A BD7A     	LD	A,(UBD76)
 5449 BB05  2A BD78     	LD	HL,(UBD74)
 5450 BB08  ED 5B BD76  	LD	DE,(UBD72)
 5451 BB0C  B8          UBB0C:	CP	B
 5452 BB0D  28 06       	JR	Z,UBB15
 5453 BB0F  CD BB6F     	CALL	UBB6F
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  91
BAC85   Z80

 5454 BB12  3D          	DEC	A
 5455 BB13  18 F7       	JR	UBB0C
 5456                   	;
 5457 BB15  CD BB6F     UBB15:	CALL	UBB6F
 5458 BB18  C9          	RET
 5459                   ;
 5460 BB19  E5          UBB19:	PUSH	HL
 5461 BB1A  2A BD78     	LD	HL,(UBD74)
 5462 BB1D  18 04       	JR	UBB23
 5463                   	;
 5464 BB1F  E5          UBB1F:	PUSH	HL
 5465 BB20  2A BD76     	LD	HL,(UBD72)
 5466 BB23  3A BD7A     UBB23:	LD	A,(UBD76)
 5467 BB26  47          	LD	B,A
 5468 BB27  3A BD7B     	LD	A,(UBD77)
 5469 BB2A  CD BB45     	CALL	UBB45
 5470 BB2D  E1          	POP	HL
 5471 BB2E  C9          	RET
 5472                   
 5473 BB2F  F5          UBB2F:	PUSH	AF
 5474 BB30  3A BD7B     	LD	A,(UBD77)
 5475 BB33  18 04       	JR	UBB39
 5476                   	;
 5477 BB35  F5          UBB35:	PUSH	AF
 5478 BB36  3A BD7A     	LD	A,(UBD76)
 5479 BB39  2A BD78     UBB39:	LD	HL,(UBD74)
 5480 BB3C  ED 5B BD76  	LD	DE,(UBD72)
 5481 BB40  CD BB6F     	CALL	UBB6F
 5482 BB43  F1          	POP	AF
 5483 BB44  C9          	RET
 5484                   
 5485 BB45  D5          UBB45:	PUSH	DE
 5486 BB46  F5          	PUSH	AF
 5487 BB47  E5          	PUSH	HL
 5488 BB48  C5          	PUSH	BC
 5489 BB49  CD BBA2     	CALL	UBBA2
 5490 BB4C  08          	EX	AF,AF'
 5491 BB4D  AF          	XOR	A
 5492 BB4E  04          	INC	B
 5493 BB4F  37          	SCF
 5494 BB50  1F          UBB50:	RRA
 5495 BB51  10 FD       	DJNZ	UBB50
 5496 BB53  08          	EX	AF,AF'
 5497 BB54  C1          	POP	BC
 5498 BB55  E1          	POP	HL
 5499 BB56  E5          	PUSH	HL
 5500 BB57  CD BBB7     	CALL	UBBB7
 5501 BB5A  3D          	DEC	A
 5502 BB5B  3C          UBB5B:	INC	A
 5503 BB5C  E5          	PUSH	HL
 5504 BB5D  65          	LD	H,L
 5505 BB5E  CB FC       	SET	7,H
 5506 BB60  6F          	LD	L,A
 5507 BB61  08          	EX	AF,AF'
 5508 BB62  F5          	PUSH	AF
 5509 BB63  AE          	XOR	(HL)
 5510 BB64  77          	LD	(HL),A
 5511 BB65  F1          	POP	AF
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  92
BAC85   Z80

 5512 BB66  08          	EX	AF,AF'
 5513 BB67  E1          	POP	HL
 5514 BB68  B8          	CP	B
 5515 BB69  20 F0       	JR	NZ,UBB5B
 5516 BB6B  E1          	POP	HL
 5517 BB6C  F1          	POP	AF
 5518 BB6D  D1          	POP	DE
 5519 BB6E  C9          	RET
 5520                   ;
 5521 BB6F  D5          UBB6F:	PUSH	DE
 5522 BB70  E5          	PUSH	HL
 5523 BB71  C5          	PUSH	BC
 5524 BB72  F5          	PUSH	AF
 5525 BB73  EB          	EX	DE,HL
 5526 BB74  CD BBA2     	CALL	UBBA2
 5527 BB77  48          	LD	C,B
 5528 BB78  EB          	EX	DE,HL
 5529 BB79  CD BBA2     	CALL	UBBA2
 5530 BB7C  E5          	PUSH	HL
 5531 BB7D  B7          	OR	A
 5532 BB7E  ED 52       	SBC	HL,DE
 5533 BB80  E1          	POP	HL
 5534 BB81  28 15       	JR	Z,UBB98
 5535 BB83  C5          	PUSH	BC
 5536 BB84  0E 07       	LD	C,7
 5537 BB86  CD BBC0     	CALL	UBBC0
 5538 BB89  C1          	POP	BC
 5539 BB8A  06 00       	LD	B,0
 5540 BB8C  AE          	XOR	(HL)
 5541 BB8D  77          UBB8D:	LD	(HL),A
 5542 BB8E  24          	INC	H
 5543 BB8F  CD BBD7     	CALL	UBBD7
 5544 BB92  28 04       	JR	Z,UBB98
 5545 BB94  7E          	LD	A,(HL)
 5546 BB95  2F          	CPL
 5547 BB96  18 F5       	JR	UBB8D
 5548                   	;
 5549 BB98  CD BBC0     UBB98:	CALL	UBBC0
 5550 BB9B  AE          	XOR	(HL)
 5551 BB9C  77          	LD	(HL),A
 5552 BB9D  F1          	POP	AF
 5553 BB9E  C1          	POP	BC
 5554 BB9F  E1          	POP	HL
 5555 BBA0  D1          	POP	DE
 5556 BBA1  C9          	RET
 5557                   ;
 5558 BBA2  D5          UBBA2:	PUSH	DE
 5559 BBA3  54          	LD	D,H
 5560 BBA4  5D          	LD	E,L
 5561 BBA5  CD BBB7     	CALL	UBBB7
 5562 BBA8  E5          	PUSH	HL
 5563 BBA9  29          	ADD	HL,HL
 5564 BBAA  29          	ADD	HL,HL
 5565 BBAB  29          	ADD	HL,HL
 5566 BBAC  EB          	EX	DE,HL
 5567 BBAD  ED 52       	SBC	HL,DE
 5568 BBAF  45          	LD	B,L
 5569 BBB0  E1          	POP	HL
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  93
BAC85   Z80

 5570 BBB1  65          	LD	H,L
 5571 BBB2  CB FC       	SET	7,H
 5572 BBB4  6F          	LD	L,A
 5573 BBB5  D1          	POP	DE
 5574 BBB6  C9          	RET
 5575                   ;
 5576 BBB7  29          UBBB7:	ADD	HL,HL
 5577 BBB8  29          	ADD	HL,HL
 5578 BBB9  29          	ADD	HL,HL
 5579 BBBA  29          	ADD	HL,HL
 5580 BBBB  29          	ADD	HL,HL
 5581 BBBC  6C          	LD	L,H
 5582 BBBD  26 00       	LD	H,0
 5583 BBBF  C9          	RET
 5584                   ;
 5585 BBC0  C5          UBBC0:	PUSH	BC
 5586 BBC1  79          	LD	A,C
 5587 BBC2  90          	SUB	B
 5588 BBC3  3C          	INC	A
 5589 BBC4  48          	LD	C,B
 5590 BBC5  47          	LD	B,A
 5591 BBC6  79          	LD	A,C
 5592 BBC7  B7          	OR	A
 5593 BBC8  20 02       	JR	NZ,UBBCC
 5594 BBCA  0E 08       	LD	C,8
 5595 BBCC  AF          UBBCC:	XOR	A
 5596 BBCD  37          UBBCD:	SCF
 5597 BBCE  1F          	RRA
 5598 BBCF  10 FC       	DJNZ	UBBCD
 5599 BBD1  41          	LD	B,C
 5600 BBD2  0F          UBBD2:	RRCA
 5601 BBD3  10 FD       	DJNZ	UBBD2
 5602 BBD5  C1          	POP	BC
 5603 BBD6  C9          	RET
 5604                   ;
 5605 BBD7  E5          UBBD7:	PUSH	HL
 5606 BBD8  B7          	OR	A
 5607 BBD9  ED 52       	SBC	HL,DE
 5608 BBDB  E1          	POP	HL
 5609 BBDC  C9          	RET
 5610                   
 5611 BBDD  00          UBBDD:	DB	0		; hier stand schon 7F7FH drin ???
 5612 BBDE  7F          	DB	7FH		; wird nur zu 7F7FH, wenn V.24-Modul vorhanden
 5613 BBDF  56 32 34 49 	DB	'V24I'
 5614 BBE3  01          	DB	1
 5615 BBE4  21 B781     	LD	HL,ARGN
 5616 BBE7  11 BD73     	LD	DE,UBD6F
 5617 BBEA  46          	LD	B,(HL)		; Anzahl Argumente
 5618 BBEB  04          	INC	B
 5619 BBEC  18 04       	JR	UBBF2
 5620                   	;
 5621 BBEE  7E          UBBEE:	LD	A,(HL)
 5622 BBEF  12          	LD	(DE),A
 5623 BBF0  13          	INC	DE
 5624 BBF1  23          	INC	HL
 5625 BBF2  23          UBBF2:	INC	HL
 5626 BBF3  10 F9       	DJNZ	UBBEE
 5627                   ;
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  94
BAC85   Z80

 5628                   ; V.24-Treiber initialisieren
 5629 BBF5  AF          UBBF5:	XOR	A
 5630 BBF6  32 BD81     	LD	(UBD7D),A
 5631 BBF9  01 0780     	LD	BC,0780H	; ab Steckplatz 7
 5632 BBFC  ED 78       UBBFC:	IN	A,(C)		; Kennbyte lesen
 5633 BBFE  FE EE       	CP	0EEH		; M003?
 5634 BC00  28 09       	JR	Z,UBC0A		; ja, V.24-Modul gefunden
 5635 BC02  04          	INC	B		; Suche vorwarts
 5636 BC03  20 F7       	JR	NZ,UBBFC	; bis B=0
 5637 BC05  3E FF       UBC04:	LD	A,0FFH
 5638 BC07  32 BD81     	LD	(UBD7D),A
 5639 BC0A  C9          	RET
 5640                   	;
 5641 BC0B  3E 7F       UBC0A:	LD	A,7FH		; Prolog
 5642 BC0D  32 BBDD     	LD	(UBBDD),A	; aktivieren
 5643 BC10  3E 01       	LD	A,1
 5644 BC12  ED 79       	OUT	(C),A		; Modul einschalten
 5645 BC14  69          	LD	L,C
 5646 BC15  26 B8       	LD	H,0B8H
 5647 BC17  77          	LD	(HL),A		; und in Modultabelle eintragen
 5648 BC18  21 BD37     	LD	HL,UBD33	; Druckerausgabe-Routine
 5649 BC1B  22 B7BE     	LD	(UOUT1+1),HL
 5650 BC1E  21 BC70     	LD	HL,UBC6C	; Hardcopy-Routine
 5651 BC21  22 B799     	LD	(HCADR),HL
 5652 BC24  01 020C     	LD	BC,020CH	; 2 Byte an Portadresse 0CH
 5653 BC27  21 BD63     	LD	HL,UBD5F	; Initialisierungsdaten
 5654 BC2A  F3          	DI
 5655 BC2B  ED B3       	OTIR			; CTC initialisieren
 5656 BC2D  01 060A     	LD	BC,060AH	; 6 Byte an Portadresse 0AH
 5657 BC30  ED B3       	OTIR			; SIO initialisieren
 5658 BC32  FB          	EI
 5659 BC33  21 BD6B     	LD	HL,UBD67	; Initialisierungsdaten Drucker
 5660 BC36  06 08       	LD	B,8
 5661 BC38  C5          UBC34:	PUSH	BC
 5662 BC39  3E 01       	LD	A,1
 5663 BC3B  CD F003     	CALL	PV1
 5664 BC3E  14          	DB	WAIT
 5665 BC3F  C1          	POP	BC
 5666 BC40  DB 0A       	IN	A,(0AH)
 5667 BC42  CB 57       	BIT	2,A
 5668 BC44  28 BF       	JR	Z,UBC04
 5669 BC46  7E          	LD	A,(HL)
 5670 BC47  D3 08       	OUT	(8),A
 5671 BC49  23          	INC	HL
 5672 BC4A  10 EC       	DJNZ	UBC34
 5673 BC4C  C3 BD3E     	JP	UBD3A
 5674                   ;
 5675 BC4F  F5          UBC4B:	PUSH	AF
 5676 BC50  DB 0A       UBC4C:	IN	A,(0AH)
 5677 BC52  CB 57       	BIT	2,A
 5678 BC54  20 10       	JR	NZ,UBC62
 5679 BC56  3A BD81     	LD	A,(UBD7D)
 5680 BC59  B7          	OR	A
 5681 BC5A  20 12       	JR	NZ,UBC6A
 5682 BC5C  C5          	PUSH	BC
 5683 BC5D  3E 01       	LD	A,1
 5684 BC5F  CD F003     	CALL	PV1
 5685 BC62  14          	DB	WAIT
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  95
BAC85   Z80

 5686 BC63  C1          	POP	BC
 5687 BC64  18 EA       	JR	UBC4C
 5688                   	;
 5689 BC66  AF          UBC62:	XOR	A
 5690 BC67  32 BD81     	LD	(UBD7D),A
 5691 BC6A  F1          	POP	AF
 5692 BC6B  D3 08       	OUT	(8),A
 5693 BC6D  C9          	RET
 5694                   	;
 5695 BC6E  F1          UBC6A:	POP	AF
 5696 BC6F  C9          	RET
 5697                   ;
 5698                   ; Hardcopy-Routine
 5699                   ;
 5700 BC70  D5          UBC6C:	PUSH	DE
 5701 BC71  CD BA00     	CALL	UBA00
 5702 BC74  3A BD73     	LD	A,(UBD6F)
 5703 BC77  47          	LD	B,A
 5704 BC78  2A BD76     	LD	HL,(UBD72)
 5705 BC7B  ED 5B BD78  	LD	DE,(UBD74)
 5706 BC7F  B7          	OR	A
 5707 BC80  ED 52       	SBC	HL,DE
 5708 BC82  23          	INC	HL
 5709 BC83  EB          	EX	DE,HL
 5710 BC84  21 0000     	LD	HL,0
 5711 BC87  19          UBC83:	ADD	HL,DE
 5712 BC88  10 FD       	DJNZ	UBC83
 5713 BC8A  22 BD7F     	LD	(UBD7B),HL
 5714 BC8D  3A BD74     	LD	A,(UBD70)
 5715 BC90  47          	LD	B,A
 5716 BC91  3A BD7B     	LD	A,(UBD77)
 5717 BC94  4F          	LD	C,A
 5718 BC95  2A BD78     UBC91:	LD	HL,(UBD74)
 5719 BC98  22 BD7C     	LD	(UBD78),HL
 5720 BC9B  DD 7E 0D    	LD	A,(IX+13)
 5721 BC9E  FE 03       	CP	3
 5722 BCA0  28 43       	JR	Z,UBCE1
 5723 BCA2  CD BD1A     	CALL	UBD16
 5724 BCA5  C5          UBCA1:	PUSH	BC
 5725 BCA6  16 08       	LD	D,8
 5726 BCA8  AF          	XOR	A
 5727 BCA9  32 BD7E     	LD	(UBD7A),A
 5728 BCAC  CD BCEB     UBCA8:	CALL	UBCE7
 5729 BCAF  08          	EX	AF,AF'
 5730 BCB0  CB 0B       	RRC	E
 5731 BCB2  17          	RLA
 5732 BCB3  08          	EX	AF,AF'
 5733 BCB4  10 05       	DJNZ	UBCB7
 5734 BCB6  3A BD74     	LD	A,(UBD70)
 5735 BCB9  47          	LD	B,A
 5736 BCBA  0C          	INC	C
 5737 BCBB  15          UBCB7:	DEC	D
 5738 BCBC  20 EE       	JR	NZ,UBCA8
 5739 BCBE  3A BD73     	LD	A,(UBD6F)
 5740 BCC1  C5          	PUSH	BC
 5741 BCC2  47          	LD	B,A
 5742 BCC3  08          	EX	AF,AF'
 5743 BCC4  CD BC4F     UBCC0:	CALL	UBC4B
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  96
BAC85   Z80

 5744 BCC7  10 FB       	DJNZ	UBCC0
 5745 BCC9  C1          	POP	BC
 5746 BCCA  D5          	PUSH	DE
 5747 BCCB  2A BD7C     	LD	HL,(UBD78)
 5748 BCCE  ED 5B BD76  	LD	DE,(UBD72)
 5749 BCD2  CD BD5D     	CALL	UBD59
 5750 BCD5  D1          	POP	DE
 5751 BCD6  28 07       	JR	Z,UBCDB
 5752 BCD8  C1          	POP	BC
 5753 BCD9  23          	INC	HL
 5754 BCDA  22 BD7C     	LD	(UBD78),HL
 5755 BCDD  18 C6       	JR	UBCA1
 5756                   	;
 5757 BCDF  E1          UBCDB:	POP	HL
 5758 BCE0  CD BD09     	CALL	UBD05
 5759 BCE3  28 B0       	JR	Z,UBC91
 5760 BCE5  D1          UBCE1:	POP	DE
 5761 BCE6  DD CB 08 86 	RES	0,(IX+8)
 5762 BCEA  C9          	RET
 5763                   ;
 5764 BCEB  D5          UBCE7:	PUSH	DE
 5765 BCEC  C5          	PUSH	BC
 5766 BCED  CD BD09     	CALL	UBD05
 5767 BCF0  20 0C       	JR	NZ,UBCFA
 5768 BCF2  2A BD7C     	LD	HL,(UBD78)
 5769 BCF5  79          	LD	A,C
 5770 BCF6  CD BBA2     	CALL	UBBA2
 5771 BCF9  04          	INC	B
 5772 BCFA  7E          	LD	A,(HL)
 5773 BCFB  17          UBCF7:	RLA
 5774 BCFC  10 FD       	DJNZ	UBCF7
 5775 BCFE  C1          UBCFA:	POP	BC
 5776 BCFF  38 04       	JR	C,UBD01
 5777 BD01  D1          	POP	DE
 5778 BD02  1E 00       	LD	E,0
 5779 BD04  C9          	RET
 5780                   	;
 5781 BD05  D1          UBD01:	POP	DE
 5782 BD06  1E FF       	LD	E,0FFH
 5783 BD08  C9          	RET
 5784                   ;
 5785 BD09  3A BD7A     UBD05:	LD	A,(UBD76)
 5786 BD0C  B9          	CP	C
 5787 BD0D  28 05       	JR	Z,UBD10
 5788 BD0F  3A BD7E     	LD	A,(UBD7A)
 5789 BD12  B7          	OR	A
 5790 BD13  C9          	RET
 5791                   	;
 5792 BD14  3E FF       UBD10:	LD	A,0FFH
 5793 BD16  32 BD7E     	LD	(UBD7A),A
 5794 BD19  C9          	RET
 5795                   ;
 5796 BD1A  CD BD3E     UBD16:	CALL	UBD3A
 5797 BD1D  3E 1B       	LD	A,ESC
 5798 BD1F  CD BC4F     	CALL	UBC4B
 5799 BD22  3E 2A       	LD	A,'*'
 5800 BD24  CD BC4F     	CALL	UBC4B
 5801 BD27  3E 05       	LD	A,5
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  97
BAC85   Z80

 5802 BD29  CD BC4F     	CALL	UBC4B
 5803 BD2C  2A BD7F     	LD	HL,(UBD7B)
 5804 BD2F  7D          	LD	A,L
 5805 BD30  CD BC4F     	CALL	UBC4B
 5806 BD33  7C          	LD	A,H
 5807 BD34  C3 BC4F     	JP	UBC4B
 5808                   ;
 5809                   ; Druckerausgabe UOT1
 5810                   ;
 5811 BD37  FE 0D       UBD33:	CP	CR
 5812 BD39  C2 BC4F     	JP	NZ,UBC4B
 5813 BD3C  18 05       	JR	UBD3F
 5814                   	;
 5815 BD3E  3E 0A       UBD3A:	LD	A,LF
 5816 BD40  CD BC4F     	CALL	UBC4B
 5817 BD43  E5          UBD3F:	PUSH	HL
 5818 BD44  F5          	PUSH	AF
 5819 BD45  C5          	PUSH	BC
 5820 BD46  3E 0D       	LD	A,0DH
 5821 BD48  CD BC4F     	CALL	UBC4B
 5822 BD4B  3A BD75     	LD	A,(UBD71)
 5823 BD4E  47          	LD	B,A
 5824 BD4F  04          	INC	B
 5825 BD50  3E 20       	LD	A,20H
 5826 BD52  18 03       	JR	UBD53
 5827                   	;
 5828 BD54  CD BC4F     UBD50:	CALL	UBC4B
 5829 BD57  10 FB       UBD53:	DJNZ	UBD50
 5830 BD59  C1          	POP	BC
 5831 BD5A  F1          	POP	AF
 5832 BD5B  E1          	POP	HL
 5833 BD5C  C9          	RET
 5834                   ;
 5835 BD5D  E5          UBD59:	PUSH	HL
 5836 BD5E  B7          	OR	A
 5837 BD5F  ED 52       	SBC	HL,DE
 5838 BD61  E1          	POP	HL
 5839 BD62  C9          	RET
 5840                   ;
 5841                   ; Initialisierungsdaten CTC, SIO
 5842                   ;
 5843 BD63  47          UBD5F:	DB	47H		; CTC Steuerbyte
 5844 BD64  5B          	DB	5BH		; CTC Zeitkonstante
 5845 BD65  04 04       	DB	04H,04H		; SIO WR4
 5846 BD67  03 20       	DB	03H,20H		; SIO WR3
 5847 BD69  05 6A       	DB	05H,6AH		; SIO WR5
 5848                   ;
 5849                   ; Initialisierungsdaten Drucker
 5850                   ;
 5851 BD6B  1B 40       UBD67:	DB	ESC,'@'		; Drucker initialisieren
 5852 BD6D  1B 52 00    	DB	ESC,'R',0	; Zeichensatz USA
 5853 BD70  1B 41 08    	DB	ESC,'A',8	; Zeilenabstand 8/72 Zoll
 5854                   
 5855 BD73  01          UBD6F:	DB	1
 5856 BD74  01          UBD70:	DB	1
 5857 BD75  0A          UBD71:	DB	10
 5858 BD76  F0          UBD72:	DB	0F0H
 5859 BD77  00          	DB	0
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  98
BAC85   Z80

 5860 BD78  50          UBD74:	DB	50H
 5861 BD79  00          	DB	0
 5862 BD7A  C0          UBD76:	DB	0C0H
 5863 BD7B  40          UBD77:	DB	40H
 5864 BD7C              UBD78:
 5865         BD7E      UBD7A	EQU	$+2
 5866         BD7F      UBD7B	EQU	$+3
 5867         BD81      UBD7D	EQU	$+5
 5868                   	.dephase	; Ende des V.24-Treibers
 5869                   
 5870 2657  1D          U256B:	DB	1DH	; Autostart BASIC-Programm
 0 Error(s) Detected.
 8793 Absolute Bytes. 693 Symbols Detected.
      ;
 5851 BD6B  1B 40       UBD67:	DB	ESC,'@'		; Drucker initialisier