SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   1
BAC855  Z80

    1         0000      KC3	EQU	0	; Rechnertyp = KC85/5
    2         0001      DEV	EQU	1	; Device-Umschaltung aktiv
    3                   INCLUDE	BAC85.Z80
    1                   ;---------------------------------------------------------------------
    2                   ;	BASICODE 3C Version 1.5 fuer Kleincomputer KC85/4
    3                   ;	(C) Andreas und Uwe Zierott	Stand: 31.01.1990
    4                   ;	Farbe von Rudolf Wenzel		Stand: 08.12.1992
    5                   ;
    6                   ; Reassemblerlisting erzeugt mit Reassembler QMR unter CAOS
    7                   ; BAC854C.ASM		Adressen: 0401 bis 256A
    8                   ;
    9                   ; M. Leubner		03.04.2023 bis 19.04.2023
   10                   ;---------------------------------------------------------------------
   11                   ;
   12                   ; Modifikationen:
   13                   ; 11.11.2023:
   14                   ;	- GOSUB 280 (Aus- bzw. Einschalten der STOP/BRK-Taste FR = 0 bzw. 1)
   15                   ;	  deaktiviert, dadurch keine Kopie der KTAB mehr erforderlich
   16                   ;	- Copyright-Texte angepasst, Versionsnummer 1.5a eingetragen
   17                   ;	- Arbeitszellen so verlagert, dass 0000-000Fh frei bleibt fuer USB
   18                   ;	  (00AE-00E0h ist bereits unberuehrt weil KTAB nicht mehr kopiert wird)
   19                   ;	- einige Variablen umbenannt
   20                   ;	- unnuetze NOP-Befehle entfernt
   21                   ;	- GOSUB 220 kann jetzt auch aus Bild 1 Zeichen lesen
   22                   ;	- Codeoptimierung (CALL x, RET ersetzt durch JP x)
   23                   ;	- Codeoptimierung, indem alle gepatchten Spruenge der Farberweiterung
   24                   ;	  direkt in den Originalcode verschoben wurden (vermutlich hat R. Wenzel
   25                   ;	  auch keinen Quelltext gehabt und das Programm nur zum Teil uebersetzt)
   26                   ;	- 80 freie Bytes zwischen Grundprogramm und Farberweiterung geloescht
   27                   ;	Druckertreiber:
   28                   ;	- Modulsuche vorwaerts ab Steckplatz 7 (vorher rueckwaerts von 0 bis 1)
   29                   ;	- eingeschaltetes M003 wird jetzt auch im Steuerbytespeicher eingetragen
   30                   ;
   31                   ;	Version 1.5a veroeffentlicht
   32                   ;
   33                   ; 12.11.2023:
   34                   ;	- Idee1: Statt KTAB das UP KBDS ueber die SUTAB modifizieren.
   35                   ;	  Funktioniert aber nicht, da KBDS innerhalb von BASPV direkt benutzt
   36                   ;	- Idee2: KTAB auf Adresse E0-15Fh kopiert und GOSUB 280 wieder aktiviert
   37                   ;	  Funktioniert auch nicht richtig, da ubasex des M052 die Adressen
   38                   ;	  von 00BE bis 00FFh belegt (Systemabsturz bei CAOS 4.2)
   39                   ; 13.11.2023:
   40                   ;	- JP IRMOFF wieder ersetz durch CALL IRMOFF, RET (sonst Absturz)
   41                   ;	- Kaltstart setzt nun Nullbytes fuer Programmanfang korrekt
   42                   ; 16.11.2023:
   43                   ;	- Standardfarbe geaendert von Tuerkis/rot auf gelb/blau
   44         0031      DEFCOL	EQU	31H		; gelb auf blau (Original 2AH tuerkis auf rot)
   45                   ;	- Farbe bei Programmstart: weiss/schwarz
   46                   ;	- wenn CC() nicht definiert ist -> keine Aenderung der Farben
   47                   ; 17.11.2023:
   48                   ;	- Unterprogramm U1F3B aufgeloest und direkt eingebaut (nur 1x verwendet)
   49                   ;	- Farbwert bei Textanzeige im Grafikmode direkt aus CAOS-Arbeitszelle
   50                   ;	  lesen, statt Programmcode bei U1F25 zu modifizieren
   51                   ;	- Grafikfarbe bei Initialisierung nicht voreinstellen, wird vom Titel-
   52                   ;	  bild (Schallplatte) ohnehin ueberschrieben
   53                   ; 19.11.2023:
   54                   ;	- GOSUB 620, GOSUB 630 und GOSUB 650 Sprung entfernt (Patch?)
   55                   ;	- Grafikfarbe in FARB speichern und nicht mehr Programmcode modifizieren
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   2
BAC85   Z80

   56                   ;	- Code fuer Punkt/Linie zusammengefasst, Aufruf ueber PV3 + Register E
   57                   ;
   58                   ;	Version 1.5b veroeffentlicht
   59                   ;
   60                   ; 21.11.2023:
   61                   ;	- Version fuer KC85/3 in Vorbereitung nach BAC853C.SSS (Version 1.6)
   62                   ;	  * schnelle CLS-Routine
   63                   ;	  * VRAM ist immer B200H
   64                   ;	  * Punkt setzen/loeschen mit PUSE/PUDE
   65                   ; 18.12.2023:
   66                   ;	- Stack in 0B7CBH eintragen fuer Kompatibilitaet zu CAOS 3.4 und OS/pi
   67                   ;	- Zeichenzaehler A' retten beim Konvertieren BASIC -> ASCII fuer
   68                   ;	  Kompatibilitaet zu OS/pi (IRMON/OFF veraendert A')
   69                   ;	- Vortonlaenge beim KC-Format generell auf 400H gesetzt
   70                   ;	- IRM-Adresse fuer letzte Zeile links/unten rechnerspezifisch
   71                   ;	- Inversdarstellung KC85/3 fuer GOSUB 150 implementiert
   72                   ;	- Linien-Routine fuer KC85/3 implementiert
   73                   ;	- Test auf "schwaches Kassetteninterface" wieder eingebaut
   74                   ;	  (war nur noch in KC85/3-Version drin, Text aber in beiden Versionen)
   75                   ;	- Zeichen malen bei U09DD fuer KC85/3 implementiert
   76                   ; 20.12.2023:
   77                   ;	- Text im Grafikmodus (GOSUB 650) implementiert fuer KC85/3
   78                   ;	  Test mit "Tuerme von Hanoi": OK
   79                   ;	- FLOAD-Menuewort wird jetzt bei Initialisierung mit geloescht
   80                   ; 22.12.2023:
   81                   ;	- CN in Grafikfarbe einbauen bei UP Punkt/Linie am KC85/3
   82                   ; 23.12.2023:
   83                   ;	- GOSUB 150: Farbe aus CC(0/1) wird nicht mehr uebernommen
   84                   ;	- GOSUB 650: Farbebene nur noch schreiben, wenn Pixelebene Inhalt hat
   85                   ; 26.12.2023:
   86                   ;	- HEX-Ausgabe fuer Blocknummernanzeige optimiert
   87                   ;	- Anzeige "Speicher voll" verschoben und damit Sprungbefehl eingespart
   88                   ;	- U1671 und U17D7 verschoben und damit je einen Sprungbefehl eingespart
   89                   ;	- U1AAE verschoben, ein Sprungbefehl eingespart, 2x JP in JR verwandelt
   90                   ;	- U09AC (SCF,RET) an andere Stelle gelegt und 2 Byte gespart
   91                   ;
   92                   ;	Version 1.5c veroeffentlicht
   93                   ;
   94                   ;	- Dateiname wird bei ISRI und ISRO nicht in HL uebergeben
   95                   ;	- Die Datenfiles enthalten als erstes 3x UUU, dann 8 Zeichen fuer den
   96                   ;	  Dateinamen und noch ein 00h. Erst danach beginnen die Nutzdaten.
   97                   ;	  Das ist fuer USB/DISK nicht sinnvoll und waere bei Nutzung von
   98                   ;	  MBIN/MBOUT nicht der Fall. Besser also gleich auf MBIN/MBOUT umstellen
   99                   ;	  dann waere eventuell auch BASEX nutzbar.
  100                   ; 27.12.2023:
  101                   ;	- Beim Schreiben auf Kassette landet man im CAOS beim PRINT nach CLOSE
  102                   ;	  Ursache ist der Aufruf von CSRO ohne vorheriges ISRO.
  103                   ;	  (CSRO setzt OUTAB und WEND auf die gespeicherten Werte von ISRO)
  104                   ;	  Das Problem tritt nicht auf, wenn zuvor mit LOAD/CLOAD Daten von
  105                   ;	  Kassette geladen wurden - wie es frueher noetig war.
  106                   ;	  -> CAOS 4.9 initialisiert nun zur Sicherheit ZOTAB und ZWEND
  107                   ; 28.12.2023:
  108                   ;	- U09B7 (untere Bildschirmzeile nach U0000 kopieren) direkt eingebaut
  109                   ;	- Dateiname mit "UUU12345678" vorbereiten fuer MBIN/MBOUT
  110                   ; Umstellung von ISRI/MBI/CSRI auf MBIN:
  111                   ;	- Oeffnen: HL=Dateiname, D=08H
  112                   ;	  MBIN uebergibt beim Oeffnen bereits das erste Datenbyte. Das wird hier
  113                   ;	  in U0047 gespeichert, und beim folgenden Lesen dem Puffer entnommen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   3
BAC85   Z80

  114                   ;	- Lesen: D=0		PA: A=Datenbyte		CY=1 bei Fehler
  115                   ;	- Schliessen: D=40H
  116                   ; Umstellung von ISRO/MBO/CSRO auf MBOUT:
  117                   ;	- Oeffnen: HL=Dateiname, D=08H
  118                   ;	  MBOUT erwartet beim Oeffnen bereits das erste Datenbyte. Hier kann
  119                   ;	  also das Oeffnen vorerst nur gemerkt werden. Beim nachfolgenden
  120                   ;	  ersten Schreiben wird dann 1x D=8 mitgegeben.
  121                   ;	- Schreiben: D=0, A=Datenbyte			CY=1 bei Fehler
  122                   ;	- Schliessen: D=40H
  123                   ; 29.12.2023:
  124                   ;	- Dateiname des Datenfiles auf *.DDD (statt *.UUU geaendert)
  125                   ;	- BASEX/UBASEX setzt bei UMBOUT Bit 0(IX+8), um das Verify von CAOS
  126                   ;	  abzuwaehlen -> Nach Close das Bit wieder loeschen
  127                   ;	- TAPE: CAOS 3.1 macht 8 Sekunden Vorton, CAOS 4.9 ca. 4 Sekunden
  128                   ;	  -> laesst sich nicht vermeiden
  129                   ;	- CAOS 3.1: Blocknummernunterdrueckung funktioniert nicht bei Ein/Ausgabe
  130                   ;	  ueber USB (in M052-Software zu korrigieren)
  131                   ;	  ueber TAPE - nicht zu aendern, weil direkt in CAOS programmiert
  132                   ;	- CAOS 3.1 mit USB-Treiber schreibt nur 128 Byte, CAOS 4.9 256 Byte
  133                   ;	  Der Unterschied liegt am USB-Treiber (M052-Software/CAOS-Treiber)
  134                   ;	  Bei TAPE werden mindestens zwei Bloecke benoetigt, der Vorblock mit
  135                   ;	  dem Dateinamen und der Endeblock.
  136                   ; 30.12.2023:
  137                   ;	- zwei sinnlose Befehle nach U1AB5 auskommentiert
  138                   ;	- Die eigene Routine U04C3 (Spung zu IOERR) war zwar enthalten, aber
  139                   ;	  sinnlos, da diese nur von MBIN/MBOUT verwendet wurde, BASICODE 1.5
  140                   ;	  aber stattdessen MBI/MBO verwendet hat. F|er die neue Version mit
  141                   ;	  MBIN/MBOUT aber durchaus erforderlich.
  142                   ;	- Setzen von U04C3 als IO-ERROR-Routine verschoben zu WARM1, damit das
  143                   ;	  im Direktmode regeneriert wird
  144                   ;	- Neue Fehlerbehandlungsroutine fuer RUN-Mode, welche bei BASEX/UBASEX
  145                   ;	  nur das CY-Flag gesetzt zurueck gibt und nicht zu IOERR in den BASIC-
  146                   ;	  ROM springt. Getestet mit UBASEX unter CAOS 3.1 und CAOS 4.2
  147                   ; 02.01.2024:
  148                   ;	- kein CLS mehr bei GOTO 20, nur noch bei GOSUB 100 und 600
  149                   ;	- KTAB2 in Programm integriert und GOSUB 280 wieder aktiviert
  150                   ; 03.01.2024:
  151                   ;	- Absturz bei *L unter CAOS 3.4 behoben, dabei die Sonderbehandlung
  152                   ;	  der *-Sonderkommandos ueberarbeitet
  153                   ;	- CLS bei GOTO 20 wieder eingebaut
  154                   ; 04.01.2024:
  155                   ;	- DEVICE-Umschaltung auswaehlbar gemacht
  156                   ;		KC85/3-Version
  157                   ;		KC85/4-Version ohne DEVICE-Umschaltung
  158                   ;		KC85/5-Version mit DEVICE-Umschaltung
  159                   ;	- Test KTAB-Umschaltung BRK/STOP
  160                   ;
  161                   ;	Version 1.5d veroeffentlicht
  162                   ;
  163                   ;---------------------------------------------------------------------
  297                   .LIST
  298                   ;---------------------------------------------------------------------
  299                   
  300         000A      LF	EQU	0AH
  301         000D      CR	EQU	0DH
  302         001B      ESC	EQU	1BH
  303                   
  304                   ; Portadressen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   4
BAC85   Z80

  305                   
  306         0088      PIOAD	EQU	88H	; System-PIO Datenbyte Port A
  307                   			;	Bit 0 - CAOS ROM-E ein/aus
  308                   			;	Bit 1 - RAM0 ein/aus
  309                   			;	Bit 2 - IRM ein/aus
  310                   			;	Bit 3 - Schreibschutz RAM0
  311                   			;	Bit 4 - K_OUT
  312                   			;	Bit 5 - System-LED
  313                   			;	Bit 6 - Motorschaltspannung
  314                   			;	Bit 7 - USER-ROM ein/aus
  315         0089      PIOBD	EQU	89H	; System-PIO Datenbyte Port B
  316                   			;	Bit 0 - Symmetrie-Flip-Flop Tonausgabe
  317                   			;	Bit 1 \
  318                   			;	Bit 2 - Lautstaerke Tonausgabe
  319                   			;	Bit 3 - 4 Bit (Low-aktiv)
  320                   			;	Bit 4 /
  321                   			;	Bit 5 - RAM8 ein/aus
  322                   			;	Bit 6 - Schreibschutz RAM8
  323                   			;	Bit 7 - Blinken ein/aus
  324         008A      PIOAS	EQU	8AH	; System-PIO Steuerbyte Port A
  325         008C      CTC0	EQU	8CH	; CTC Kanal 0 (Tonhoehe 1)
  326         008D      CTC1	EQU	8DH	; CTC Kanal 1 (Tonhoehe 2, Kassettenausgabe)
  327         008E      CTC2	EQU	8EH	; CTC Kanal 2 (Tondauer)
  328                   
  329                   ;	*********************************
  330                   ;	*  Arbeitszellen von BASICODE	*
  331                   ;	*********************************
  332                   ;
  333                   ; Original:	0000H bis 00CEH bzw. 00CFH mit KTAB-Kopie
  334                   ; => nicht vertraeglich mit M052 USB-Tastatur und DEVICE-Treiber !!!
  335                   ;
  336                   ; neue Belegung:
  337                   ; 0000-000FH	belegt von USB-Software
  338                   ; 0010-0037H	ASCII-Speicher fuer eine Bildschirmzeile
  339                   ; 0038-003AH	RST38-Meldung Systemabsturz
  340                   ; 003BH		FLAGS (nicht verschieben!!!)
  341                   ; 003C-005EH	23 Byte BASICODE-Arbeitszellen
  342                   ; 005F-00ADH	79 Byte frei
  343                   ; 00AE-00E0H	USB-Interruptroutine
  344                   ; 00E1-014FH	111 Byte frei
  345                   ; 00D8-014FH	UBASEX: Zusatzroutinen wie DIENST.KCC (nicht nutzbar!)
  346                   ; 0150-016FH	BASEX/UBASEX: Umschaltroutine CALL*150
  347                   ; 0170-01C3H	84 Byte Stack
  348                   ; 01C4-01FFH	ISR-Tabelle und IX-Arbeitszellen
  349                   ; 0200-02FFH	BASEX/UBASEX und modifizierte SUTAB
  350                   ; 0300-03FFH	WORKRAM von BASIC
  351                   
  352                   ; 11.11.2023 Arbeitszellen erst ab Adresse 0010H und nur bis 005EH
  353                   
  354         0010      U0000	EQU	0010H		; Zwischenspeicher fuer Magnetbandroutinen
  355                   	;   bis 0037H		; 40 Zeichen = eine Bildschirmzeile
  356                   
  357         0038      U0038	EQU	0038H		; JUMP von RST 38
  358         0039      U0039	EQU	0039H		; Adresse von RST 38
  359                   
  360                   ; Adresse FLAGS=003BH nicht verlegen (wird vom Fullscreen-Editor ausgewertet)
  361         003B      FLAGS	EQU	003BH		; Bit0=1 Uebersetzung ASCII -> BASIC
  362                   				; Bit1=1 ASCII-File im Speicher
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   5
BAC85   Z80

  363                   				; Bit3=1 Init bei Kassettenein- und ausgabe
  364                   				; Bit6=1 unerlaubter BASICODE-Befehl
  365                   				; Bit7=1 Regelverstoss
  366                   
  367         003C      XPOS2	EQU	003CH		; X-Position (Linie X-Ende)
  368                   				; auch Zwischenspeicher fuer OUTAB
  369         003E      YPOS2	EQU	003EH		; Y-Position (Linie Y-Ende)
  370         0040      XPOS1	EQU	0040H		; aktuelle Grafikposition (Linie X-Anfang)
  371         0042      YPOS1	EQU	0042H		; aktuelle Grafikposition (Linie Y-Anfang)
  372         0044      CN	EQU	0044H		; "Color Numerisch"	CN=0 zeichnen
  373                   				; (GOSUB 620/630/650)	CN=1 loeschen
  374         0045      U0031	EQU	0045H		; Beginn ASCII-File
  375         0047      U0033	EQU	0047H		; Ende ASCII-File
  376         0049      CPOINT	EQU	0049H		; Zeiger in Kassettenpuffer bei Dateiarbeit
  377         004B      BLNR	EQU	004BH		; erwartete Blocknummer
  378         004C      U003C	EQU	004CH
  379         004D      U003D	EQU	004DH		; Merker fuer Interruptroutine PIO A
  380         004F      U003F	EQU	004FH		; Merker fuer Interruprroutine CTC1 oder CTC2
  381         0051      U0041	EQU	0051H		; Zwischenspeicher fuer UOUT1
  382                   				; Zeilennummer bei Konvertierung BASIC -> ASCII
  383         0053      U0043	EQU	0053H		; Bit0=1 Dateiende (Kassetteneingabe) erkannt
  384         0054      U0044	EQU	0054H		; FFH = Abbruch beim BASICODE Lesen/Schreiben
  385         0055      U0045	EQU	0055H		; Bit gesetzt fuer geoeffnete BASICODE-Kanaele
  386                   				; je ein Bit fuer NF=0 bis NF=7
  387         0056      U0046	EQU	0056H		; verwendet bei BASICODE-Bestand lesen/schreiben
  388         0057      U0047	EQU	0057H		; letztes gelesenes Datenbyte (Kassetteneingabe)
  389         005A      U004A	EQU	005AH		; Zaehlwert fuer BASICODE-Bandeingabe
  390         005C      U004C	EQU	005CH		; IRM-Adresse fuer malen auf unterer Bildschirmzeile
  391         005E      U004E	EQU	005EH		; Merkzelle fuer die Original-KTAB von CAOS
  392         0060      FNAME	EQU	0060H		; 11 Byte Dateiname fuer Kassettenroutinen
  393                   ;	bis	006AH
  394                   ;KTAB2	EQU	004FH		; Kopie der Tastaturtabelle KTAB
  395                   ;	;   bis 00CEH		; 11.11.2023: nicht mehr benutzt
  396                   
  397         01F0      U01F0	EQU	001F0H		; (IX+0) Zeitkonstante Kassettenroutinen
  398         01F2      U01F2	EQU	001F2H		; (IX+2) Blocknummer Kassettenroutinen
  399                   
  400                   ; WORKRAM von BASIC:
  401                   
  402         0340      DUMMY	EQU	0340H		; Anzahl der Dummy-Zeichen: NULL n
  403         034D      AUTOFG	EQU	034DH		; AUTO-Flag (automatische Zeilennummerierung)
  404         0356      STDPTR	EQU	0356H		; RAM-Mindestgroesse (KC85/3=7EFF KC85/4=BEFF)
  405         0358      CULINO	EQU	0358H		; aktuelle Zeilennummer
  406         035D      DATBYT	EQU	035DH		; Kopierschutz, wenn ungleich 0
  407         035F      PSTBEG	EQU	035FH		; Programmstart-Adresse (normal 0401H)
  408         0361      INPBUF	EQU	0361H		; Editierpuffer
  409         03AE      DATYPE	EQU	03AEH		; Datentyp
  410         03D7      SVARPT	EQU	03D7H		; Programmende + 1
  411         03D9      DVARPT	EQU	03D9H		; Adresse Feldvariablen
  412         03DB      FSLPTR	EQU	03DBH		; Erste freie Adresse nach den Variablenlisten
  413         03E5      WRA1	EQU	03E5H		; Arithmetikregister 1
  414                   
  415                   ; Arbeitszellen im IRM:
  416                   
  417         B781      ARGN	EQU	0B781H	; Anzahl Argumente
  418         B782      ARG1	EQU	0B782H	; Argument 1
  419         B784      ARG2	EQU	0B784H	;    "	   2
  420         B786      ARG3	EQU	0B786H	;    "	   3
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   6
BAC85   Z80

  421         B788      ARG4	EQU	0B788H	;    "	   4
  422         B796      NUMNX	EQU	0B796H	; Zeichenanzahl einer erfassten Zahl
  423                   			; hier genutzt als Zwischenspeicher Farbe bei GOSUB 150
  424         B799      HCADR	EQU	0B799H	; Hardcopy-Aufruf
  425         B79C      WINON	EQU	0B79CH	; Fenster-Anfang
  426         B79E      WINLG	EQU	0B79EH	; Fenster-Groesse
  427         B7A0      CURSO	EQU	0B7A0H	; Cursor-Position
  428         B7A3      COLOR	EQU	0B7A3H	; Farbe
  429         B7A6      CCTL0	EQU	0B7A6H	; Zeichentabelle 0 20H...5FH
  430         B7A8      CCTL1	EQU	0B7A8H	;	"	 1 00H...1FH und 60H...7FH
  431         B7B9      OUTAB	EQU	0B7B9H	; Adresse fuer Zeiger auf UP-Nr. bei Ausgabe
  432         B7BB      INTAB	EQU	0B7BBH	; Adresse fuer Zeiger auf UP-Nr. bei Eingabe
  433         B7BD      UOUT1	EQU	0B7BDH	; Sprung zu USER-Ausgabekanal 2 (Druckerausgabe)
  434         B7C6      UIN2	EQU	0B7C6H	; Sprung zu USER-Eingabekanal 3 V.24-duplex
  435         B7C9      IO_ERR	EQU	0B7C9H	; Reaktionsprogramm fuer BASIC I/O-Error bis CAOS 4.7
  436         B7CB      VRAM	EQU	0B7CBH	; VRAM-Adresse des eingestellten Bildes
  437         B7D3      HOR	EQU	0B7D3H	; Grafik Horizontalposition (X-Wert)
  438         B7D5      VERT	EQU	0B7D5H	; Grafik Vertikalposition (Y-Wert)
  439         B7D6      FARB	EQU	0B7D6H	; Grafik Farbe
  440                   		; Bit 0=1	XOR-Funktion
  441                   		; Bit 1=1	Punkt loeschen
  442                   		; Bit 2=1	Farbebene nicht veraendern
  443                   		; Bit 3-7	Vordergrundfarbe + Blinken
  444         B900      FNDEF	EQU	0B900H	; Funktionstastenspeicher (bis B99BH)
  445                   
  446                   ; Adressen aus dem BASIC-ROM:
  447                   
  448         C08C      SECST	EQU	0C08CH	; RESTART BASIC-Interpreter
  449         C33E      OMER	EQU	0C33EH
  450         C3FE      EDITO2	EQU	0C3FEH
  451         C4BB      ZPOIT	EQU	0C4BBH
  452         C5F1      TEXTOE	EQU	0C5F1H
  453         C689      CPREG	EQU	0C689H	; Vergleiche Register DE mit HL
  454         C767      LIST9	EQU	0C767H	; LIST: Stop nach vorgegebener Zeilenanzahl
  455         C791      LCREG	EQU	0C791H
  456         C79A      LIST11	EQU	0C79AH	; Token aufloesen
  457         C8BD      TCHAR	EQU	0C8BDH	; naechstes gueltiges Zeichen holen
  458         C8DF      RESTO	EQU	0C8DFH
  459         C918      STOP	EQU	0C918H
  460         C91B      END0	EQU	0C91BH
  461         C96F      EPRVL3	EQU	0C96FH	; Ausdruck berechnen -> DE
  462         C9AA      CLEAR	EQU	0C9AAH
  463         CB61      CRWDY2	EQU	0CB61H	; Anzeige CR, LF, Dummyzeichen
  464         CF48      DIM7	EQU	0CF48H	; Adresse einer Variablen holen -> DE
  465         D090      FRE	EQU	0D090H
  466         D0B1      FRE3	EQU	0D0B1H
  467         D0C0      POS1	EQU	0D0C0H
  468         D1E1      STROP	EQU	0D1E1H
  469         D46F      ADD5	EQU	0D46FH
  470         D59A      MUL1	EQU	0D59AH
  471         D5F5      DIV1	EQU	0D5F5H
  472         D697      TSGNM	EQU	0D697H
  473         D6AE      SGN1	EQU	0D6AEH
  474         D6BC      ABS	EQU	0D6BCH
  475         D6C0      ABS1	EQU	0D6C0H
  476         D6C8      OPARST	EQU	0D6C8H
  477         D6DD      OPKOP	EQU	0D6DDH	; Wert in Arithmetikregister 1 laden
  478         D6EE      OPLAD	EQU	0D6EEH
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   7
BAC85   Z80

  479         D6F7      OPTRAN	EQU	0D6F7H
  480         D829      NUMBO	EQU	0D829H
  481         D82A      NUMBO1	EQU	0D82AH
  482         D834      NUMKON	EQU	0D834H
  483         D928      EXPO	EQU	0D928H
  484         D9FD      RND	EQU	0D9FDH
  485         DC82      IOERR	EQU	0DC82H
  486         DCB0      CASS01	EQU	0DCB0H	; *.SSS Name holen
  487         DD57      CSAVE0	EQU	0DD57H	; BASIC-Programm abspeichern
  488         DDD5      CO	EQU	0DDD5H
  489                   
  490                   ; CAOS-Vereinbarungen:
  491                   
  492         F003      PV1	EQU	0F003H	; CAOS-UP aufrufen, DB UP-Nummer
  493         0000      CRT	EQU 00H		; Zeichenausgabe auf Bildschirm
  494                   ;MBO	EQU 01H		; Ausgabe Datenblock auf Kassette
  495         0002      UOT1	EQU 02H		; Ausgabe auf Anwenderkanal 1
  496         0004      KBD	EQU 04H		; Tastatureingebe mit Cursoreinblendung
  497                   ;MBI	EQU 05H		; Datenblock von Kassette einlesen
  498         0007      USIN2	EQU 07H		; Eingabe von Anwenderkanal 2
  499                   ;ISRO	EQU 08H		; Ausgabe 1. Block auf Kassette
  500                   ;CSRO	EQU 09H		; Ausgabe letzten Block auf Kassette
  501                   ;ISRI	EQU 0AH		; Einlesen 1. Block von Kassette
  502                   ;CSRI	EQU 0BH		; Abschluss Magnetbandeingabe
  503         000E      KBDZ	EQU 0EH		; Tastenstatusabfrage mit Quittung
  504         0012      LOOP	EQU 12H		; Ruecksprung zu CAOS-Menueschleife
  505         0014      WAIT	EQU 14H		; Warteschleife
  506         0023      OSTR	EQU 23H		; Ausgabe folgender Zeichenkette
  507         0024      OCHR	EQU 24H		; Zeichenausgabe ueber Ausgabetabelle
  508         0030      PUSE	EQU 30H		; Punkt setzen
  509         0034      PADR	EQU 34H		; Berechnen Pixel- und Farbadresse
  510         0037      MBIN	EQU 37H		; Byteweise Eingabe von Kassette
  511         0038      MBOUT	EQU 38H		; Byteweise Ausgabe auf Kassette
  512         003E      LINE	EQU 3EH		; Linie zeichnen
  513         F009      PV3	EQU	0F009H	; CAOS-UP aufrufen, E=UP-Nummer
  514         F015      PV5	EQU	0F015H	; CAOS-UP aufrufen, E=UP-Nummer, IRM ON/OFF
  515         F018      IRMON	EQU	0F018H	; IRM einschalten
  516         F01B      IRMOFF	EQU	0F01BH	; IRM abschalten
  517                   
  518                   ;---------------------------------------------------------------------
  519                   
  520         03FF      	ORG	0401H-2
  521                   ;
  522 03FF  2106        	DW	U256B-0401H	; Dateigroesse BAC854C.SSS
  523                   ;
  524 0401  040B        	DW	U040B		; Zeiger auf naechste Programmzeile
  525 0403  000A        	DW	10		; Zeilennummer 10
  526 0405  9D AE       	DB	9DH,0AEH	; CALL*
  527                   	ASCTXT	U0410		; Kaltstart / Initialisierung BASICODE
   12 0407  34          		DB	(U0410/100H AND 0FH) + 30H
   18 0408  31          		DB	(U0410/10H AND 0FH) + 30H
   24 0409  30          		DB	(U0410 AND 0FH) + 30H
  528 040A  00          	DB	0		; Zeilenende
  529 040B  0000        U040B:	DW	0		; BASIC-Programmende
  530                   ;
  531                   ; Die Warmstart-Adresse wird im Bascoder nicht aufgerufen. Es ist aber im
  532                   ; BASICODE-Buch beschrieben, dass z.B. nach einem RESET mit Eingabe von
  533                   ; CALL*40D:RUN in das Programm zurueck gelangt werden kann. 
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   8
BAC85   Z80

  534                   ; Auf der Funktionstaste Shift+F4 liegt ebenfalls "REBASIC CALL*40D"
  535                   ;
  536 040D  C3 0BAD     U040D:	JP	WARM		; Warmstart BASICODE
  537                   	;
  538 0410  C3 0B89     U0410:	JP	KALT		; Kaltstart BASICODE
  539                   ;
  540                   ; RST 38H - Systemabsturz melden und zurueck zu CAOS
  541                   ;
  542 0413  21 E000     U0413:	LD	HL,0E000H	; RESET
  543 0416  22 0039     	LD	(U0039),HL	; auf RST 38H eintragen
  544 0419  DB 88       	IN	A,(PIOAD)
  545 041B  E6 9F       	AND	9FH
  546 041D  F6 0D       	OR	0DH
  547 041F  D3 88       	OUT	(PIOAD),A
  548 0421  31 01C4     	LD	SP,01C4H	; CAOS-System-Stack
  549 0424  CD F003     	CALL	PV1
  550 0427  23          	DB	OSTR
  551 0428  0D          	DB	0DH
  552 0429  21 20 53 79 	DB	'! Systemabsturz !'
  553 043A  0D 0A       	DB	CR,LF
  554 043C  00          	DB	0
  555 043D  CD F003     	CALL	PV1
  556 0440  12          	DB	LOOP
  557                   ;
  558                   ; Initialisierung BASICODE (bei Kaltstart, Warmstart))
  559                   ;
  560 0441  21 0010     BCINIT:	LD	HL,U0000	; 20.12.2023: ASCII-Zwischenspeicher loeschen
  561 0444  11 0011     	LD	DE,U0000+1	; damit wird auch ein evtl. vorhandenes
  562 0447  01 0027     	LD	BC,39		; Menuewort von FLOAD geloescht
  563 044A  72          	LD	(HL),D		; 0 eintragen
  564 044B  ED B0       	LDIR
  565 044D  CD F018     	CALL	IRMON
  566                   ; 11.11.2023: keine Kopie der KTAB mehr vornehmen
  567                   ;	LD	L,(IX+14)	; KTAB
  568                   ;	LD	H,(IX+15)	; aktueller Wert
  569                   ;	LD	DE,KTAB2
  570                   ;	LD	(IX+14),E	; KTAB
  571                   ;	LD	(IX+15),D	; Kopie
  572                   ;	LD	BC,128
  573                   ;	LDIR			; KTAB in RAM kopieren
  574                   ;IF KC3
  575                   ;	LD	HL,KTAB2+4DH	; Shift-Stop in KTAB
  576                   ;	LD	(HL),C		; mit 0 belegen (statt 13H)
  577                   ;ENDIF
  578 0450  21 0BF9     	LD	HL,U0C39	; modifizierte Eingaberoutine mit Konverter
  579 0453  22 B7C7     	LD	(UIN2+1),HL
  580 0456  21 0A24     	LD	HL,U0A7B	; Zeiger auf 07H = USIN2
  581 0459  22 B7BB     	LD	(INTAB),HL	; INTAB umstellen auf USIN2
  582 045C  CD 0968     	CALL	U09AE		; IRM-Adresse fuer Zeichen links/unten setzen
  583 045F  21 0000     	LD	HL,0		; Fenster volle Groesse
  584 0462  22 B79C     	LD	(WINON),HL
  585 0465  22 005A     	LD	(U004A),HL	; Zaehlwert Kassetteneingabe
  586 0468  21 2028     	LD	HL,2028H
  587 046B  22 B79E     	LD	(WINLG),HL
  588                   ; 30.12.2023: verschoben zu WARM1, damit das im Direktmode regeneriert wird
  589                   ;	LD	HL,U04C3	; eigene Routine fuer
  590                   ;	LD	(IO_ERR),HL	; IO-ERROR eintragen
  591 046E  3E 31       	LD	A,DEFCOL	; Standardfarbe
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   9
BAC85   Z80

  592 0470  32 B7A3     	LD	(COLOR),A	; Farbe einstellen
  593                   ; 17.11.2023: Grafikfarbe einstellen hier nicht noetig, da diese beim Zeichnen
  594                   ; des Titelbildes (Schallplatte) neu eingetragen wird
  595                   ;	AND	78H		; Vordergrundfarbe (ohne Blinken) herausfiltern
  596                   ;	LD	(FARB),A	; auch fuer Grafikbefehle eintragen
  597 0473  3E 7F       	LD	A,7FH		; Blinken aus, volle Lautstaerke, RAM8 ein
  598 0475  D3 89       	OUT	(PIOBD),A
  599 0477  21 0A3E     	LD	HL,U0A95	; F-Tastenbelegungen
  600 047A  11 B900     	LD	DE,FNDEF	; Funktionstastenspeicher
  601 047D  01 0042     	LD	BC,U0AD7-U0A95
  602 0480  ED B0       	LDIR			; initialisieren
  603 0482  11 218D     	LD	DE,U21F3+2	; Treiber im RAM
  604 0485  21 BA02     	LD	HL,UBA00+2	; Treiber im IRM
  605 0488  CD 049E     	CALL	U04B4		; Treiber bereits im IRM?
  606 048B  28 0E       	JR	Z,BCINI1	; ja, fertig
  607 048D  EB          	EX	DE,HL
  608 048E  CD 049E     	CALL	U04B4		; Treiber noch im RAM verfuegbar?
  609 0491  20 08       	JR	NZ,BCINI1	; nein, nichts mehr da zum Kopieren
  610 0493  01 037C     	LD	BC,U256B-U21F3	; Laenge des V.24-Treibers
  611 0496  ED B0       	LDIR			; V.24-Treiber kopieren
  612 0498  CD BBF5     	CALL	UBBF5		; V.24-Modul initialisieren
  613 049B  C3 0772     BCINI1:	JP	IOFRET		; IRM OFF, RET
  614                   ;
  615                   ; Drucker(?)treiber pruefen:
  616                   ;
  617 049E  D5          U04B4:	PUSH	DE
  618 049F  56          	LD	D,(HL)
  619 04A0  2B          	DEC	HL
  620 04A1  5E          	LD	E,(HL)
  621 04A2  2B          	DEC	HL
  622 04A3  E5          	PUSH	HL		; steht ein CALL auf
  623 04A4  21 BAFE     	LD	HL,UBAFE	; UBAFE im Speicher?
  624 04A7  B7          	OR	A
  625 04A8  ED 52       	SBC	HL,DE
  626 04AA  E1          	POP	HL
  627 04AB  D1          	POP	DE
  628 04AC  C9          	RET
  629                   ;
  630                   ; eigene Routine fuer IO-ERROR (benutzt im Direktmode)
  631                   ;
  632 04AD  DB 88       U04C3:	IN	A,(PIOAD)
  633 04AF  CB 57       	BIT	2,A		; IRM ein?
  634 04B1  C4 F01B     	CALL	NZ,IRMOFF	; bei CAOS 3.1 erst noch den IRM ausschalten!
  635 04B4  C3 DC82     	JP	IOERR		; Sprung in BASIC-ROM
  636                   ;
  637                   ; Fehlerbehandlung im RUN-Mode, setzt nur CY-Flag bei Fehler
  638                   ;
  639 04B7  DB 88       U04C4:	IN	A,(PIOAD)
  640 04B9  CB 57       	BIT	2,A		; IRM ein?
  641 04BB  C4 F01B     	CALL	NZ,IRMOFF	; bei CAOS 3.1 erst noch den IRM ausschalten!
  642 04BE  37          	SCF			; Fehlerflag setzen
  643 04BF  E1          	POP	HL		; ERROR-Adresse vom Stack nehmen
  644 04C0  C9          	RET			; zurueck zu MBIN bzw. MBOUT
  645                   ;
  646                   ; Titelbild zeichnen
  647                   ;
  648 04C1  CD 05DC     TITEL:	CALL	CLS		; Bildschirm loeschen
  649 04C4  CD F018     	CALL	IRMON
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  10
BAC85   Z80

  650 04C7  3E 20       	LD	A,20H		; Vordergrundfarbe gruen
  651 04C9  32 B7D6     	LD	(FARB),A	; Grafikfarbe fuer Linie (Schallplatte)
  652 04CC  CD F01B     	CALL	IRMOFF
  653 04CF  AF          	XOR	A
  654 04D0  32 003D     	LD	(XPOS2+1),A
  655 04D3  32 0041     	LD	(XPOS1+1),A
  656 04D6  32 003F     	LD	(YPOS2+1),A
  657 04D9  32 0043     	LD	(YPOS1+1),A
  658 04DC  32 0044     	LD	(CN),A		; CN=0: Linie zeichnen (nicht loeschen)
  659                   ; Schallplatte zeichnen
  660 04DF  21 0A80     	LD	HL,U0AD7	; Daten fuer Titelbild
  661 04E2  06 2B       	LD	B,43		; 43 Linien
  662 04E4  C5          TTL1:	PUSH	BC
  663 04E5  E5          	PUSH	HL
  664 04E6  3E 28       	LD	A,28H
  665 04E8  96          	SUB	(HL)
  666 04E9  32 003C     	LD	(XPOS2),A	; X-Ende
  667 04EC  23          	INC	HL
  668 04ED  3E 20       	LD	A,20H
  669 04EF  96          	SUB	(HL)
  670 04F0  32 003E     	LD	(YPOS2),A	; Y-Ende
  671 04F3  23          	INC	HL
  672 04F4  3E 28       	LD	A,28H
  673 04F6  96          	SUB	(HL)
  674 04F7  32 0040     	LD	(XPOS1),A	; X-Anfang
  675 04FA  23          	INC	HL
  676 04FB  3E 28       	LD	A,28H
  677 04FD  96          	SUB	(HL)
  678 04FE  32 0042     	LD	(YPOS1),A	; Y-Anfang
  679 0501  CD 077C     	CALL	LINIE		; Linie zeichnen (1. Quadrant)
  680 0504  E1          	POP	HL
  681 0505  E5          	PUSH	HL
  682 0506  3E 27       	LD	A,27H
  683 0508  86          	ADD	(HL)
  684 0509  32 003C     	LD	(XPOS2),A	; X-Ende
  685 050C  23          	INC	HL
  686 050D  3E 20       	LD	A,20H
  687 050F  96          	SUB	(HL)
  688 0510  32 003E     	LD	(YPOS2),A	; Y-Ende
  689 0513  23          	INC	HL
  690 0514  3E 27       	LD	A,27H
  691 0516  86          	ADD	(HL)
  692 0517  32 0040     	LD	(XPOS1),A	; X-Anfang
  693 051A  23          	INC	HL
  694 051B  3E 28       	LD	A,28H
  695 051D  96          	SUB	(HL)
  696 051E  32 0042     	LD	(YPOS1),A	; Y-Anfang
  697 0521  CD 077C     	CALL	LINIE		; Linie zeichnen (2. Quadrant)
  698 0524  E1          	POP	HL
  699 0525  E5          	PUSH	HL
  700 0526  3E 28       	LD	A,28H
  701 0528  96          	SUB	(HL)
  702 0529  32 003C     	LD	(XPOS2),A	; X-Ende
  703 052C  23          	INC	HL
  704 052D  3E 1F       	LD	A,1FH
  705 052F  86          	ADD	(HL)
  706 0530  32 003E     	LD	(YPOS2),A	; Y-Ende
  707 0533  23          	INC	HL
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  11
BAC85   Z80

  708 0534  3E 28       	LD	A,28H
  709 0536  96          	SUB	(HL)
  710 0537  32 0040     	LD	(XPOS1),A	; X-Anfang
  711 053A  23          	INC	HL
  712 053B  3E 27       	LD	A,27H
  713 053D  86          	ADD	(HL)
  714 053E  32 0042     	LD	(YPOS1),A	; Y-Anfang
  715 0541  CD 077C     	CALL	LINIE		; Linie zeichnen (3. Quadrant)
  716 0544  E1          	POP	HL
  717 0545  3E 27       	LD	A,27H
  718 0547  86          	ADD	(HL)
  719 0548  32 003C     	LD	(XPOS2),A	; X-Ende
  720 054B  23          	INC	HL
  721 054C  3E 1F       	LD	A,1FH
  722 054E  86          	ADD	(HL)
  723 054F  32 003E     	LD	(YPOS2),A	; Y-Ende
  724 0552  23          	INC	HL
  725 0553  3E 27       	LD	A,27H
  726 0555  86          	ADD	(HL)
  727 0556  32 0040     	LD	(XPOS1),A	; X-Anfang
  728 0559  23          	INC	HL
  729 055A  3E 27       	LD	A,27H
  730 055C  86          	ADD	(HL)
  731 055D  32 0042     	LD	(YPOS1),A	; Y-Anfang
  732 0560  23          	INC	HL
  733 0561  E5          	PUSH	HL
  734 0562  CD 077C     	CALL	LINIE		; Linie zeichnen (4. Quadrant)
  735 0565  E1          	POP	HL
  736 0566  C1          	POP	BC
  737 0567  05          	DEC	B		; noch eine Linie zu zeichnen?
  738 0568  C2 04E4     	JP	NZ,TTL1		; ja, dann weiter
  739                   ;Linie zwischen Schallplatte und TAPE-Signal
  740 056B  3E 3E       	LD	A,3EH
  741 056D  32 003E     	LD	(YPOS2),A
  742 0570  C6 08       	ADD	8
  743 0572  32 0042     	LD	(YPOS1),A
  744 0575  3E 49       	LD	A,49H
  745 0577  32 003C     	LD	(XPOS2),A
  746 057A  3E 29       	LD	A,29H
  747 057C  32 0040     	LD	(XPOS1),A
  748 057F  E5          	PUSH	HL
  749 0580  CD 077C     	CALL	LINIE		; Linie von Schallplatte nach rechts
  750 0583  E1          	POP	HL
  751                   ;TAPE-Signal zeichnen
  752 0584  0E 05       	LD	C,5		; 5x das gleiche Muster
  753 0586  E5          TTL2:	PUSH	HL
  754 0587  06 0C       	LD	B,12		; 12 Linien
  755 0589  C5          TTL3:	PUSH	BC
  756 058A  E5          	PUSH	HL
  757 058B  5E          	LD	E,(HL)
  758 058C  16 00       	LD	D,0
  759 058E  CB 7B       	BIT	7,E
  760 0590  28 01       	JR	Z,TTL4
  761 0592  15          	DEC	D
  762 0593  23          TTL4:	INC	HL
  763 0594  4E          	LD	C,(HL)
  764 0595  2A 003C     	LD	HL,(XPOS2)
  765 0598  19          	ADD	HL,DE
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  12
BAC85   Z80

  766 0599  22 003C     	LD	(XPOS2),HL
  767 059C  3A 003E     	LD	A,(YPOS2)
  768 059F  91          	SUB	C
  769 05A0  32 003E     	LD	(YPOS2),A
  770 05A3  CD 077C     	CALL	LINIE		; Linie zeichnen
  771 05A6  E1          	POP	HL
  772 05A7  C1          	POP	BC
  773 05A8  23          	INC	HL
  774 05A9  23          	INC	HL
  775 05AA  10 DD       	DJNZ	TTL3
  776 05AC  EB          	EX	DE,HL
  777 05AD  E1          	POP	HL
  778 05AE  0D          	DEC	C
  779 05AF  20 D5       	JR	NZ,TTL2
  780                   ;Programmtitel anzeigen
  781 05B1  EB          	EX	DE,HL
  782 05B2  06 03       	LD	B,3		; 3 Zeilen
  783 05B4  5E          TTL5:	LD	E,(HL)
  784 05B5  23          	INC	HL
  785 05B6  56          	LD	D,(HL)		; Cursor-Position
  786 05B7  23          	INC	HL
  787 05B8  EB          	EX	DE,HL
  788 05B9  CD 1177     	CALL	U05E1		; Cursor auf HL setzen
  789 05BC  EB          	EX	DE,HL
  790 05BD  CD C5F1     	CALL	TEXTOE		; Textausgabe (im BASIC-ROM)
  791 05C0  23          	INC	HL
  792 05C1  10 F1       	DJNZ	TTL5
  793 05C3  C9          	RET
  794                   ;
  795                   ; Fenster auf volle Groesse einstellen
  796                   ;
  797 05C4  CD F018     U05C5:	CALL	IRMON
  798 05C7  21 0000     	LD	HL,0		; Fenster volle Groesse
  799 05CA  22 B79C     	LD	(WINON),HL
  800 05CD  22 B7A0     	LD	(CURSO),HL
  801 05D0  21 2028     	LD	HL,2028H
  802 05D3  22 B79E     	LD	(WINLG),HL
  803 05D6  C3 0772     	JP	IOFRET		; IRM OFF, RET
  804                   ;
  805                   ; GOSUB 100	Initialisieren des Textmodus, Loeschen des Bildschirms
  806                   ;
  807 05D9  CD 1F13     GO100:	CALL	U1ECA		; Farbe nach Variable CC einstellen
  808                   ;
  809                   ; Bildschirm loeschen
  810                   ;
  811         0000      IF KC3	; KC85/3-spezifisches schnelles Bildschirmloeschen
  829                   ELSE	;Beim KC85/4 ist das normale Bildschirm loeschen schnell genug
  830 05DC  3E 0C       CLS:	LD	A,0CH		; CLS
  831 05DE  1E 24       	LD	E,OCHR
  832 05E0  C3 F015     	JP	PV5		; CAOS-UP aufrufen, wenn IRM aus ist
  833                   ENDIF
  834                   ;
  835                   ; GOSUB 150	Auffaelliges Anzeigen eines Strings auf dem Bildschirm
  836                   ;		(links und rechts drei Leerzeichen)
  837                   ;		Uebergabe des Strings in der Variablen SR$
  838                   ;
  839 05E3  CD F018     GO150:	CALL	IRMON
  840 05E6  3A B7A3     	LD	A,(COLOR)	; aktuelle Farbe
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  13
BAC85   Z80

  841 05E9  32 B796     	LD	(NUMNX),A	; hier zwischenspeichern
  842 05EC  CD F01B     	CALL	IRMOFF
  843 05EF  CD 1F13     	CALL	U1ECA		; Farbe nach Variable CC einstellen
  844 05F2  CD 165A     	CALL	U1691		; Zeichenkette SR$ holen
  845         0000      IF KC3
  911                   ELSE
  912                   ;
  913                   ; Zeichenkette hervorgehoben anzeigen:
  914                   ; (2 Leerzeichen davor und dahinter, Zeichenkette selbst + je ein Leerzeichen
  915                   ; davor und dahinter invers)
  916                   ; PE:	DE	Zeichenkette
  917                   ;	B	Anzahl Zeichen
  918                   ;
  919 05F5  21 0A38     	LD	HL,U0A8F	; 2 Leerzeichen, invers ein, 1 Leerzeichen
  920 05F8  CD 0614     	CALL	U0608		; 5 Zeichen anzeigen
  921 05FB  CD 060F     	CALL	U0603		; Zeichenkette selbst und invers aus
  922 05FE  CD F018     	CALL	IRMON
  923 0601  3A B796     	LD	A,(NUMNX)	; gespeicherte Farbinformation
  924 0604  32 B7A3     	LD	(COLOR),A	; wieder regenerieren
  925 0607  C3 0772     	JP	IOFRET
  926                   	;
  927 060A  1A          U05FE:	LD	A,(DE)		; Zeichen aus Zeichenkette
  928 060B  13          	INC	DE
  929 060C  CD DDD5     	CALL	CO		; anzeigen
  930 060F  10 F9       U0603:	DJNZ	U05FE
  931 0611  21 0A39     	LD	HL,U0A90	; 1 Leerzeichen, invers aus, 2 Leerzeichen
  932 0614  0E 05       U0608:	LD	C,5
  933 0616  7E          U060A:	LD	A,(HL)
  934 0617  23          	INC	HL
  935 0618  CD DDD5     	CALL	CO
  936 061B  0D          	DEC	C
  937 061C  20 F8       	JR	NZ,U060A
  938 061E  C9          	RET
  939                   ENDIF
  940                   ;
  941                   ; Taste gedrueckt?
  942                   ;
  943 061F  AF          U0613:	XOR	A
  944 0620  DD CB 08 46 	BIT	0,(IX+8)	; Taste gedrueckt?
  945 0624  C8          	RET	Z		; nein
  946 0625  DD CB 08 86 	RES	0,(IX+8)	; quittieren
  947 0629  DD 7E 0D    	LD	A,(IX+13)	; Tastencode abholen
  948 062C  B7          	OR	A
  949 062D  C9          	RET
  950                   ;
  951                   ; Taste quittieren
  952                   ; PA:	Z=0	Taste gedrueckt
  953                   ;
  954 062E  DD CB 08 46 U0622:	BIT	0,(IX+8)	; Taste gedrueckt?
  955 0632  C8          	RET	Z		; nein
  956 0633  DD CB 08 86 	RES	0,(IX+8)	; quittieren
  957 0637  C9          	RET
  958                   ;
  959                   ; Tastaturabfrage, Eingabe ein Zeichen
  960                   ; (Aufruf mit IRM ON oder OFF moeglich)
  961                   ;	
  962 0638  DB 88       U062C:	IN	A,(PIOAD)
  963 063A  CB 57       	BIT	2,A		; IRM ein?
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  14
BAC85   Z80

  964 063C  20 09       	JR	NZ,U063B
  965 063E  C5          	PUSH	BC
  966 063F  CD F018     	CALL	IRMON		; einschalten
  967 0642  E5          	PUSH	HL
  968 0643  21 1187     	LD	HL,U05F1	; und nach RET wieder ausschalten
  969 0646  E3          	EX	(SP),HL
  970 0647  E5          U063B:	PUSH	HL
  971 0648  CD F003     	CALL	PV1
  972 064B  04          	DB	KBD		; Eingabe ein Zeichen
  973 064C  E1          	POP	HL
  974 064D  C9          	RET
  975                   ;
  976                   ; GOSUB 280	Aus- bzw. Einschalten der STOP/BREAK-Taste
  977                   ;		Uebergabe des gewuenschten Status in der Variablen FR (FR=0 bzw. FR=1)
  978                   ;
  979                   ; 11.11.2023 Funktion entfernt
  980                   ; 02.01.2024: wieder aktiviert im KTAB2 im Programmcode
  981                   ;
  982 064E  01 4652     GO280:	LD	BC,'FR'
  983 0651  CD CF48     	CALL	DIM7		; Adresse der Variable FR nach DE holen
  984 0654  13          	INC	DE
  985 0655  13          	INC	DE
  986 0656  13          	INC	DE
  987 0657  1A          	LD	A,(DE)		; Wert holen	A=81H bei FR=1
  988 0658  B7          	OR	A		;		A=0   bei FR=0
  989                   ;
  990                   ; BRK/STOP deaktivieren bzw. aktivieren durch Modifikation der KTAB
  991                   ; PE:	Z=1	Tasten aktivieren
  992                   ;	Z=0	Tasten deaktivieren
  993                   ;
  994 0659  21 1B19     U0642:	LD	HL,KTAB2	; modifizierte KTAB in BASICODE
  995 065C  20 03       	JR	NZ,U064E	; Tasten deaktivieren
  996 065E  2A 005E     U0643:	LD	HL,(U004E)	; Original-KTAB von CAOS
  997 0661  DD 75 0E    U064E:	LD	(IX+14),L
  998 0664  DD 74 0F    	LD	(IX+15),H
  999 0667  C9          	RET
 1000                   ;
 1001                   ; Zeichen aus VRAM lesen (fuer GOSUB 220)
 1002                   ; PE:	H=Zeile, L=Spalte
 1003                   ; PA:	A=Zeichencode
 1004                   ;
 1005 0668  CD F018     U0654:	CALL	IRMON
 1006 066B  E5          	PUSH	HL
 1007 066C  D5          	PUSH	DE
 1008 066D  AF          	XOR	A
 1009 066E  E5          	PUSH	HL
 1010 066F  6C          	LD	L,H		; L=Zeile
 1011 0670  67          	LD	H,A		; HL=Zeile
 1012 0671  5D          	LD	E,L
 1013 0672  57          	LD	D,A		; DE=Zeile
 1014 0673  29          	ADD	HL,HL	; *2
 1015 0674  29          	ADD	HL,HL	; *4
 1016 0675  19          	ADD	HL,DE	; *5
 1017 0676  29          	ADD	HL,HL	; *10
 1018 0677  29          	ADD	HL,HL	; *20
 1019 0678  29          	ADD	HL,HL	; *40
 1020 0679  D1          	POP	DE		; E=Spalte
 1021 067A  57          	LD	D,A		; DE=Spalte
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  15
BAC85   Z80

 1022 067B  19          	ADD	HL,DE		; 40*Zeile + Spalte
 1023         0000      IF KC3
 1025                   ELSE
 1026 067C  ED 5B B7CB  	LD	DE,(VRAM)	; VRAM aktuelles Bild (KC85/4)
 1027                   ENDIF
 1028 0680  19          	ADD	HL,DE		; VRAM-Adresse berechnen
 1029 0681  7E          	LD	A,(HL)		; Inhalt von VRAM lesen
 1030 0682  B7          	OR	A		; leer?
 1031 0683  20 02       	JR	NZ,U0672
 1032 0685  3E 20       	LD	A,' '		; 20H statt 00H uebergeben
 1033 0687  D1          U0672:	POP	DE
 1034 0688  E1          	POP	HL
 1035 0689  C3 0772     	JP	IOFRET		; IRM OFF, RET
 1036                   ;
 1037                   ; Tonausgabe fuer GOSUB 400
 1038                   ;
 1039 068C  5F          U0677:	LD	E,A		; Tonhoehe 0..127
 1040 068D  79          	LD	A,C		; Lautstaerke 0..15
 1041 068E  E6 0F       	AND	0FH		; Wertebereich 0..15
 1042 0690  20 04       	JR	NZ,U0681	; Lautstaerke nicht 0
 1043 0692  3E 03       	LD	A,3		; CTC ruecksetzen
 1044 0694  18 1C       	JR	U069D
 1045                   	;
 1046 0696  7B          U0681:	LD	A,E		; Tonhoehe
 1047 0697  FE 2D       	CP	45
 1048 0699  38 06       	JR	C,U068C		; kleiner als 45
 1049 069B  D6 2D       	SUB	45
 1050 069D  06 07       	LD	B,7		; Vorteiler 16
 1051 069F  18 04       	JR	U0690
 1052                   	;
 1053 06A1  06 27       U068C:	LD	B,27H		; Vorteiler 256
 1054 06A3  C6 03       	ADD	3
 1055 06A5  16 00       U0690:	LD	D,0
 1056 06A7  5F          	LD	E,A		; DE=Tonhoehe
 1057 06A8  21 09E5     	LD	HL,U0A3C	; Tabelle der Tonwerte
 1058 06AB  19          	ADD	HL,DE
 1059 06AC  7E          	LD	A,(HL)		; Zeitkonstante lesen
 1060 06AD  5F          	LD	E,A
 1061 06AE  78          	LD	A,B		; Steuerwort mit VT=16 oder VT=256
 1062 06AF  D3 8D       	OUT	(CTC1),A
 1063 06B1  7B          	LD	A,E		; Zeitkonstante (Tonhoehe)
 1064 06B2  D3 8D       U069D:	OUT	(CTC1),A
 1065 06B4  3E A7       	LD	A,0A7H		; EI, Zeitgeber, VT=256, ZK folgt
 1066 06B6  D3 8E       	OUT	(CTC2),A	; Steuerwort fuer Tondauer
 1067 06B8  3E A5       	LD	A,165
 1068 06BA  D3 8E       	OUT	(CTC2),A	; Zeitkonstante
 1069 06BC  1E 0F       	LD	E,0FH
 1070 06BE  79          	LD	A,C		; Lautstaerke
 1071 06BF  AB          	XOR	E		; negieren
 1072 06C0  A3          	AND	E		; maskieren 0..15
 1073 06C1  4F          	LD	C,A
 1074 06C2  3C          	INC	A
 1075 06C3  21 0BB8     	LD	HL,0BB8H
 1076 06C6  5D          U06B1:	LD	E,L
 1077 06C7  54          	LD	D,H
 1078 06C8  06 05       	LD	B,5		; 5x verschieben
 1079 06CA  CB 3A       U06B5:	SRL	D
 1080 06CC  CB 1B       	RR	E
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  16
BAC85   Z80

 1081 06CE  10 FA       	DJNZ	U06B5
 1082 06D0  19          	ADD	HL,DE
 1083 06D1  3D          	DEC	A
 1084 06D2  20 F2       	JR	NZ,U06B1
 1085 06D4  EB          	EX	DE,HL
 1086 06D5  D5          	PUSH	DE
 1087 06D6  E1          U06C1:	POP	HL
 1088 06D7  79          	LD	A,C
 1089 06D8  87          	ADD	A
 1090 06D9  06 61       	LD	B,61H		; Blinken aus, RAM8 ein
 1091 06DB  B0          	OR	B		; mit Lautstaerke kombinieren
 1092 06DC  D3 89       	OUT	(PIOBD),A	; Lautstaerke einstellen
 1093 06DE  5D          	LD	E,L
 1094 06DF  54          	LD	D,H
 1095 06E0  06 05       	LD	B,5
 1096 06E2  CB 3A       U06CD:	SRL	D
 1097 06E4  CB 1B       	RR	E
 1098 06E6  10 FA       	DJNZ	U06CD
 1099 06E8  19          	ADD	HL,DE
 1100 06E9  EB          	EX	DE,HL
 1101 06EA  D5          	PUSH	DE
 1102 06EB  79          	LD	A,C
 1103 06EC  EE 0F       	XOR	0FH
 1104 06EE  28 01       	JR	Z,U06DC
 1105 06F0  0C          	INC	C
 1106 06F1  2A 005A     U06DC:	LD	HL,(U004A)
 1107 06F4  2B          	DEC	HL
 1108 06F5  CB 7C       	BIT	7,H
 1109 06F7  20 07       	JR	NZ,U06EB
 1110 06F9  1B          	DEC	DE
 1111 06FA  7A          	LD	A,D
 1112 06FB  B3          	OR	E
 1113 06FC  28 D8       	JR	Z,U06C1
 1114 06FE  18 F1       	JR	U06DC
 1115                   	;
 1116 0700  E1          U06EB:	POP	HL
 1117 0701  3E 7F       	LD	A,7FH
 1118 0703  D3 89       	OUT	(PIOBD),A
 1119 0705  C9          	RET
 1120                   ;
 1121                   ; GOSUB 250	Ausgabe eines einfachen kurzen Tons ("Beep")
 1122                   ;
 1123 0706  0E 00       GO250:	LD	C,0
 1124 0708  3E 61       	LD	A,61H		; Blinken aus, RAM8 ein, volle Lautstaerke
 1125 070A  D3 89       	OUT	(PIOBD),A
 1126 070C  3E 05       U06F7:	LD	A,5		; Zeitkonstante folgt
 1127 070E  D3 8C       	OUT	(CTC0),A	; Steuerwort
 1128 0710  79          	LD	A,C		; Zeitkonstante (Tonhoehe 1)
 1129 0711  D3 8C       	OUT	(CTC0),A
 1130 0713  06 18       	LD	B,24
 1131 0715  10 FE       U0700:	DJNZ	U0700		; kurz warten
 1132 0717  0D          	DEC	C
 1133 0718  20 F2       	JR	NZ,U06F7
 1134 071A  0C          	INC	C
 1135 071B  3E 05       U0706:	LD	A,5
 1136 071D  D3 8C       	OUT	(CTC0),A
 1137 071F  79          	LD	A,C
 1138 0720  D3 8C       	OUT	(CTC0),A
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  17
BAC85   Z80

 1139 0722  06 30       	LD	B,48
 1140 0724  10 FE       U070F:	DJNZ	U070F		; kurz warten
 1141 0726  0C          	INC	C
 1142 0727  20 F2       	JR	NZ,U0706
 1143 0729  3E 7F       	LD	A,7FH		; Blinken aus, RAM8 ein, Lautstaerke=0
 1144 072B  D3 89       	OUT	(PIOBD),A
 1145 072D  3E 03       	LD	A,3
 1146 072F  D3 8C       	OUT	(CTC0),A	; CTC 1 (Tonhoehe) stoppen
 1147 0731  C9          	RET
 1148                   ;
 1149                   ; Zeichen zu Drucker ausgeben
 1150                   ;
 1151 0732  D5          PRINT:	PUSH	DE
 1152 0733  1E 02       	LD	E,UOT1
 1153 0735  CD F015     	CALL	PV5		; CAOS-UP aufrufen, wenn IRM aus ist
 1154 0738  D1          	POP	DE
 1155 0739  C9          	RET
 1156                   ;
 1157                   ; GOSUB 620	Setzen eines Punktes
 1158                   ;		Uebergabe der Position in den Variablen HO und VE
 1159                   ;		Uebergabe der Farbe in der Variablen CN
 1160                   ;
 1161 073A  CD 1F13     GO620:	CALL	U1ECA		; Farbe nach Variable CC einstellen
 1162 073D  CD 15DA     	CALL	U1607		; Werte der Variablen HO, VE und CN holen
 1163 0740  CD F018     	CALL	IRMON
 1164 0743  2A 003C     	LD	HL,(XPOS2)	; X-Position
 1165 0746  22 0040     	LD	(XPOS1),HL
 1166 0749  22 B7D3     	LD	(HOR),HL
 1167 074C  2A 003E     	LD	HL,(YPOS2)	; Y-Position
 1168 074F  11 0008     	LD	DE,8
 1169 0752  19          	ADD	HL,DE
 1170 0753  22 0042     	LD	(YPOS1),HL
 1171 0756  24          	INC	H
 1172 0757  25          	DEC	H
 1173 0758  20 18       	JR	NZ,IOFRET	; IRM OFF, RET
 1174 075A  7D          	LD	A,L
 1175 075B  2F          	CPL
 1176 075C  32 B7D5     	LD	(VERT),A
 1177 075F  1E 30       	LD	E,PUSE		; 30H = PUSE (Punkt setzen/loeschen)
 1178                   ; 19.11.2023:
 1179                   ; Grafikfarbe wird ausschliesslich ueber CAOS-Arbeitszelle FARB ermittelt,
 1180                   ; keine Modifikation des Programmcodes mehr erforderlich
 1181 0761  3A B7D6     GRAF1:	LD	A,(FARB)	; aktuelle Grafikfarbe
 1182 0764  E6 78       	AND	078H		; nur die Farb-Bits (ohne Blinken)
 1183 0766  57          	LD	D,A
 1184 0767  3A 0044     	LD	A,(CN)		; 0=zeichnen oder 1=loeschen aus CN
 1185 076A  87          	ADD	A		; 0=zeichnen oder 2=loeschen
 1186         0000      IF KC3
 1190                   ENDIF
 1191 076B  B2          	OR	D		; in Grafikfarbe einbauen
 1192 076C  32 B7D6     	LD	(FARB),A	; Grafikfarbe
 1193 076F  CD F009     	CALL	PV3		; PUSE oder LINE (UP-Nummer in Register E)
 1194 0772  CD F01B     IOFRET:	CALL	IRMOFF
 1195 0775  C9          	RET
 1196                   ;
 1197                   ; GOSUB 630	Zeichnen einer Linie ausgehend von der aktuellen Grafikposition
 1198                   ;		Uebergabe des Endpunktes in den Variablen HO und VE
 1199                   ;		Uebergabe der Farbe in der Variablen CN (CN=1 Loeschen, CN=0 zeichnen)
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  18
BAC85   Z80

 1200                   ;		Festlegen der Grafikposition gegebenenfalls vorher durch das
 1201                   ;		Setzen eines Punktes
 1202                   ;
 1203 0776  CD 1F13     GO630:	CALL	U1ECA		; Farbe nach Variable CC einstellen
 1204 0779  CD 15DA     	CALL	U1607		; Werte der Variablen HO, VE und CN holen
 1205                   ;
 1206                   ; Linie zeichnen, hier Einsprung fuer Titelbild
 1207                   ;
 1208 077C  CD F018     LINIE:	CALL	IRMON
 1209 077F  2A 0040     	LD	HL,(XPOS1)	; X-Anfang (0=links)
 1210 0782  22 B782     	LD	(ARG1),HL	; => X-Koordinate Anfangspunkt
 1211 0785  21 00FF     	LD	HL,0FFH
 1212 0788  ED 5B 0042  	LD	DE,(YPOS1)	; Y-Anfang (0=oben!)
 1213 078C  B7          	OR	A
 1214 078D  ED 52       	SBC	HL,DE		; umrechnen fuer KC-Bildschirm (0=unten!)
 1215 078F  22 B784     	LD	(ARG2),HL	; Y-Koordinate Anfangspunkt
 1216 0792  2A 003C     	LD	HL,(XPOS2)	; X-Ende
 1217 0795  22 0040     	LD	(XPOS1),HL	; als neue X-Position eintragen
 1218 0798  22 B786     	LD	(ARG3),HL	; X-Koordinate Endpunkt
 1219 079B  2A 003E     	LD	HL,(YPOS2)	; Y-Ende (0=oben!)
 1220 079E  11 0008     	LD	DE,8		; +8
 1221 07A1  19          	ADD	HL,DE
 1222 07A2  22 0042     	LD	(YPOS1),HL	; als neue Y-Position eintragen
 1223 07A5  11 00FF     	LD	DE,0FFH
 1224 07A8  EB          	EX	DE,HL
 1225 07A9  ED 52       	SBC	HL,DE		; umrechnen fuer KC-Bildschirm (0=unten!)
 1226 07AB  22 B788     	LD	(ARG4),HL	; Y-Koordinate Endpunkt
 1227         0000      IF KC3
 1444                   ELSE
 1445 07AE  1E 3E       	LD	E,LINE		; UP-Nummer fuer Linie zeichnen/loeschen
 1446 07B0  18 AF       	JR	GRAF1		; weiter wie im UP Punkt setzen/loeschen
 1447                   ENDIF
 1448                   ;
 1449                   ; GOSUB 650	Ausgabe einer Zeichenkette im Grafikmodus
 1450                   ;		Uebergabe der Position in den Variablen HO und VE
 1451                   ;		Uebergabe des Strings in der Variablen SR$
 1452                   ;
 1453 07B2  CD 1F13     GO650:	CALL	U1ECA		; Farbe nach Variable CC einstellen
 1454 07B5  CD 15DA     	CALL	U1607		; Werte der Variablen HO, VE und CN holen
 1455 07B8  CD 165A     	CALL	U1691		; Zeichenkette SR$ holen
 1456 07BB  05          	DEC	B		; Laenge der Zeichenkette
 1457 07BC  C8          	RET	Z		; Laenge = 0
 1458 07BD  3A 003F     	LD	A,(YPOS2+1)	; High(YPOS2)
 1459 07C0  B7          	OR	A
 1460 07C1  C0          	RET	NZ		; ausserhalb
 1461 07C2  78          	LD	A,B		; B = Laenge der Zeichenkette
 1462 07C3  CD F018     	CALL	IRMON		; Routine veraendert BC-Register!
 1463 07C6  47          	LD	B,A
 1464 07C7  2A 003C     	LD	HL,(XPOS2)	; X-Position im Grafikmodus
 1465 07CA  3E 07       	LD	A,7
 1466 07CC  A5          	AND	L
 1467 07CD  3C          	INC	A
 1468 07CE  4F          	LD	C,A		; C=Pixelverschiebung (1-8)
 1469 07CF  CB 3C       	SRL	H
 1470 07D1  CB 1D       	RR	L		; /8
 1471 07D3  CB 3D       	SRL	L
 1472 07D5  CB 3D       	SRL	L		; L=Horizontalposition (0-27H)
 1473 07D7  3A 003E     	LD	A,(YPOS2)	; Y-Position im Grafikmodus
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  19
BAC85   Z80

 1474 07DA  C6 08       	ADD	8		; Zeichenhoehe addieren
 1475 07DC  67          	LD	H,A		; H=Vertikalposition (0-0FFH)
 1476         0000      IF KC3
 1478                   ELSE
 1479 07DD  CD F003     	CALL	PV1
 1480 07E0  34          	DB	PADR		; HL=IRM-Adresse
 1481                   ENDIF
 1482 07E1  C5          U07C9:	PUSH	BC		; B=Laenge Zeichenkette, C=Pixelverschiebung
 1483 07E2  D5          	PUSH	DE		; Zeiger auf Zeichenkette
 1484 07E3  E5          	PUSH	HL		; IRM-Adresse
 1485 07E4  F3          	DI
 1486 07E5  DB 88       	IN	A,(PIOAD)
 1487 07E7  47          	LD	B,A
 1488 07E8  CB 97       	RES	2,A		; IRM aus
 1489 07EA  D3 88       	OUT	(PIOAD),A
 1490 07EC  1A          	LD	A,(DE)		; Zeichencode holen
 1491 07ED  5F          	LD	E,A		; Zeichencode
 1492 07EE  78          	LD	A,B
 1493 07EF  D3 88       	OUT	(PIOAD),A	; IRM wieder ein
 1494 07F1  7B          	LD	A,E		; Zeichencode
 1495 07F2  FB          	EI
 1496 07F3  FE 20       	CP	20H		; Steuerzeichen?
 1497 07F5  38 4C       	JR	C,U0816		; ja, uebergehen
 1498 07F7  41          	LD	B,C		; Pixelverschiebung
 1499 07F8  0E 08       	LD	C,8		; 8 Byte verarbeiten
 1500 07FA  CD 09C4     	CALL	U0A1B		; Zeichenbildtabelle nach HL holen
 1501 07FD  5E          U07E5:	LD	E,(HL)		; Pixelmuster(1) aus Zeichentabelle lesen
 1502 07FE  AF          	XOR	A		; Pixelmuster(2) zunaechst 0
 1503 07FF  50          	LD	D,B		; Anzahl fuer Pixelverschiebung
 1504 0800  18 03       	JR	U07ED
 1505                   	;
 1506 0802  CB 3B       U07EA:	SRL	E		; Pixelmuster(1) passend verschieben
 1507 0804  1F          	RRA			; Pixelmuster(2) erzeugen
 1508 0805  10 FB       U07ED:	DJNZ	U07EA
 1509 0807  42          	LD	B,D		; Anzahl fuer Pixelverschiebung
 1510 0808  E3          	EX	(SP),HL		; HL = IRM-Adresse, Zeichenbildtabelle auf Stack
 1511 0809  57          	LD	D,A		; D=Pixelmuster(2)
 1512 080A  3A 0044     	LD	A,(CN)		; 0=zeichnen oder 1=loeschen
 1513 080D  B7          	OR	A		; zeichnen oder loeschen?
 1514 080E  28 13       	JR	Z,U0802		; -> zeichnen
 1515                   
 1516         0000      IF KC3
 1579                   ELSE
 1580                   
 1581                   ;Text loeschen
 1582 0810  7B          	LD	A,E		; E=Pixelmuster(1)
 1583 0811  B7          	OR	A
 1584 0812  28 06       	JR	Z,L01		; leer
 1585 0814  2F          	CPL			; Pixelmuster invertieren
 1586 0815  A6          	AND	(HL)		; loeschen
 1587 0816  77          	LD	(HL),A		; in Pixelebene eintragen
 1588 0817  CD 1F57     	CALL	U1F1A		; Farbebene schreiben
 1589 081A  24          L01:	INC	H		; naechste BS-Spalte
 1590 081B  7A          	LD	A,D		; Pixelmuster(2)
 1591 081C  B7          	OR	A
 1592 081D  28 1D       	JR	Z,U080F		; leer
 1593 081F  2F          	CPL			; Pixelmuster invertieren
 1594 0820  A6          	AND	(HL)		; loeschen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  20
BAC85   Z80

 1595 0821  18 0F       	JR	U0808		; Pixelebene zurueck schreiben
 1596                   
 1597                   ;Text zeichnen
 1598 0823  7B          U0802:	LD	A,E		; Pixelmuster(1)
 1599 0824  B7          	OR	A
 1600 0825  28 05       	JR	Z,T01		; leer
 1601 0827  B6          	OR	(HL)		; einbauen in vorhandenen Inhalt
 1602 0828  77          	LD	(HL),A		; in Pixelebene eintragen
 1603 0829  CD 1F57     	CALL	U1F1A		; Farbebene schreiben
 1604 082C  24          T01:	INC	H		; Position rechts daneben
 1605 082D  7A          	LD	A,D		; Pixelmuster(2)
 1606 082E  B7          	OR	A
 1607 082F  28 0B       	JR	Z,U080F		; leer
 1608 0831  B6          	OR	(HL)		; einbauen in vorhandenen Inhalt
 1609 0832  5F          U0808:	LD	E,A
 1610 0833  7C          	LD	A,H
 1611 0834  FE A8       	CP	0A8H		; raus aus IRM?
 1612 0836  30 04       	JR	NC,U080F	; ja
 1613 0838  73          	LD	(HL),E		; in Pixelebene schreiben
 1614 0839  CD 1F57     	CALL	U1F1A		; Farbebene schreiben
 1615 083C  25          U080F:	DEC	H		; zurueck auf erste Spalte
 1616 083D  2C          	INC	L		; naechste Pixelzeile
 1617 083E  E3          	EX	(SP),HL		; HL=Zeichenbildtabelle
 1618 083F  23          	INC	HL		; naechstes Byte
 1619 0840  0D          	DEC	C
 1620 0841  20 BA       	JR	NZ,U07E5	; bis alle 8 Byte verarbeitet sind
 1621 0843  E1          U0816:	POP	HL		; IRM-Adresse
 1622 0844  D1          	POP	DE		; Zeiger auf Zeichenkette
 1623 0845  C1          	POP	BC		; B=Laenge Zeichenkette, C=Pixelverschiebung
 1624 0846  13          	INC	DE		; naechstes Zeichen aus Zeichenkette
 1625 0847  7D          	LD	A,L
 1626 0848  D6 08       	SUB	8		; 8 Pixelzeilen nach oben
 1627 084A  6F          	LD	L,A
 1628 084B  24          	INC	H		; eine Spalte nach rechts
 1629 084C  7C          	LD	A,H
 1630 084D  FE A8       	CP	0A8H		; raus aus IRM?
 1631 084F  30 02       	JR	NC,U0826	; ja
 1632 0851  10 8E       	DJNZ	U07C9		; bis Zeichenkette abgearbeitet ist
 1633 0853  C3 0772     U0826:	JP	IOFRET		; IRM OFF, RET
 1634                   
 1635                   ENDIF	; KC3
 1636                   
 1637         0001      if DEV
 1638                   ;
 1639                   ; DEVICE einstellen
 1640                   ; PE:	C	Kanal-Nr. (2=TAPE, 4=DISK, 6=USB)
 1641                   ; PA:	CY=1	Treiber nicht vorhanden
 1642                   ;
 1643 0856  54 41 50 45 DEVTAB:	DB	'TAPE'
 1644 085A  44 49 53 4B 	DB	'DISK'
 1645 085E  55 53 42 00 	DB	'USB',0
 1646                   	;
 1647 0862  3A EDFF     DEVICE:	LD	A,(0EDFFH)	; CAOS-Version beim KC85/4
 1648 0865  FE 47       	CP	47H		; CAOS 4.7 oder hoeher?
 1649 0867  30 04       	JR	NC,DR1		; ja, DEVICE einstellen
 1650 0869  3E 02       	LD	A,2
 1651 086B  B9          	CP	C		; DEVICE TAPE?
 1652 086C  C9          	RET			; CY=1, wenn anderes DEVICE
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  21
BAC85   Z80

 1653                   	;
 1654 086D  79          DR1:	LD	A,C		; Kanal-Nr.
 1655 086E  CD F018     	CALL	IRMON		; jetzt IRM erst einmal ein wegen PV1
 1656 0871  21 0772     	LD	HL,IOFRET	; nach DEVICE-Wahl IRM wieder aus
 1657 0874  E5          	PUSH	HL
 1658 0875  21 0852     	LD	HL,DEVTAB-4	; Tabelle der Treibernamen
 1659 0878  87          	ADD	A,A		; Kanal-Nr. x2
 1660 0879  4F          	LD	C,A
 1661 087A  06 00       	LD	B,0		; BC=4, 8, 12
 1662 087C  09          	ADD	HL,BC
 1663 087D  48          	LD	C,B		; mit DEVICE 0 beginnen
 1664 087E  E5          DR2:	PUSH	HL		; gesuchter Treiber
 1665 087F  C5          	PUSH	BC
 1666 0880  79          	LD	A,C		; Device-Nr.
 1667 0881  CD F003     	CALL	PV1
 1668 0884  49          	DB	49H		; DEVICE einstellen
 1669 0885  C1          	POP	BC
 1670 0886  D1          	POP	DE
 1671 0887  38 17       	JR	C,DR6		; Treiber nicht vorhanden
 1672 0889  06 04       	LD	B,4		; 4 Zeichen pruefen
 1673 088B  D5          	PUSH	DE
 1674 088C  1A          DR3:	LD	A,(DE)		; gesuchte Zeichenkette
 1675 088D  B7          	OR	A		; 0?
 1676 088E  13          	INC	DE
 1677 088F  28 01       	JR	Z,DR4		; ja, 4. Zeichen nicht testen
 1678 0891  BE          	CP	(HL)
 1679 0892  23          DR4:	INC	HL
 1680 0893  20 04       	JR	NZ,DR5		; nicht der gesuchte Treiber
 1681 0895  10 F5       	DJNZ	DR3
 1682 0897  D1          	POP	DE		; Treiber gefunden
 1683 0898  C9          	RET
 1684                   ;
 1685                   ; nicht der gesuchte Treiber:
 1686 0899  E1          DR5:	POP	HL		; gesuchter Treiber
 1687 089A  0C          	INC	C		; naechste Treiber-Nr. versuchen
 1688 089B  79          	LD	A,C
 1689 089C  FE 08       	CP	8		; 8 Treiber ausgesucht?
 1690 089E  20 DE       	JR	NZ,DR2		; nein
 1691                   ; Device nicht gefunden:
 1692 08A0  AF          DR6:	XOR	A		; DEVICE 0 = TAPE
 1693 08A1  CD F003     	CALL	PV1
 1694 08A4  49          	DB	49H		; auf TAPE zurueck stellen
 1695 08A5  37          	SCF			; und Fehler melden
 1696 08A6  C9          	RET
 1697                   endif
 1698                   ;
 1699                   ; Datei im KC-Format zum Lesen oeffnen
 1700                   ; NF=2
 1701                   ; PA:	CY=1	Fehler
 1702                   ;
 1703 08A7  21 0060     U0829:	LD	HL,FNAME	; Dateiname
 1704 08AA  16 08       	LD	D,8		; Bit3(D)=1 fuer Open
 1705 08AC  DD CB 07 EE 	SET	5,(IX+7)	; Blocknummern unterdruecken
 1706 08B0  CD 0900     	CALL	U0895		; ein Datenbyte einlesen (Open)
 1707 08B3  32 0057     	LD	(U0047),A	; Datenbyte eintragen
 1708 08B6  D0          	RET	NC		; OK
 1709                   ; Lesefehler oder Dateiname falsch bei TAPE
 1710 08B7  F5          	PUSH	AF
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  22
BAC85   Z80

 1711 08B8  11 4037     U082E:	LD	DE,4000H+MBIN	; Bit6(D)=1 fuer Close
 1712 08BB  CD F015     	CALL	PV5		; Bandeingabe stoppen
 1713 08BE  F1          U082F:	POP	AF
 1714 08BF  37          	SCF			; Fehler-Flag
 1715 08C0  C9          	RET
 1716                   ;
 1717                   ; Datei im KC-Format zum Lesen schliessen
 1718                   ; NF=2
 1719                   ; PA:	CY=1	Fehler
 1720                   ;
 1721 08C1  16 40       U0864:	LD	D,40H		; Bit6=1 fuer Close
 1722 08C3  21          	DB	21H	; LD HL,nn
 1723                   
 1724                   ; Datei im KC-Format lesen
 1725                   ; NF=2
 1726                   ; PA:	A	Datenbyte
 1727                   ;	CY=1	Fehler
 1728                   ;
 1729 08C4  16 00       U0869:	LD	D,0		; kein Open, kein Close
 1730 08C6  3A 0057     	LD	A,(U0047)	; letztes Datenbyte
 1731 08C9  FE 03       	CP	3		; war das die Ende-Kennung?
 1732 08CB  28 2B       	JR	Z,U088D		; ja, End-Bit setzen
 1733 08CD  F5          	PUSH	AF		; Datenbyte
 1734 08CE  4A          	LD	C,D		; Steuerbyte
 1735 08CF  CD 0900     	CALL	U0895		; naechstes Datenbyte einlesen
 1736 08D2  30 06       	JR	NC,U086B	; OK
 1737 08D4  CB 71       	BIT	6,C		; Close?
 1738 08D6  20 E0       	JR	NZ,U082E	; nein, jetzt noch Close
 1739 08D8  18 E4       	JR	U082F
 1740                   	;
 1741 08DA  FE 0D       U086B:	CP	CR		; nach einem CR muss noch ein LF folgen
 1742 08DC  20 0B       	JR	NZ,U087F	; kein CR
 1743 08DE  CB 71       	BIT	6,C		; war das letzte MBIN bereits Close?
 1744 08E0  CC 0900     	CALL	Z,U0895		; nein, noch ein Datenbyte einlesen (LF)
 1745 08E3  38 D3       	JR	C,U082E		; Fehler -> Close
 1746 08E5  3E 0D       	LD	A,CR		; nur das CR verwenden
 1747 08E7  18 09       	JR	U0888
 1748                   	;
 1749 08E9  FE 03       U087F:	CP	3		; BRK=Dateiende?
 1750 08EB  20 05       	JR	NZ,U0888	; nein
 1751 08ED  21 0053     	LD	HL,U0043
 1752 08F0  CB C6       	SET	0,(HL)		; Datei-Ende setzen
 1753 08F2  32 0057     U0888:	LD	(U0047),A	; gelesenes Datenbyte
 1754 08F5  F1          	POP	AF		; und vorheriges uebergeben
 1755 08F6  B7          	OR	A		; CY=0, kein Fehler
 1756 08F7  C9          	RET
 1757                   	;
 1758 08F8  21 0053     U088D:	LD	HL,U0043
 1759 08FB  CB C6       	SET	0,(HL)		; Datei-Ende setzen
 1760 08FD  3E 0D       	LD	A,CR		; CR zurueckgeben
 1761 08FF  C9          	RET
 1762                   ;
 1763                   ; ein Datenbyte von Kassette lesen
 1764                   ;
 1765 0900  DD CB 08 86 U0895:	RES	0,(IX+8)	; evtl. anstehenden Tastendruck ruecksetzen
 1766 0904  AF          	XOR	A
 1767 0905  32 0054     	LD	(U0044),A	; Abbruch zuruecksetzen
 1768 0908  1E 37       	LD	E,MBIN
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  23
BAC85   Z80

 1769 090A  CD F015     	CALL	PV5
 1770 090D  F5          	PUSH	AF		; Datenbyte und Fehlerflag merken
 1771 090E  DD CB 08 46 	BIT	0,(IX+8)	; Taste gedrueckt?
 1772 0912  28 09       	JR	Z,U08F3		; nein
 1773 0914  3E FF       	LD	A,0FFH
 1774 0916  32 0054     	LD	(U0044),A	; Abbruch/Fehler setzen
 1775 0919  DD CB 08 86 	RES	0,(IX+8)	; Tastendruck zuruecksetzen
 1776 091D              U08F3:	;CALL	U09C8		; komplette unterste Bildschirmzeile malen
 1777 091D  F1          	POP	AF		; A=Datenbyte, CY=1 bei Fehler
 1778 091E  C9          	RET
 1779                   ;
 1780                   ; Datei im KC-Format zum Schreiben oeffnen
 1781                   ; NF=3
 1782                   ; PA:	CY=1	Fehler
 1783                   ;
 1784 091F  3A 003B     U0915:	LD	A,(FLAGS)
 1785 0922  F6 08       	OR	8		; Init setzen
 1786 0924  32 003B     	LD	(FLAGS),A
 1787 0927  B7          	OR	A		; CY=0, kein Fehler
 1788 0928  C9          	RET
 1789                   ;
 1790                   ; Datei im KC-Format schreiben
 1791                   ; NF=3
 1792                   ; PE:	A	Datenbyte
 1793                   ; PA:	CY=1	Fehler
 1794                   ;
 1795 0929  FE 0D       U0946:	CP	CR		; CR?
 1796 092B  20 06       	JR	NZ,U094F	; nein
 1797 092D  CD 0933     	CALL	U094F		; CR schreiben
 1798 0930  D8          	RET	C		; Fehler
 1799 0931  3E 0A       	LD	A,LF		; und danach ein LF automatisch anhaengen
 1800 0933  16 00       U094F:	LD	D,0		; kein Open, kein Close
 1801 0935  21 003B     U0950:	LD	HL,FLAGS
 1802 0938  CB 5E       	BIT	3,(HL)		; Init?
 1803 093A  28 0B       	JR	Z,U0976		; nein
 1804 093C  CB 9E       	RES	3,(HL)		; Init ruecksetzen
 1805 093E  CB DA       	SET	3,D		; Bit3(D)=1 fuer Open
 1806 0940  21 0060     	LD	HL,FNAME	; Dateiname
 1807 0943  DD CB 07 EE 	SET	5,(IX+7)	; Blocknummern unterdruecken
 1808 0947  1E 38       U0976:	LD	E,MBOUT
 1809 0949  D5          	PUSH	DE		; D=Steueryte auf Stack erhalten
 1810 094A  CD F015     	CALL	PV5
 1811 094D  D1          	POP	DE
 1812 094E  D8          	RET	C		; Fehler
 1813 094F  CB 72       	BIT	6,D		; war das Close?
 1814 0951  20 0A       	JR	NZ,U0977	; ja, Tastensimulation von BASEX zuruecknehmen
 1815 0953  DD CB 08 46 	BIT	0,(IX+8)	; Taste gedrueckt?
 1816                   ;	LD	A,(IX+13)	; Tastencode
 1817                   ;	OR	A		; Taste gedrueckt?
 1818 0957  C8          	RET	Z		; nein
 1819 0958  3E FF       	LD	A,0FFH
 1820 095A  32 0054     	LD	(U0044),A	; Abbruch/Fehler setzen
 1821 095D  DD CB 08 86 U0977:	RES	0,(IX+8)	; Tastendruck zuruecksetzen
 1822 0961  C9          	RET
 1823                   ;
 1824                   ; Datei im KC-Format zum Schreiben schliessen
 1825                   ; NF=3
 1826                   ; PA:	CY=1	Fehler
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  24
BAC85   Z80

 1827                   ;
 1828 0962  3E 03       U099A:	LD	A,3		; Ende-Kennung
 1829 0964  16 40       	LD	D,40H		; Bit6=1 fuer Close
 1830 0966  18 CD       	JR	U0950		; als letztes Zeichen in Datei schreiben
 1831                   ;
 1832                   ; IRM-Adresse auf linke Spalte / letzte Zeile setzen
 1833                   ;
 1834 0968  E5          U09AE:	PUSH	HL
 1835         0000      IF KC3
 1837                   ELSE
 1838 0969  21 80F8     	LD	HL,80F8H	; IRM-Adresse fuer Zeichen links/unten (KC85/4)
 1839                   ENDIF
 1840 096C  22 005C     	LD	(U004C),HL	; IRM-Adresse eintragen
 1841 096F  E1          	POP	HL
 1842 0970  C9          	RET
 1843                   ;
 1844                   ; unterste Bildschirmzeile malen mit dem Inhalt des Puffers
 1845                   ;
 1846 0971  CD 0968     U09C8:	CALL	U09AE		; IRM-Adresse auf links/unten einstellen
 1847 0974  21 0010     	LD	HL,U0000
 1848 0977  01 2820     	LD	BC,2820H	; B=40 Spalten, C=Leerzeichen
 1849 097A  7E          U09D1:	LD	A,(HL)
 1850 097B  B9          	CP	C		; Steuerzeichen?
 1851 097C  30 01       	JR	NC,U09D6	; nein
 1852 097E  79          	LD	A,C		; stattdessen Leerzeichen
 1853 097F  CD 0986     U09D6:	CALL	U09DD		; Zeichen malen
 1854 0982  23          	INC	HL
 1855 0983  10 F5       	DJNZ	U09D1
 1856 0985  C9          	RET
 1857                   ;
 1858                   ; Zeichen in unterster Bildschirmzeile malen (ohne VRAM)
 1859                   ;
 1860 0986  F5          U09DD:	PUSH	AF
 1861 0987  FE 20       	CP	20H		; Steuerzeichen?
 1862 0989  DC 0968     	CALL	C,U09AE		; dann wieder von vorn beginnen
 1863 098C  38 34       	JR	C,U0A19		; sonst nichts
 1864 098E  E5          	PUSH	HL
 1865 098F  D5          	PUSH	DE
 1866 0990  C5          	PUSH	BC
 1867 0991  5F          	LD	E,A		; Zeichen
 1868 0992  DB 88       	IN	A,(PIOAD)
 1869 0994  CB 57       	BIT	2,A		; IRM ein?
 1870 0996  CC F018     	CALL	Z,IRMON		; bei Bedarf einschalten
 1871 0999  F5          	PUSH	AF		; IRM-Zustand merken
 1872 099A  7B          	LD	A,E
 1873 099B  1E 20       	LD	E,' '
 1874 099D  BB          	CP	E		; Steuerzeichen?
 1875 099E  30 01       	JR	NC,U09F8	; nein
 1876 09A0  7B          	LD	A,E		; stattdessen Leerzeichen anzeigen
 1877 09A1  CD 09C4     U09F8:	CALL	U0A1B		; Zeichenbildtabelle nach HL holen
 1878 09A4  ED 5B 005C  	LD	DE,(U004C)	; IRM-Adresse
 1879 09A8  D5          	PUSH	DE
 1880         0000      IF KC3
 1896                   ELSE
 1897 09A9  01 0008     	LD	BC,8		; 8 Bit
 1898 09AC  ED B0       	LDIR			; direkt in Pixel-IRM kopieren
 1899 09AE  E1          	POP	HL
 1900 09AF  24          	INC	H		; eine Spalte nach rechts
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  25
BAC85   Z80

 1901 09B0  22 005C     	LD	(U004C),HL	; IRM-Adresse fuer naechstes Zeichen
 1902 09B3  7C          	LD	A,H
 1903 09B4  FE A8       	CP	0A8H		; Ende erreicht?
 1904 09B6  CC 0968     	CALL	Z,U09AE		; IRM-Adresse auf links/unten zurueckstellen
 1905                   ENDIF
 1906 09B9  F1          	POP	AF
 1907 09BA  CB 57       	BIT	2,A		; war IRM aus?
 1908 09BC  CC F01B     	CALL	Z,IRMOFF	; dann jetzt wieder ausschalten
 1909 09BF  C1          	POP	BC
 1910 09C0  D1          	POP	DE
 1911 09C1  E1          	POP	HL
 1912 09C2  F1          U0A19:	POP	AF
 1913 09C3  C9          	RET
 1914         0000      IF KC3
 1932                   ENDIF
 1933                   ;
 1934                   ; Zeichenbildtabelle holen
 1935                   ; PE:	A = Zeichencode
 1936                   ; PA:	HL = Adresse des Zeichencodes
 1937                   ;
 1938 09C4  E6 7F       U0A1B:	AND	7FH		; ohne 7 Bit, also nur CCTL0/CCTL1
 1939 09C6  FE 20       	CP	20H
 1940 09C8  38 0D       	JR	C,U0A2E		; 00H bis 1FH aus CCTL1
 1941 09CA  FE 60       	CP	60H
 1942 09CC  30 07       	JR	NC,U0A2C	; 60H bis 7FH aus CCTL1
 1943 09CE  2A B7A6     	LD	HL,(CCTL0)
 1944 09D1  D6 20       	SUB	20H		; 20H bis 5FH aus CCTL0
 1945 09D3  18 05       	JR	U0A31
 1946                   	;
 1947 09D5  D6 40       U0A2C:	SUB	40H
 1948 09D7  2A B7A8     U0A2E:	LD	HL,(CCTL1)
 1949 09DA  D5          U0A31:	PUSH	DE
 1950 09DB  EB          	EX	DE,HL
 1951 09DC  6F          	LD	L,A
 1952 09DD  26 00       	LD	H,0
 1953 09DF  29          	ADD	HL,HL		; Zeichen * 8
 1954 09E0  29          	ADD	HL,HL
 1955 09E1  29          	ADD	HL,HL
 1956 09E2  19          	ADD	HL,DE		; Zeichentabelle addieren
 1957 09E3  D1          	POP	DE
 1958 09E4  C9          	RET
 1959                   ;
 1960                   ; Tabelle der Zeitkonstanten fuer Tonwerte
 1961                   ;
 1962 09E5  FF          U0A3C:	DB	0FFH	; 0	45
 1963 09E6  F0          	DB	0F0H	; 1	46
 1964 09E7  E3          	DB	0E3H	; 2	47
 1965 09E8  D6          	DB	0D6H	; 3	48
 1966 09E9  CA          	DB	0CAH	; 4	49
 1967 09EA  BF          	DB	0BFH	; 5	50
 1968 09EB  B4          	DB	0B4H	; 6	51
 1969 09EC  AA          	DB	0AAH	; 7	52
 1970 09ED  A1          	DB	0A1H	; 8	53
 1971 09EE  98          	DB	98H	; 9	54
 1972 09EF  8F          	DB	8FH	; 10	55
 1973 09F0  87          	DB	87H	; 11	56
 1974 09F1  7F          	DB	7FH	; 12	57
 1975 09F2  78          	DB	78H	; 13	58
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  26
BAC85   Z80

 1976 09F3  71          	DB	71H	; 14	59
 1977 09F4  6B          	DB	6BH	; 15	60
 1978 09F5  65          	DB	65H	; 16	61
 1979 09F6  5F          	DB	5FH	; 17	62
 1980 09F7  5A          	DB	5AH	; 18	63
 1981 09F8  55          	DB	55H	; 19	64
 1982 09F9  50          	DB	50H	; 20	65
 1983 09FA  4C          	DB	4CH	; 21	66
 1984 09FB  47          	DB	47H	; 22	67
 1985 09FC  43          	DB	43H	; 23	68
 1986 09FD  40          	DB	40H	; 24	69
 1987 09FE  3C          	DB	3CH	; 25	70
 1988 09FF  39          	DB	39H	; 26	71
 1989 0A00  36          	DB	36H	; 27	72
 1990 0A01  33          	DB	33H	; 28	73
 1991 0A02  30          	DB	30H	; 29	74
 1992 0A03  2D          	DB	2DH	; 30	75
 1993 0A04  2B          	DB	2BH	; 31	76
 1994 0A05  28          	DB	28H	; 32	77
 1995 0A06  26          	DB	26H	; 33	78
 1996 0A07  24          	DB	24H	; 34	79
 1997 0A08  22          	DB	22H	; 35	80
 1998 0A09  20          	DB	20H	; 36	81
 1999 0A0A  1E          	DB	1EH	; 37	82
 2000 0A0B  1C          	DB	1CH	; 38	83
 2001 0A0C  1B          	DB	1BH	; 39	84
 2002 0A0D  19          	DB	19H	; 40	85
 2003 0A0E  18          	DB	18H	; 41	86
 2004 0A0F  17          	DB	17H	; 42	87
 2005 0A10  15          	DB	15H	; 43	88
 2006 0A11  14          	DB	14H	; 44	89
 2007 0A12  13          	DB	13H	;	90
 2008 0A13  12          	DB	12H	;	91
 2009 0A14  11          	DB	11H	;	92
 2010 0A15  10          	DB	10H	;	93
 2011 0A16  0F          	DB	0FH	;	94
 2012 0A17  0E          	DB	0EH	;	95
 2013 0A18  0D          	DB	0DH	;	96
 2014 0A19  0D          	DB	0DH	;	97
 2015 0A1A  0C          	DB	0CH	;	98
 2016 0A1B  0B          	DB	0BH	;	99
 2017 0A1C  0B          	DB	0BH	;	100
 2018 0A1D  0A          	DB	0AH	;	101
 2019 0A1E  09          	DB	09H	;	102
 2020 0A1F  09          	DB	09H	;	103
 2021 0A20  08          	DB	08H	;	104
 2022 0A21  08          	DB	08H	;	105
 2023 0A22  08          	DB	08H	;	106
 2024 0A23  07          	DB	07H	;	107
 2025 0A24  07          U0A7B:	DB	07H	;	108	(Zeiger auf USER-Eingabe Kanal 2)
 2026 0A25  06          	DB	06H	;	109
 2027 0A26  06          	DB	06H	;	110
 2028 0A27  06          	DB	06H	;	111
 2029 0A28  05          	DB	05H	;	112
 2030 0A29  05          	DB	05H	;	113
 2031 0A2A  05          	DB	05H	;	114
 2032 0A2B  04          	DB	04H	;	115
 2033 0A2C  04          	DB	04H	;	116
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  27
BAC85   Z80

 2034 0A2D  04          	DB	04H	;	117
 2035 0A2E  04          	DB	04H	;	118
 2036 0A2F  04          	DB	04H	;	119
 2037 0A30  03          	DB	03H	;	120
 2038 0A31  03          	DB	03H	;	121
 2039 0A32  03          	DB	03H	;	121
 2040 0A33  03          	DB	03H	;	123
 2041 0A34  03          	DB	03H	;	124
 2042 0A35  03          	DB	03H	;	125
 2043 0A36  02          	DB	02H	;	126
 2044 0A37  02          	DB	02H	;	127
 2045                   
 2046         0000      IF KC3
 2051                   ELSE
 2052                   ;
 2053                   ; Zeichenkette zum Hervorheben (invers) beim KC85/4
 2054                   ;
 2055 0A38  20          U0A8F:	DB	' '
 2056 0A39  20          U0A90:	DB	' '
 2057 0A3A  1B 37       	DB	ESC,'7'		; Invers ein/aus
 2058 0A3C  20 20       	DB	'  '
 2059                   ENDIF
 2060                   ;
 2061                   ; F-Tastenbelegung
 2062                   ;
 2063 0A3E  00          U0A95:	NOP
 2064 0A3F  2A 4C 0D    	DB	'*L',CR		; F1
 2065 0A42  00          	NOP
 2066 0A43  2A 41 0D    	DB	'*A',CR		; F2
 2067 0A46  00          	NOP
 2068 0A47  2A 57 0D    	DB	'*W',CR		; F3
 2069 0A4A  00          	NOP
 2070 0A4B  2A 54 0D    	DB	'*T',CR		; F4
 2071 0A4E  00          	NOP
 2072 0A4F  2A 43 0D    	DB	'*C',CR		; F5
 2073 0A52  00          	NOP
 2074 0A53  2A 4B 0D    	DB	'*K',CR		; F6
 2075 0A56  00          	NOP
 2076 0A57  1D          	DB	1DH		; Shift+F1 = RUN
 2077 0A58  00          	NOP
 2078 0A59  1E          	DB	1EH		; Shift+F2 = CONT
 2079 0A5A  00          	NOP
 2080 0A5B  1C          	DB	1CH		; Shift+F3 = LIST
 2081 0A5C  00          	NOP
 2082 0A5D  02 25 52 45 	DB	2,'%REBASIC',0DH,'CALL*'	; Shift+F4
 2083                   	ASCTXT	U040D
   12 0A6C  34          		DB	(U040D/100H AND 0FH) + 30H
   18 0A6D  30          		DB	(U040D/10H AND 0FH) + 30H
   22 0A6E  44          		DB	(U040D AND 0FH) + 37H
 2084 0A6F  0D          	DB	CR
 2085 0A70  00          	NOP
 2086 0A71  43 4C 4F 41 	DB	'CLOAD"'	; Shift+F5
 2087 0A77  00          	NOP
 2088 0A78  02 43 53 41 	DB	2,'CSAVE"'	; Shift+F6
 2089 0A7F  00          	NOP
 2090                   ;
 2091                   ; Daten fuer Titelbild
 2092                   ;
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  28
BAC85   Z80

 2093 0A80  01 1F 01 1F U0AD7:	DB	01H,1FH,01H,1FH		; 43 Linien fuer Schallplatte
 2094 0A84  02 05 06 0E 	DB	02H,05H,06H,0EH
 2095 0A88  01 1E 08 1E 	DB	01H,1EH,08H,1EH
 2096 0A8C  03 05 07 0E 	DB	03H,05H,07H,0EH
 2097 0A90  01 1D 0B 1D 	DB	01H,1DH,0BH,1DH
 2098 0A94  01 0B 01 0B 	DB	01H,0BH,01H,0BH
 2099 0A98  01 1C 0E 1C 	DB	01H,1CH,0EH,1CH
 2100 0A9C  01 0A 05 0A 	DB	01H,0AH,05H,0AH		; 8. Linie
 2101 0AA0  01 1B 10 1B 	DB	01H,1BH,10H,1BH
 2102 0AA4  01 09 07 09 	DB	01H,09H,07H,09H
 2103 0AA8  01 1A 12 1A 	DB	01H,1AH,12H,1AH
 2104 0AAC  02 08 08 08 	DB	02H,08H,08H,08H
 2105 0AB0  01 19 13 19 	DB	01H,19H,13H,19H
 2106 0AB4  06 07 09 07 	DB	06H,07H,09H,07H
 2107 0AB8  01 18 14 18 	DB	01H,18H,14H,18H		; 15. Linie
 2108 0ABC  07 06 09 06 	DB	07H,06H,09H,06H
 2109 0AC0  01 17 15 17 	DB	01H,17H,15H,17H
 2110 0AC4  08 05 0A 05 	DB	08H,05H,0AH,05H
 2111 0AC8  01 16 16 16 	DB	01H,16H,16H,16H
 2112 0ACC  08 04 0A 04 	DB	08H,04H,0AH,04H
 2113 0AD0  01 15 17 15 	DB	01H,15H,17H,15H
 2114 0AD4  08 03 0A 03 	DB	08H,03H,0AH,03H		; 22. Linie
 2115 0AD8  01 14 18 14 	DB	01H,14H,18H,14H
 2116 0ADC  08 02 0A 02 	DB	08H,02H,0AH,02H
 2117 0AE0  01 13 19 13 	DB	01H,13H,19H,13H
 2118 0AE4  05 01 1F 01 	DB	05H,01H,1FH,01H
 2119 0AE8  01 12 1A 12 	DB	01H,12H,1AH,12H
 2120 0AEC  0E 02 1E 02 	DB	0EH,02H,1EH,02H
 2121 0AF0  01 11 1A 11 	DB	01H,11H,1AH,11H		; 29. Linie
 2122 0AF4  0E 03 1E 03 	DB	0EH,03H,1EH,03H
 2123 0AF8  01 10 1B 10 	DB	01H,10H,1BH,10H
 2124 0AFC  0E 04 1E 04 	DB	0EH,04H,1EH,04H
 2125 0B00  01 0F 1B 0F 	DB	01H,0FH,1BH,0FH
 2126 0B04  0E 05 1E 05 	DB	0EH,05H,1EH,05H		; 34. Linie
 2127 0B08  02 0E 1C 0E 	DB	02H,0EH,1CH,0EH
 2128 0B0C  0E 06 1E 06 	DB	0EH,06H,1EH,06H
 2129 0B10  07 0D 1C 0D 	DB	07H,0DH,1CH,0DH
 2130 0B14  0D 07 1E 07 	DB	0DH,07H,1EH,07H
 2131 0B18  09 0C 1C 0C 	DB	09H,0CH,1CH,0CH
 2132 0B1C  0D 08 1E 08 	DB	0DH,08H,1EH,08H
 2133 0B20  0B 0B 1D 0B 	DB	0BH,0BH,1DH,0BH
 2134 0B24  0C 09 1D 09 	DB	0CH,09H,1DH,09H
 2135 0B28  0C 0A 1D 0A 	DB	0CH,0AH,1DH,0AH		; 43. Linie
 2136                   
 2137 0B2C  00 08 05 00 	DB	00H,08H,05H,00H		; Linien fuer TAPE-Signal
 2138 0B30  00 F8 05 00 	DB	00H,0F8H,05H,00H
 2139 0B34  00 08 05 00 	DB	00H,08H,05H,00H
 2140 0B38  00 F8 05 00 	DB	00H,0F8H,05H,00H
 2141 0B3C  00 08 0A 00 	DB	00H,08H,0AH,00H
 2142 0B40  00 F8 0A 00 	DB	00H,0F8H,0AH,00H
 2143                   
 2144 0B44  020A        	DW	020AH		; Posision
 2145 0B46  42 41 53 49 	DB	'BASICODE-3C Version 1.5d',0
 2146                   
 2147 0B5F  0412        	DW	0412H		; Position
 2148         0000      IF KC3
 2152                   ELSE
 2153         0001      IF DEV
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  29
BAC85   Z80

 2154 0B61  4B 43 38 35 	DB	'KC85/5',0
 2155                   ELSE
 2157                   ENDIF
 2158 0B68  060A        	DW	060AH		; Position
 2159 0B6A  5A 69 65 72 	DB	'Zierott, Wenzel, Leubner'
 2160                   ENDIF
 2161 0B82  0D 0A 0A 0A 	DB	CR,LF,LF,LF,LF,LF
 2162 0B88  00          	DB	0
 2163                   ;
 2164                   ; Kaltstart (Initialisierung mit CALL*410)
 2165                   ;
 2166 0B89  DD 6E 0E    KALT:	LD	L,(IX+14)	; KTAB
 2167 0B8C  DD 66 0F    	LD	H,(IX+15)	; aktueller Wert
 2168 0B8F  22 005E     	LD	(U004E),HL	; hier merken
 2169 0B92  AF          	XOR	A		; A=0
 2170 0B93  32 003B     	LD	(FLAGS),A
 2171 0B96  32 0055     	LD	(U0045),A	; keine Kanaele geoeffnet
 2172                   ; 13.11.2023, Frank Ludwig:
 2173                   ; Beim Kaltstart wird das Basicodeprogramm nicht sauber geloescht.
 2174                   ; Die Zeiger werden zwar auf das Ende des Bascoders gesetzt.
 2175                   ; Die zwei Null-Bytes, die das Programmende kennzeichnen werden dort
 2176                   ; aber nicht eingetragen. Der Zeiger auf den Anfang der naechsten Zeile bleibt
 2177                   ; also bestehen.
 2178                   ;
 2179 0B99  21 2189     	LD	HL,Z1000	; Anfang BASICODE-Programm
 2180 0B9C  77          	LD	(HL),A		; Eintragen der beiden Null-Bytes
 2181 0B9D  23          	INC	HL
 2182 0B9E  77          	LD	(HL),A
 2183 0B9F  23          	INC	HL		; Programmende, Basicode-Programm loeschen
 2184                   
 2185 0BA0  3C          	INC	A		; A=1
 2186 0BA1  32 0340     	LD	(DUMMY),A	; Anzahl Dummyzeichen
 2187                   ;	LD	HL,U21F3	; Programmende, Basicode-Programm loeschen
 2188 0BA4  22 03D7     	LD	(SVARPT),HL	; Anfang Variablenspeicher
 2189 0BA7  22 03D9     	LD	(DVARPT),HL	; Liste der Feldvariablen
 2190 0BAA  22 03DB     	LD	(FSLPTR),HL	; Erste freie Adresse hinter den Listen
 2191                   ;
 2192                   ; Warmstart (CALL*40D)
 2193                   ;
 2194 0BAD  CD 0441     WARM:	CALL	BCINIT		; Initialisierung, Druckertreiber kopieren
 2195 0BB0  21 0D92     	LD	HL,BCMENU	; BASICODE-Menue
 2196 0BB3  E5          	PUSH	HL		; als Ruecksprungadresse auf den Stack
 2197 0BB4  3E C3       	LD	A,0C3H		; JUMP auf 38H eintragen
 2198 0BB6  32 0038     	LD	(U0038),A	; RST38 abfangen
 2199 0BB9  21 0413     	LD	HL,U0413	; "Systemabsturz"-Meldung
 2200 0BBC  22 0039     	LD	(U0039),HL	; als Sprungadresse
 2201 0BBF  21 2189     WARM1:	LD	HL,Z1000	; Anfang BASIC-Programm Zeile 1000
 2202 0BC2  22 035F     	LD	(PSTBEG),HL	; als sichtbaren Anfang einstellen
 2203 0BC5  21 04AD     	LD	HL,U04C3	; eigene Routine fuer
 2204 0BC8  22 B7C9     	LD	(IO_ERR),HL	; IO-ERROR regenerieren
 2205 0BCB  CD 065E     	CALL	U0643		; Original-KTAB einstellen (BRK/STOP aktiviert)
 2206 0BCE  3A 0055     	LD	A,(U0045)	; BASICODE-Kanaele geoeffnet?
 2207 0BD1  B7          	OR	A
 2208 0BD2  C8          	RET	Z		; nein, dann Logo und Speicherbelegung anzeigen
 2209 0BD3  CD F01B     	CALL	IRMOFF		; ansonsten jetzt IRM OFF (???)
 2210 0BD6  21 1EDA     	LD	HL,U1E81+16	; Ende von Sprungverteiler Datei Schliessen
 2211 0BD9  87          WARM2:	ADD	A		; Entspechend der Bitnummer ...
 2212 0BDA  2B          	DEC	HL		; ... Sprungadresse suchen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  30
BAC85   Z80

 2213 0BDB  2B          	DEC	HL		;  (benutzt werden die Bits 0..3)
 2214 0BDC  38 0E       	JR	C,WARM3		; Datei schliessen
 2215 0BDE  20 F9       	JR	NZ,WARM2	; noch weitere Dateien offen
 2216 0BE0  32 0055     	LD	(U0045),A	; wenn fertig, alle Kanaele geschlossen
 2217 0BE3  21 1CF4     	LD	HL,U1CAB	; Text 'Bestaende geschlossen!'
 2218 0BE6  CD 1AAE     	CALL	U1AE5		; anzeigen
 2219 0BE9  C3 C08C     	JP	SECST		; RESTART BASIC-Interpreter
 2220                   	;
 2221 0BEC  F5          WARM3:	PUSH	AF
 2222 0BED  E5          	PUSH	HL
 2223 0BEE  7E          	LD	A,(HL)		; Adresse aus Sprungverteiler lesen
 2224 0BEF  23          	INC	HL
 2225 0BF0  66          	LD	H,(HL)
 2226 0BF1  6F          	LD	L,A
 2227 0BF2  CD 161A     	CALL	CALLHL		; CALL (HL) hier Kanal schliessen
 2228 0BF5  E1          	POP	HL
 2229 0BF6  F1          	POP	AF
 2230 0BF7  18 E0       	JR	WARM2
 2231                   ;
 2232                   ; abgefangene Eingaberoutine bei USER-INPUT 2 (07H)
 2233                   ; konvertiert bei Bedarf das ASCII-File zu BASIC, indem das ASCII-File
 2234                   ; als Eingabedaten verwendet wird.
 2235                   ;
 2236 0BF9  3A 003B     U0C39:	LD	A,(FLAGS)
 2237 0BFC  CB 47       	BIT	0,A		; laeuft gerade Konvertierung ASCII -> BASIC?
 2238 0BFE  C2 0CB2     	JP	NZ,U0CE2	; ja
 2239 0C01  2A 0358     	LD	HL,(CULINO)	; aktuelle Zeilennummer
 2240 0C04  23          	INC	HL
 2241 0C05  3A 034D     	LD	A,(AUTOFG)	; automatische Zeilennummerierung?
 2242 0C08  B4          	OR	H		; oder Programm-Mode?
 2243 0C09  B5          	OR	L
 2244 0C0A  C2 0638     	JP	NZ,U062C	; dann direkt zu KBD
 2245 0C0D  CD 0BBF     	CALL	WARM1		; Programmanfang auf Zeile 1000 stellen und
 2246                   				; BASICODE-Dateien schliessen, falls noetig
 2247 0C10  CD 0638     	CALL	U062C		; Eingabe ein Zeichen
 2248 0C13  FE 20       	CP	20H
 2249 0C15  D0          	RET	NC		; kein Steuerzeichen
 2250 0C16  FE 1D       	CP	1DH
 2251 0C18  28 41       	JR	Z,U1AAE		; RUN-Taste -> BASICODE-Routinen aktivieren
 2252 0C1A  FE 1E       	CP	1EH
 2253 0C1C  28 3D       	JR	Z,U1AAE		; CONT-Taste -> BASICODE-Routinen aktivieren
 2254 0C1E  FE 0D       	CP	CR
 2255 0C20  C0          	RET	NZ		; nicht Enter
 2256                   
 2257                   ; bei Enter noch testen, was im Eingabepuffer steht:
 2258 0C21  21 0361     	LD	HL,INPBUF	; Eingabepuffer
 2259 0C24  23          U0C66:	INC	HL
 2260 0C25  7E          	LD	A,(HL)
 2261 0C26  FE 20       	CP	20H
 2262 0C28  28 FA       	JR	Z,U0C66		; Leerzeichen uebergehen
 2263 0C2A  C5          	PUSH	BC
 2264 0C2B  D5          	PUSH	DE
 2265 0C2C  11 1F00     	LD	DE,U1EB7	; diese Befehle abfangen (CONT, GO, RUN, CSAVE)
 2266 0C2F  06 04       	LD	B,4		; 4 Befehle
 2267 0C31  E5          U0C73:	PUSH	HL
 2268 0C32  7E          U0C74:	LD	A,(HL)		; Zeichen aus Eingabepuffer
 2269 0C33  E6 5F       	AND	5FH		; UPCASE
 2270 0C35  4F          	LD	C,A		; in C merken
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  31
BAC85   Z80

 2271 0C36  1A          	LD	A,(DE)		; Zeichen aus Vergleichsspeicher
 2272 0C37  13          	INC	DE
 2273 0C38  B7          	OR	A		; Ende-0?
 2274 0C39  28 16       	JR	Z,U0C93		; Befehl erkannt
 2275 0C3B  23          	INC	HL
 2276 0C3C  B9          	CP	C
 2277 0C3D  28 F3       	JR	Z,U0C74		; stimmt, weitersuchen
 2278 0C3F  E1          	POP	HL
 2279 0C40  1A          U0C82:	LD	A,(DE)
 2280 0C41  13          	INC	DE
 2281 0C42  B7          	OR	A		; Ende-0 suchen
 2282 0C43  20 FB       	JR	NZ,U0C82
 2283 0C45  10 EA       	DJNZ	U0C73		; bis alle 4 Befehle getestet sind
 2284 0C47  D1          	POP	DE
 2285 0C48  C1          	POP	BC
 2286 0C49  7E          	LD	A,(HL)		; Eingabepuffer
 2287 0C4A  FE 2A       	CP	'*'		; Sonderbefehl mit * ?
 2288 0C4C  28 21       	JR	Z,U0CA5
 2289 0C4E  3E 0D       	LD	A,CR		; ansonsten einfach das CR zurueckgeben
 2290 0C50  C9          	RET
 2291                   ;
 2292                   ; CONT, GO, RUN oder CSAVE erkannt:
 2293                   ;
 2294 0C51  E3          U0C93:	EX	(SP),HL
 2295 0C52  D1          	POP	DE
 2296 0C53  78          	LD	A,B
 2297 0C54  3D          	DEC	A
 2298 0C55  28 11       	JR	Z,U0C9E		; CSAVE
 2299 0C57  D1          	POP	DE
 2300 0C58  C1          	POP	BC
 2301 0C59  3E 0D       	LD	A,CR		; CR, RUN-Mode
 2302 0C5B  21 04B7     U1AAE:	LD	HL,U04C4	; Spezial-Routine fuer
 2303 0C5E  22 B7C9     	LD	(IO_ERR),HL	; IO-ERROR eintragen
 2304 0C61  21 1F6C     	LD	HL,ZEILE2	; BASICODE-Routinen freigeben fuer RUN-Modus
 2305 0C64  22 035F     	LD	(PSTBEG),HL	; als Programmstart-Adresse eintragen
 2306 0C67  C9          	RET
 2307                   	;
 2308 0C68  C1          U0C9E:	POP	BC
 2309 0C69  C1          	POP	BC
 2310 0C6A  77          	LD	(HL),A
 2311 0C6B  0E 07       	LD	C,7		; 7. Sonderbefehl
 2312 0C6D  18 1D       	JR	U0CBA		; aus Sprungtabelle lesen
 2313                   ;
 2314                   ; Sonderbehandlung Befehle mit *
 2315                   ;
 2316 0C6F  36 00       U0CA5:	LD	(HL),0		; Stern im Eingabepuffer loeschen
 2317                   ;	CALL	IRMON
 2318 0C71  3E 31       	LD	A,DEFCOL	; Standardfarbe einstellen
 2319 0C73  32 B7A3     	LD	(COLOR),A
 2320 0C76  CD F01B     	CALL	IRMOFF
 2321 0C79  CD C8BD     	CALL	TCHAR		; naechstes gueltiges Zeichen holen
 2322                   
 2323 0C7C  E6 5F       	AND	5FH		; upcase
 2324 0C7E  21 1EEA     	LD	HL,U1EA1	; 6 Kennbuchstaben
 2325 0C81  01 0006     	LD	BC,6
 2326 0C84  ED B1       	CPIR
 2327 0C86  28 04       	JR	Z,U0CBA		; gefunden
 2328 0C88  50          	LD	D,B		; D=0
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  32
BAC85   Z80

 2329 0C89  59          	LD	E,C		; E=0
 2330 0C8A  0E 06       	LD	C,6		; 6. Befehl = Menue
 2331 0C8C  79          U0CBA:	LD	A,C
 2332 0C8D  CD F018     	CALL	IRMON
 2333 0C90  FD 2A 0356  	LD	IY,(STDPTR)	; RAM-Mindestgroesse (KC85/3=7EFF KC85/4=BEFF)
 2334 0C94  FD 2B       	DEC	IY		; davor gehen und als neuen Stack definieren
 2335         0000      IF KC3
 2337                   ENDIF
 2338 0C96  CD F01B     	CALL	IRMOFF
 2339 0C99  01 C08C     	LD	BC,SECST	; RESTART BASIC-Interpreter
 2340 0C9C  C5          	PUSH	BC		; auf Stack legen als RET-Adresse
 2341 0C9D  21 1EF0     	LD	HL,U1EA7	; Tabelle der Sprungadressen der Routinen
 2342 0CA0  4F          	LD	C,A
 2343 0CA1  06 00       	LD	B,0		; BC=Nr. der Routine
 2344 0CA3  09          	ADD	HL,BC
 2345 0CA4  09          	ADD	HL,BC		; Position in Tabelle berechnen
 2346 0CA5  4E          	LD	C,(HL)
 2347 0CA6  23          	INC	HL
 2348 0CA7  46          	LD	B,(HL)		; BC=Sprungadresse
 2349 0CA8  C5          	PUSH	BC		; auf Stack legen zum Start
 2350 0CA9  EB          	EX	DE,HL
 2351 0CAA  FE 07       	CP	7
 2352 0CAC  C4 05DC     	CALL	NZ,CLS		; Bildschirm loeschen, ausser bei CSAVE
 2353 0CAF  C3 CB61     	JP	CRWDY2		; Anzeige CR, LF, Dummyzeichen
 2354                   ;
 2355                   ; USER-Input 2 waehrend Uebersetzung ASCII -> BASIC
 2356                   ;
 2357 0CB2  D5          U0CE2:	PUSH	DE
 2358 0CB3  CD 061F     	CALL	U0613		; Taste gedrueckt?
 2359 0CB6  FE 03       	CP	3		; BRK?
 2360 0CB8  28 17       	JR	Z,U0D01		; ja
 2361 0CBA  2A 0049     	LD	HL,(CPOINT)	; Pufferzeiger
 2362 0CBD  F3          	DI
 2363 0CBE  DB 88       	IN	A,(PIOAD)
 2364 0CC0  CB 97       	RES	2,A		; IRM aus
 2365 0CC2  D3 88       	OUT	(PIOAD),A
 2366 0CC4  7E          	LD	A,(HL)
 2367 0CC5  ED 5B 0047  	LD	DE,(U0033)	; Ende ASCII-File
 2368 0CC9  1B          	DEC	DE
 2369 0CCA  E5          	PUSH	HL
 2370 0CCB  B7          	OR	A
 2371 0CCC  ED 52       	SBC	HL,DE
 2372 0CCE  E1          	POP	HL
 2373 0CCF  38 29       	JR	C,U0D2A
 2374 0CD1  4F          U0D01:	LD	C,A
 2375 0CD2  3A 003B     	LD	A,(FLAGS)
 2376 0CD5  E6 FC       	AND	0FCH		; Bit 0 und 1 ruecksetzen
 2377 0CD7  32 003B     	LD	(FLAGS),A
 2378 0CDA  DB 88       	IN	A,(PIOAD)
 2379 0CDC  CB D7       	SET	2,A		; IRM ein
 2380 0CDE  D3 88       	OUT	(PIOAD),A
 2381 0CE0  FB          	EI
 2382 0CE1  2A 0051     	LD	HL,(U0041)	; gespeicherte Adresse fuer UOUT1
 2383 0CE4  22 B7BE     	LD	(UOUT1+1),HL	; wieder eintragen
 2384 0CE7  2A 003C     	LD	HL,(XPOS2)	; gespeicherte Adresse fuer OUTAB
 2385 0CEA  22 B7B9     	LD	(OUTAB),HL	; wieder eintragen
 2386 0CED  79          	LD	A,C
 2387 0CEE  FE 1D       	CP	1DH		; RUN?
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  33
BAC85   Z80

 2388 0CF0  D1          	POP	DE
 2389 0CF1  CA 0C5B     	JP	Z,U1AAE		; -> BASICODE-Routinen aktivieren
 2390 0CF4  D6 03       	SUB	3
 2391 0CF6  C8          	RET	Z		; BRK
 2392 0CF7  3E 0D       	LD	A,CR
 2393 0CF9  C9          	RET
 2394                   	;
 2395 0CFA  FE 0D       U0D2A:	CP	CR
 2396 0CFC  20 05       	JR	NZ,U0D33
 2397 0CFE  CD 0968     	CALL	U09AE		; IRM-Adresse auf links/unten einstellen
 2398 0D01  18 0C       	JR	U0D3F
 2399                   	;
 2400 0D03  FE 20       U0D33:	CP	20H		; Steuerzeichen?
 2401 0D05  38 04       	JR	C,U0D3B
 2402 0D07  FE 7F       	CP	7FH
 2403 0D09  38 04       	JR	C,U0D3F
 2404 0D0B  3E 23       U0D3B:	LD	A,'#'		; Ersatz fuer nicht darstellbare Zeichen
 2405 0D0D  18 05       	JR	U0D44
 2406                   	;
 2407 0D0F  47          U0D3F:	LD	B,A
 2408 0D10  CD 0D23     	CALL	U0D53		; Spezialbehandlung fuer DATA, REM und LOG
 2409 0D13  78          	LD	A,B
 2410 0D14  23          U0D44:	INC	HL
 2411 0D15  22 0049     	LD	(CPOINT),HL	; Pufferzeiger
 2412 0D18  D1          	POP	DE
 2413 0D19  47          	LD	B,A
 2414 0D1A  DB 88       	IN	A,(PIOAD)
 2415 0D1C  CB D7       	SET	2,A		; IRM ein
 2416 0D1E  D3 88       	OUT	(PIOAD),A
 2417 0D20  FB          	EI
 2418 0D21  78          	LD	A,B
 2419 0D22  C9          	RET
 2420                   ;
 2421                   ; Spezialbehandlung fuer DATA, REM und LOG
 2422                   ;
 2423 0D23  3A 003B     U0D53:	LD	A,(FLAGS)
 2424 0D26  E6 40       	AND	40H		; Bit 6?
 2425 0D28  20 55       	JR	NZ,U0DAF
 2426 0D2A  78          	LD	A,B
 2427 0D2B  FE 22       	CP	'"'
 2428 0D2D  28 30       	JR	Z,U0D8F		; Zeichenkette
 2429 0D2F  E5          	PUSH	HL
 2430 0D30  23          	INC	HL
 2431 0D31  FE 4C       	CP	'L'
 2432 0D33  28 38       	JR	Z,U0D9D
 2433 0D35  FE 52       	CP	'R'
 2434 0D37  28 19       	JR	Z,U0D82
 2435 0D39  FE 44       	CP	'D'
 2436 0D3B  20 2E       	JR	NZ,U0D9B
 2437                   ; D
 2438 0D3D  7E          	LD	A,(HL)
 2439 0D3E  FE 41       	CP	'A'
 2440 0D40  20 29       	JR	NZ,U0D9B
 2441                   ; DA
 2442 0D42  23          	INC	HL
 2443 0D43  7E          	LD	A,(HL)
 2444 0D44  FE 54       	CP	'T'
 2445 0D46  20 23       	JR	NZ,U0D9B
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  34
BAC85   Z80

 2446                   ; DAT
 2447 0D48  23          	INC	HL
 2448 0D49  7E          	LD	A,(HL)
 2449 0D4A  FE 41       	CP	'A'
 2450 0D4C  20 1D       	JR	NZ,U0D9B
 2451                   ; DATA
 2452 0D4E  3E 3A       	LD	A,':'
 2453 0D50  18 0C       	JR	U0D8E
 2454                   	;
 2455                   ; R
 2456 0D52  7E          U0D82:	LD	A,(HL)
 2457 0D53  FE 45       	CP	'E'
 2458 0D55  20 14       	JR	NZ,U0D9B
 2459                   ; RE
 2460 0D57  23          	INC	HL
 2461 0D58  7E          	LD	A,(HL)
 2462 0D59  FE 4D       	CP	'M'
 2463 0D5B  20 0E       	JR	NZ,U0D9B
 2464                   ; REM
 2465 0D5D  AF          	XOR	A
 2466 0D5E  E1          U0D8E:	POP	HL
 2467 0D5F  32 004C     U0D8F:	LD	(U003C),A
 2468 0D62  3A 003B     	LD	A,(FLAGS)
 2469 0D65  F6 40       	OR	40H		; Bit 6 setzen
 2470 0D67  32 003B     	LD	(FLAGS),A
 2471 0D6A  C9          	RET
 2472                   	;
 2473                   ; alles andere
 2474 0D6B  E1          U0D9B:	POP	HL
 2475 0D6C  C9          	RET
 2476                   	;
 2477                   ; L
 2478 0D6D  7E          U0D9D:	LD	A,(HL)
 2479 0D6E  FE 4F       	CP	'O'
 2480 0D70  20 F9       	JR	NZ,U0D9B
 2481                   ; LO
 2482 0D72  23          	INC	HL
 2483 0D73  7E          	LD	A,(HL)
 2484 0D74  FE 47       	CP	'G'
 2485 0D76  20 F3       	JR	NZ,U0D9B
 2486                   ; LOG
 2487 0D78  E1          	POP	HL
 2488 0D79  23          	INC	HL
 2489 0D7A  23          	INC	HL
 2490 0D7B  36 4E       	LD	(HL),'N'	; LOG -> LN
 2491 0D7D  2B          	DEC	HL
 2492 0D7E  C9          	RET
 2493                   	;
 2494 0D7F  3A 004C     U0DAF:	LD	A,(U003C)
 2495 0D82  B8          	CP	B
 2496 0D83  28 04       	JR	Z,U0DB9
 2497 0D85  3E 0D       	LD	A,CR
 2498 0D87  B8          	CP	B
 2499 0D88  C0          	RET	NZ
 2500 0D89  3A 003B     U0DB9:	LD	A,(FLAGS)
 2501 0D8C  E6 BF       	AND	0BFH		; Bit 6 ruecksetzen
 2502 0D8E  32 003B     	LD	(FLAGS),A
 2503 0D91  C9          	RET
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  35
BAC85   Z80

 2504                   ;
 2505                   ; Speicherbelegung anzeigen
 2506                   ;
 2507 0D92  21 0007     BCMENU:	LD	HL,7		; Stacktiefe in Bytes-1
 2508                   ;
 2509                   ; BASICODE-Menu
 2510                   ;
 2511 0D95  E5          STAR:	PUSH	HL
 2512 0D96  CD 04C1     	CALL	TITEL		; Titelbild zeichnen
 2513 0D99  2A 03D7     	LD	HL,(SVARPT)	; Ende BASIC-Programm
 2514 0D9C  11 218B     	LD	DE,U21F3	; Anfang BASIC-Programm
 2515 0D9F  B7          	OR	A
 2516 0DA0  ED 52       	SBC	HL,DE		; berechnen
 2517 0DA2  11 1D61     	LD	DE,U1D18	; Text "Programm:"
 2518 0DA5  CD 0DDA     	CALL	U0E0A		; Text+Wert anzeigen
 2519 0DA8  CD 1A7D     	CALL	U1AB5		; ASCII-File und BASIC-Programm im Speicher?
 2520 0DAB  E6 02       	AND	2
 2521 0DAD  21 0000     	LD	HL,0
 2522 0DB0  28 09       	JR	Z,U0DEB		; kein ASCII-File im Speicher
 2523 0DB2  2A 0047     	LD	HL,(U0033)	; Ende ASCII-File
 2524 0DB5  ED 5B 0045  	LD	DE,(U0031)	; Beginn ASCII-File
 2525 0DB9  ED 52       	SBC	HL,DE
 2526 0DBB  11 1D6D     U0DEB:	LD	DE,U1D24	; Text "ASC-File:"
 2527 0DBE  CD 0DDA     	CALL	U0E0A		; Text+Wert anzeigen
 2528 0DC1  D1          	POP	DE
 2529 0DC2  21 FFF3     	LD	HL,-13		; freien Speicher
 2530 0DC5  19          	ADD	HL,DE
 2531 0DC6  39          	ADD	HL,SP
 2532 0DC7  ED 5B 03DB  	LD	DE,(FSLPTR)	; erste freie Adresse hinter den Variablen
 2533 0DCB  B7          	OR	A
 2534 0DCC  ED 52       	SBC	HL,DE
 2535 0DCE  11 1D77     	LD	DE,U1D2E	; Text "Frei:"
 2536 0DD1  CD 0DDA     	CALL	U0E0A		; anzeigen
 2537 0DD4  21 1D81     	LD	HL,U1D38	; Text "BASICODE-Menue..."
 2538 0DD7  C3 C5F1     	JP	TEXTOE		; anzeigen
 2539                   ;
 2540                   ; Ausgabe Prgrammgroesse in Bytes
 2541                   ;
 2542 0DDA  EB          U0E0A:	EX	DE,HL
 2543 0DDB  D5          	PUSH	DE
 2544 0DDC  CD C5F1     	CALL	TEXTOE		; Textausgabe
 2545 0DDF  D1          	POP	DE
 2546 0DE0  CD D82A     	CALL	NUMBO1		; Zahl ausgeben
 2547 0DE3  21 1D58     	LD	HL,U1D0F	; Text "Bytes", CR, LF
 2548 0DE6  C3 C5F1     	JP	TEXTOE		; Textausgabe
 2549                   ;
 2550                   ; *L - Laden, Uebersetzen und Starten
 2551                   ;
 2552 0DE9  2A 2189     STAR_L:	LD	HL,(Z1000)	; Anfang BASIC-Programm
 2553 0DEC  7C          	LD	A,H
 2554 0DED  B5          	OR	L
 2555 0DEE  28 18       	JR	Z,U0E38		; kein BASIC-Programm im Speicher
 2556 0DF0  21 1CBF     	LD	HL,U1C76	; Text 'Programm wurde geloescht!'
 2557 0DF3  CD 1AAE     	CALL	U1AE5		; anzeigen
 2558 0DF6  21 0000     	LD	HL,0		; Programm loeschen
 2559 0DF9  22 2189     	LD	(Z1000),HL	; Anfang BASIC-Programm
 2560 0DFC  21 218B     	LD	HL,U21F3
 2561 0DFF  22 03D7     	LD	(SVARPT),HL	; Programmende+1
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  36
BAC85   Z80

 2562 0E02  22 03D9     	LD	(DVARPT),HL
 2563 0E05  22 03DB     	LD	(FSLPTR),HL	; erste freie Adresse hinter den Variablen
 2564 0E08  CD 0E31     U0E38:	CALL	STAR_A		; Einlesen ASCII-File
 2565 0E0B  3A 0053     	LD	A,(U0043)
 2566 0E0E  B7          	OR	A		; fehlerfrei eingelesen?
 2567 0E0F  C0          	RET	NZ		; nein
 2568 0E10  2A 0047     	LD	HL,(U0033)	; Ende ASCII-File
 2569 0E13  36 1D       	LD	(HL),1DH	; RUN anhaengen
 2570 0E15  23          	INC	HL
 2571 0E16  22 0047     	LD	(U0033),HL	; Ende ASCII-File
 2572 0E19  C3 0EC7     	JP	STAR_T		; Uebersetzen ASCII-File nach BASIC
 2573                   ;
 2574                   ; CSAVE - Sonderbehandlung
 2575                   ;
 2576 0E1C  AF          CSAVE:	XOR	A		; kein Kopierschutz
 2577 0E1D  32 035D     	LD	(DATBYT),A
 2578 0E20  CD DCB0     	CALL	CASS01		; *.SSS Name holen
 2579 0E23  2A 03D7     	LD	HL,(SVARPT)	; Programmende+1
 2580 0E26  11 2189     	LD	DE,Z1000	; Anfang BASIC-Programm
 2581 0E29  B7          	OR	A
 2582 0E2A  ED 52       	SBC	HL,DE		; Laenge des BASICODE-Programms
 2583 0E2C  44          	LD	B,H
 2584 0E2D  4D          	LD	C,L
 2585                   ;	LD	DE,Z1000	; Anfang BASIC-Programm (doppelt gemoppelt ???)
 2586 0E2E  C3 DD57     	JP	CSAVE0		; BASIC-Programm abspeichern
 2587                   ;
 2588                   ; *A - Einlesen ASCII-File
 2589                   ;
 2590 0E31  CD 18E4     STAR_A:	CALL	U18EC		; BASICODE Bandeingabe vorbereiten
 2591 0E34  CD 192E     U0E67:	CALL	BCSYN		; Synchronisation mit Frequenzmessung
 2592 0E37  3E FF       	LD	A,0FFH
 2593 0E39  32 0053     	LD	(U0043),A
 2594 0E3C  2A 03D7     	LD	HL,(SVARPT)	; Programmende+1
 2595 0E3F  22 0045     	LD	(U0031),HL	; Beginn ASCII-File
 2596 0E42  CD 199F     U0E75:	CALL	BCIN		; ein Byte lesen
 2597 0E45  38 FB       	JR	C,U0E75		; Fehler, wiederholen
 2598 0E47  C2 180F     	JP	NZ,BCIOLD	; Taste gedrueckt -> ISR (Eingabe) zurueckstellen
 2599 0E4A  FE 02       	CP	2
 2600 0E4C  28 08       	JR	Z,U0E89		; Startbyte erkannt
 2601 0E4E  21 1C47     	LD	HL,U1BFE	; Text 'kein BASICODE-Programm!'
 2602 0E51  CD 1AAE     	CALL	U1AE5		; anzeigen
 2603 0E54  18 DE       	JR	U0E67
 2604                   	;
 2605 0E56  CD 199F     U0E89:	CALL	BCIN		; ein Byte lesen
 2606 0E59  38 18       	JR	C,U0EA6		; Fehler oder letztes Byte
 2607 0E5B  20 26       	JR	NZ,U0EB6	; Taste gedrueckt
 2608 0E5D  E5          	PUSH	HL
 2609 0E5E  ED 72       	SBC	HL,SP		; Stack erreicht?
 2610 0E60  E1          	POP	HL
 2611 0E61  38 0C       	JR	C,U0EA2
 2612 0E63  CD 1AAB     	CALL	U0ECA		; 'Speichergrenze erreicht!'
 2613 0E66  21 FFF8     	LD	HL,-8
 2614 0E69  39          	ADD	HL,SP
 2615 0E6A  2B          	DEC	HL
 2616 0E6B  36 0D       	LD	(HL),CR
 2617 0E6D  18 14       	JR	U0EB6
 2618                   	;
 2619 0E6F  77          U0EA2:	LD	(HL),A		; Byte eintragen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  37
BAC85   Z80

 2620 0E70  23          	INC	HL		; naechste Adresse
 2621 0E71  18 E3       	JR	U0E89		; und weiter
 2622                   	;
 2623 0E73  2B          U0EA6:	DEC	HL
 2624 0E74  AF          	XOR	A		; A=0, wenn OK
 2625 0E75  D9          	EXX
 2626 0E76  24          	INC	H		; Pruefsumme
 2627 0E77  25          	DEC	H		; richtig?
 2628 0E78  D9          	EXX
 2629 0E79  28 0A       	JR	Z,U0EB8		; ja
 2630 0E7B  E5          	PUSH	HL
 2631 0E7C  21 1BEA     	LD	HL,U1BA1	; Text 'Lesefehler erkannt!'
 2632 0E7F  CD 1AAE     	CALL	U1AE5		; anzeigen
 2633 0E82  E1          	POP	HL
 2634 0E83  3E FF       U0EB6:	LD	A,0FFH
 2635 0E85  32 0053     U0EB8:	LD	(U0043),A	; FF=Lesefehler, 00=OK
 2636 0E88  22 0047     	LD	(U0033),HL	; Ende ASCII-File
 2637 0E8B  CD 180F     	CALL	BCIOLD		; umgeleitete ISR (Eingabe) zurueckstellen
 2638 0E8E  3A 003B     	LD	A,(FLAGS)
 2639 0E91  F6 02       	OR	2		; Bit 1 setzen, ASCII-File im Speicher
 2640 0E93  32 003B     	LD	(FLAGS),A
 2641 0E96  C9          	RET
 2642                   ;
 2643                   ; *W - Retten ASCII-File
 2644                   ;
 2645 0E97  3A 003B     STAR_W:	LD	A,(FLAGS)
 2646 0E9A  E6 02       	AND	2		; Bit 1?
 2647 0E9C  CA 1AA2     	JP	Z,U1ADC		; kein ASCII-File im Speicher!
 2648 0E9F  CD 1911     	CALL	U1919		; BASICODE Bandsusgabe vorbereiten
 2649 0EA2  CD 197C     	CALL	VTON		; 5 Sekunden Vorton
 2650 0EA5  26 00       	LD	H,0		; Startwert fuer Pruefsumme
 2651 0EA7  D9          	EXX
 2652 0EA8  3E 02       	LD	A,2		; Startbyte STX (Start of Text)
 2653 0EAA  CD 19FD     	CALL	BCOUT		; ein Byte schreiben
 2654 0EAD  2A 0045     	LD	HL,(U0031)	; Beginn ASCII-File
 2655 0EB0  ED 5B 0047  	LD	DE,(U0033)	; Ende ASCII-File
 2656 0EB4  7E          U0EED:	LD	A,(HL)		; Zeichen aus Speicher holen
 2657 0EB5  23          	INC	HL
 2658 0EB6  CD 19FD     	CALL	BCOUT		; ein Byte schreiben
 2659 0EB9  CD 062E     	CALL	U0622		; Taste gedrueckt?
 2660 0EBC  C2 1802     	JP	NZ,BCOOLD	; ja, umgeleitete ISR (Ausgabe) zurueckstellen
 2661 0EBF  CD C689     	CALL	CPREG		; ASCII-File fertig?
 2662 0EC2  20 F0       	JR	NZ,U0EED	; nein, weiter
 2663 0EC4  C3 17F0     	JP	U18D0		; Ende-Byte, Pruefbyte und ISR rueckstellen
 2664                   ;
 2665                   ; *T - Uebersetzen ASCII-File ==> BASIC
 2666                   ;
 2667 0EC7  CD 1A7D     STAR_T:	CALL	U1AB5		; ASCII-File und BASIC-Programm im Speicher?
 2668 0ECA  CB 4F       	BIT	1,A
 2669 0ECC  CA 1AA2     	JP	Z,U1ADC		; kein ASCII-File im Speicher!
 2670 0ECF  3A 003B     	LD	A,(FLAGS)
 2671 0ED2  F6 01       	OR	1		; Bit 0 setzen
 2672 0ED4  E6 BF       	AND	0BFH		; Bit 6 ruecksetzen
 2673 0ED6  32 003B     	LD	(FLAGS),A
 2674 0ED9  2A 0045     	LD	HL,(U0031)	; Beginn ASCII-File
 2675 0EDC  22 0049     	LD	(CPOINT),HL	; Pufferzeiger
 2676 0EDF  CD 0968     	CALL	U09AE		; IRM-Adresse auf links/unten einstellen
 2677 0EE2  CD F018     	CALL	IRMON
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  38
BAC85   Z80

 2678 0EE5  2A B7BE     	LD	HL,(UOUT1+1)	; Adresse der aktuellen Druckerausgabe
 2679 0EE8  22 0051     	LD	(U0041),HL	; hier merken
 2680 0EEB  21 0986     	LD	HL,U09DD	; Zeichen auf untere Zeile malen
 2681 0EEE  22 B7BE     	LD	(UOUT1+1),HL	; jetzt hier eintragen
 2682 0EF1  2A B7B9     	LD	HL,(OUTAB)	; Adresse Ausgabezeiger
 2683 0EF4  22 003C     	LD	(XPOS2),HL	; zwischenspeichern
 2684 0EF7  21 129A     	LD	HL,U12DF+1	; Zeiger auf 02=UOT1
 2685 0EFA  22 B7B9     	LD	(OUTAB),HL	; Ausgaberoutine umstellen, damit Anzeige auf
 2686 0EFD  C3 0772     	JP	IOFRET		; der unteren Bildschirmzeile erfolgt
 2687                   ;
 2688                   ; *C - Uebersetzen BASIC ==> ASCII
 2689                   ;
 2690 0F00  CD 1A7D     STAR_C:	CALL	U1AB5		; ASCII-File und BASIC-Programm im Speicher?
 2691 0F03  CB 47       	BIT	0,A		; BASIC-Programm?
 2692 0F05  20 06       	JR	NZ,U0F52	; vorhanden
 2693 0F07  21 1CD9     	LD	HL,U1C90	; Text 'kein Programm im Speicher!'
 2694 0F0A  C3 1AAE     	JP	U1AE5		; anzeigen
 2695                   	;
 2696 0F0D  21 2188     U0F52:	LD	HL,Z1000-1	; Anfang BASIC-Programm
 2697 0F10  3A 003B     U0F55:	LD	A,(FLAGS)
 2698 0F13  E6 3F       	AND	3FH		; Bit 6 und 7 (Fehler) ruecksetzen
 2699 0F15  32 003B     	LD	(FLAGS),A
 2700 0F18  23          	INC	HL
 2701 0F19  7E          	LD	A,(HL)		; 2x 00 hintereinander
 2702 0F1A  23          	INC	HL		; kennzeichnet Programmende
 2703 0F1B  B6          	OR	(HL)
 2704 0F1C  CA 0FCD     	JP	Z,U1012		; fertig
 2705 0F1F  23          	INC	HL
 2706 0F20  CD 061F     	CALL	U0613		; Taste gedrueckt?
 2707 0F23  FE 03       	CP	3		; BRK?
 2708 0F25  C8          	RET	Z		; Abbruch mit BRK
 2709 0F26  5E          	LD	E,(HL)
 2710 0F27  23          	INC	HL
 2711 0F28  56          	LD	D,(HL)		; DE = Zeilennummer
 2712 0F29  CD C8BD     U0F6E:	CALL	TCHAR		; naechstes gueltiges Zeichen holen
 2713 0F2C  B7          	OR	A
 2714 0F2D  28 7A       	JR	Z,U0FEE		; 0 = Zeilenende
 2715 0F2F  FE 22       	CP	'"'
 2716 0F31  28 6D       	JR	Z,U0FE5		; Beginn einer Zeichenkette
 2717 0F33  FE 8E       	CP	8EH		; REM?
 2718 0F35  28 69       	JR	Z,U0FE5		; ja
 2719 0F37  FE 80       	CP	80H
 2720 0F39  38 EE       	JR	C,U0F6E		; kein Token
 2721 0F3B  E5          	PUSH	HL
 2722 0F3C  0E 80       	LD	C,80H		; Bit 7 setzen: Regelverstoss
 2723 0F3E  FE 8B       	CP	8BH		; RESTORE?
 2724 0F40  20 05       	JR	NZ,U0F8C
 2725 0F42  CD C8BD     	CALL	TCHAR		; naechstes gueltiges Zeichen holen
 2726 0F45  18 4D       	JR	U0FD9
 2727                   	;
 2728 0F47  FE B1       U0F8C:	CP	0B1H		; AND?
 2729 0F49  28 08       	JR	Z,U0F98
 2730 0F4B  FE B2       	CP	0B2H		; OR?
 2731 0F4D  28 04       	JR	Z,U0F98
 2732 0F4F  FE AA       	CP	0AAH		; NOT?
 2733 0F51  20 23       	JR	NZ,U0FBB
 2734                   	;
 2735                   ; logische Operationen mit AND, OR oder NOT erfordern Klammern,
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  39
BAC85   Z80

 2736                   ; wenn Vergleichsoperatioren benutzt werden
 2737 0F53  CD C8BD     U0F98:	CALL	TCHAR		; naechstes gueltiges Zeichen holen
 2738 0F56  FE 28       	CP	'('		; folgt eine Klammer?
 2739 0F58  28 07       	JR	Z,U0FA6
 2740 0F5A  7E          U0F9F:	LD	A,(HL)
 2741 0F5B  23          	INC	HL
 2742 0F5C  CD 10B2     	CALL	U10F7		; Test auf Verleichsoperatoren
 2743 0F5F  20 F9       	JR	NZ,U0F9F	; weitersuchen bis Zeilenende
 2744 0F61  E1          U0FA6:	POP	HL
 2745 0F62  E5          	PUSH	HL
 2746 0F63  2B          U0FA8:	DEC	HL
 2747 0F64  7E          	LD	A,(HL)
 2748 0F65  FE 20       	CP	' '
 2749 0F67  28 FA       	JR	Z,U0FA8		; Leerzeichen uebergehen
 2750 0F69  FE 29       	CP	')'
 2751 0F6B  28 27       	JR	Z,U0FD9		; Klammer zu gefunden, OK
 2752 0F6D  2B          U0FB2:	DEC	HL
 2753 0F6E  7E          	LD	A,(HL)
 2754 0F6F  CD 10B6     	CALL	U10FB
 2755 0F72  20 F9       	JR	NZ,U0FB2
 2756 0F74  18 1E       	JR	U0FD9
 2757                   	;
 2758                   ; auf NEXT muss Variable folgen
 2759 0F76  FE 82       U0FBB:	CP	82H		; NEXT?
 2760 0F78  20 10       	JR	NZ,U0FCF
 2761 0F7A  CD C8BD     	CALL	TCHAR		; naechstes gueltiges Zeichen holen
 2762 0F7D  FE 5B       	CP	'Z'+1
 2763 0F7F  30 06       	JR	NC,U0FCC	; auf NEXT folgt keine Variable
 2764 0F81  FE 41       	CP	'A'
 2765 0F83  38 02       	JR	C,U0FCC		; auf NEXT folgt keine Variable
 2766 0F85  3E 01       	LD	A,1
 2767 0F87  3D          U0FCC:	DEC	A		; Z=1, wenn Variable folgt
 2768 0F88  18 0A       	JR	U0FD9
 2769                   	;
 2770 0F8A  21 1E5C     U0FCF:	LD	HL,U1E13	; Tabelle mit erlaubten Token
 2771 0F8D  01 002E     	LD	BC,U1E41-U1E13	; Anzahl
 2772 0F90  ED B1       	CPIR
 2773 0F92  0E 40       	LD	C,40H		; Bit 6 setzen: unerlaubter Befehl
 2774 0F94  E1          U0FD9:	POP	HL
 2775 0F95  28 92       	JR	Z,U0F6E
 2776 0F97  3A 003B     	LD	A,(FLAGS)
 2777 0F9A  B1          	OR	C		; Bit 6 oder 7 setzen
 2778 0F9B  32 003B     	LD	(FLAGS),A
 2779 0F9E  18 89       	JR	U0F6E
 2780                   	;
 2781                   ;Zeichenkette oder REM
 2782 0FA0  4F          U0FE5:	LD	C,A		; C = '"'
 2783 0FA1  23          U0FE6:	INC	HL		; naechstes Zeichen
 2784 0FA2  7E          	LD	A,(HL)		; holen
 2785 0FA3  B9          	CP	C		; Ende der Zeichenkette?
 2786 0FA4  28 83       	JR	Z,U0F6E		; ja, weiter testen
 2787 0FA6  B7          	OR	A		; 0 = Zeilenende
 2788 0FA7  20 F8       	JR	NZ,U0FE6	; ansonsten weiter nach dem Ende der Zeichenkette suchen
 2789                   	;
 2790                   ;Zeilenende
 2791 0FA9  3A 003B     U0FEE:	LD	A,(FLAGS)
 2792 0FAC  CB 77       	BIT	6,A
 2793 0FAE  20 07       	JR	NZ,U0FFC	; -> unerlaubter Befehl
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  40
BAC85   Z80

 2794 0FB0  CB 7F       	BIT	7,A
 2795 0FB2  20 08       	JR	NZ,U1001	; -> Regelverstoss
 2796 0FB4  C3 0F10     	JP	U0F55
 2797                   	;
 2798 0FB7  21 1C76     U0FFC:	LD	HL,U1C2D	; Text 'unerlaubter BASICODE-Befehl!'
 2799 0FBA  18 03       	JR	U1004
 2800                   	;
 2801 0FBC  21 1C93     U1001:	LD	HL,U1C4A	; Text 'Regelverstoss!'
 2802 0FBF  D5          U1004:	PUSH	DE
 2803 0FC0  CD 1AAE     	CALL	U1AE5		; anzeigen
 2804 0FC3  D1          	POP	DE
 2805 0FC4  CD C4BB     	CALL	ZPOIT
 2806 0FC7  D5          	PUSH	DE
 2807 0FC8  23          	INC	HL
 2808 0FC9  23          	INC	HL
 2809 0FCA  C3 C401     	JP	EDITO2+3
 2810                   	;
 2811                   ; BASIC-Programm fertig geprueft, Beginn der Konvertierung BASIC -> ASCII
 2812 0FCD  E5          U1012:	PUSH	HL		; Ende BASIC-Programm
 2813 0FCE  11 218A     	LD	DE,Z1000+1	; Beginn BASIC-Programm
 2814 0FD1  B7          	OR	A		; CY=0
 2815 0FD2  ED 52       	SBC	HL,DE
 2816 0FD4  4D          	LD	C,L
 2817 0FD5  44          	LD	B,H		; BC = Laenge BASIC-Programm
 2818 0FD6  21 FFD0     	LD	HL,-48		; 48 Byte fuer Stack frei halten
 2819 0FD9  39          	ADD	HL,SP
 2820 0FDA  EB          	EX	DE,HL		; DE = 48 Byte vor Stack
 2821 0FDB  E1          	POP	HL		; Ende BASIC-Programm
 2822 0FDC  ED B8       	LDDR			; BASIC-Programm hier hin verschieben
 2823 0FDE  ED 43 2189  	LD	(Z1000),BC	; kein BASIC-Programm mehr im Speicher
 2824 0FE2  EB          	EX	DE,HL		; HL = Beginn des verschobenen BASIC-Programms
 2825 0FE3  01 218B     	LD	BC,U21F3	; Hier ASCII-File ablegen
 2826 0FE6  ED 43 03D7  	LD	(SVARPT),BC	; Programmende+1
 2827 0FEA  3E 0D       	LD	A,CR
 2828 0FEC  CD 1A5B     	CALL	U1A8A		; Zeichen im ASCII-File ablegen und malen
 2829 0FEF  23          U1034:	INC	HL
 2830 0FF0  5E          	LD	E,(HL)
 2831 0FF1  23          	INC	HL
 2832 0FF2  56          	LD	D,(HL)
 2833 0FF3  ED 53 0051  	LD	(U0041),DE	; Zeilennummer ablegen
 2834 0FF7  AF          	XOR	A		; Zaehler fuer Zeilenlaenge
 2835 0FF8  08          	EX	AF,AF'
 2836 0FF9  E5          	PUSH	HL		; Zeiger auf BASIC-Programm
 2837 0FFA  C5          	PUSH	BC		; Zeiger auf ASCII-File
 2838 0FFB  AF          	XOR	A
 2839 0FFC  06 98       	LD	B,98H
 2840 0FFE  CD D6AE     	CALL	SGN1		; Zeilennummer
 2841 1001  CD D834     	CALL	NUMKON		; konvertieren
 2842 1004  C1          	POP	BC
 2843 1005  CD C8BD     U104A:	CALL	TCHAR		; naechstes gueltiges Zeichen holen
 2844 1008  B7          	OR	A
 2845 1009  28 05       	JR	Z,U1055
 2846 100B  CD 1A5B     	CALL	U1A8A		; Zeichen im ASCII-File ablegen und malen
 2847 100E  18 F5       	JR	U104A
 2848                   	;
 2849 1010  E1          U1055:	POP	HL
 2850 1011  3A 003B     	LD	A,(FLAGS)
 2851 1014  F6 40       	OR	40H		; Bit 6 setzen (unerlaubter Befehl)
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  41
BAC85   Z80

 2852 1016  32 003B     	LD	(FLAGS),A
 2853 1019  59          U105E:	LD	E,C
 2854 101A  50          	LD	D,B
 2855 101B  CD C689     	CALL	CPREG		; Vergleiche Register DE mit HL
 2856 101E  DA 1AAB     	JP	C,U0ECA		; 'Speichergrenze erreicht!'
 2857 1021  CD C8BD     	CALL	TCHAR		; naechstes gueltiges Zeichen holen
 2858 1024  B7          	OR	A
 2859 1025  28 51       	JR	Z,U10BD
 2860 1027  FE 22       	CP	'"'
 2861 1029  28 3C       	JR	Z,U10AC		; Zeichenkette
 2862 102B  FE 80       	CP	80H
 2863 102D  30 05       	JR	NC,U1079	; Token
 2864 102F  CD 1A5B     	CALL	U1A8A		; Zeichen im ASCII-File ablegen und malen
 2865 1032  18 E5       	JR	U105E
 2866                   	;
 2867                   ; Token decodieren
 2868 1034  FE BF       U1079:	CP	0BFH		; LN?
 2869 1036  11 1D54     	LD	DE,U1D0B	; Umwandeln in LOG
 2870 1039  28 1F       	JR	Z,U109F
 2871 103B  F5          	PUSH	AF
 2872 103C  E5          	PUSH	HL
 2873 103D  C5          	PUSH	BC
 2874 103E  21 1E85     	LD	HL,U1E3C	; GOSUB, GOTO, STEP, THEN, TO
 2875 1041  01 0005     	LD	BC,5		; 5 Token testen
 2876 1044  ED B1       	CPIR
 2877 1046  20 0A       	JR	NZ,U1097	; keiner der 5 Token
 2878 1048  F5          	PUSH	AF
 2879 1049  3A 003B     	LD	A,(FLAGS)
 2880 104C  F6 40       	OR	40H		; Bit 6 setzen (unerlaubter Befehl)
 2881 104E  32 003B     	LD	(FLAGS),A
 2882 1051  F1          	POP	AF
 2883 1052  CD C79A     U1097:	CALL	LIST11		; Token aufloesen
 2884 1055  C1          	POP	BC
 2885 1056  E1          	POP	HL
 2886 1057  CD 1A5B     U109C:	CALL	U1A8A		; Zeichen im ASCII-File ablegen und malen
 2887 105A  1A          U109F:	LD	A,(DE)
 2888 105B  13          	INC	DE
 2889 105C  B7          	OR	A
 2890 105D  F2 1057     	JP	P,U109C
 2891 1060  F1          	POP	AF
 2892 1061  FE 8E       	CP	8EH	; REM?
 2893 1063  20 B4       	JR	NZ,U105E	; weiter im Text
 2894 1065  18 03       	JR	U10AF		; den Rest nach REM einfach kopieren
 2895                   	;
 2896 1067  CD 1A5B     U10AC:	CALL	U1A8A		; Zeichen im ASCII-File ablegen und malen
 2897 106A  5F          U10AF:	LD	E,A
 2898 106B  23          U10B0:	INC	HL
 2899 106C  7E          	LD	A,(HL)
 2900 106D  B7          	OR	A
 2901 106E  28 08       	JR	Z,U10BD		; Zeilenende
 2902 1070  CD 1A5B     	CALL	U1A8A		; Zeichen im ASCII-File ablegen und malen
 2903 1073  BB          	CP	E
 2904 1074  20 F5       	JR	NZ,U10B0
 2905 1076  18 A1       	JR	U105E
 2906                   	;
 2907 1078  08          U10BD:	EX	AF,AF'
 2908 1079  FE 3D       	CP	61		; Zeile darf max. 60 Zeichen lang sein
 2909 107B  38 16       	JR	C,U10D8		; OK
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  42
BAC85   Z80

 2910 107D  C5          	PUSH	BC
 2911 107E  E5          	PUSH	HL
 2912 107F  21 1D3B     	LD	HL,U1CF2	; Zeile
 2913 1082  CD C5F1     	CALL	TEXTOE
 2914 1085  2A 0051     	LD	HL,(U0041)	; Zeilennummer
 2915 1088  CD D829     	CALL	NUMBO
 2916 108B  21 1D42     	LD	HL,U1CF9	; ist zu lang.
 2917 108E  CD C5F1     	CALL	TEXTOE
 2918 1091  E1          	POP	HL
 2919 1092  C1          	POP	BC
 2920 1093  3E 0D       U10D8:	LD	A,CR
 2921 1095  CD 1A5B     	CALL	U1A8A		; Zeichen im ASCII-File ablegen und malen
 2922 1098  23          	INC	HL
 2923 1099  7E          	LD	A,(HL)
 2924 109A  23          	INC	HL
 2925 109B  B6          	OR	(HL)		; Programmende?
 2926 109C  C2 0FEF     	JP	NZ,U1034	; weiter konvertieren
 2927 109F  ED 43 0047  	LD	(U0033),BC	; Ende ASCII-File
 2928 10A3  2A 03D7     	LD	HL,(SVARPT)	; Programmende+1
 2929 10A6  22 0045     	LD	(U0031),HL	; Beginn ASCII-File
 2930 10A9  3A 003B     	LD	A,(FLAGS)
 2931 10AC  F6 02       	OR	2		; Bit 1 setzen: ASCII-File im Speicher
 2932 10AE  32 003B     	LD	(FLAGS),A
 2933 10B1  C9          	RET
 2934                   ;
 2935                   ; Setze Regelverstoss, wenn Vergleichsoperatoren ohne Klammer benutzt wurden
 2936                   ;
 2937 10B2  FE B4       U10F7:	CP	0B4H	; =
 2938 10B4  28 0F       	JR	Z,U110A
 2939 10B6  FE 3A       U10FB:	CP	':'
 2940 10B8  C8          	RET	Z		; Z=1, neuer Befehl
 2941 10B9  B7          	OR	A
 2942 10BA  C8          	RET	Z		; Z=1, Zeilenende
 2943 10BB  FE 80       	CP	80H
 2944 10BD  D8          	RET	C		; C=1, ASCII-Zeichen (kein Token)
 2945 10BE  FE B3       	CP	0B3H	; >
 2946 10C0  28 03       	JR	Z,U110A
 2947 10C2  FE B5       	CP	0B5H	; <
 2948 10C4  C0          	RET	NZ
 2949 10C5  3A 003B     U110A:	LD	A,(FLAGS)
 2950 10C8  B1          	OR	C		; Regelverstoss setzen (Klammer fehlt)
 2951 10C9  32 003B     	LD	(FLAGS),A
 2952 10CC  AF          	XOR	A		; Z=1
 2953 10CD  C9          	RET
 2954                   ;
 2955                   ; *K - Listen ASCII-File
 2956                   ;
 2957 10CE  3A 003B     STAR_K:	LD	A,(FLAGS)
 2958 10D1  E6 02       	AND	2		; Bit 1 gesetzt?
 2959 10D3  CA 1AA2     	JP	Z,U1ADC		; kein ASCII-File im Speicher!
 2960 10D6  CD C791     	CALL	LCREG
 2961 10D9  2A 0045     	LD	HL,(U0031)	; Beginn ASCII-File
 2962 10DC  ED 5B 0047  	LD	DE,(U0033)	; Ende ASCII-File
 2963 10E0  7E          U1125:	LD	A,(HL)
 2964 10E1  23          	INC	HL
 2965 10E2  FE 0D       	CP	CR
 2966 10E4  28 0F       	JR	Z,U113A		; neue Zeile
 2967 10E6  FE 20       	CP	20H
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  43
BAC85   Z80

 2968 10E8  30 02       	JR	NC,U1131
 2969 10EA  3E 23       	LD	A,'#'		; statt Steuerzeichen ein '#' anzeigen
 2970 10EC  CD DDD5     U1131:	CALL	CO		; Zeichen anzeigen
 2971 10EF  CD C689     U1134:	CALL	CPREG		; Vergleiche Register DE mit HL
 2972 10F2  20 EC       	JR	NZ,U1125	; weiter bis zum Ende ASCII-File
 2973 10F4  C9          	RET
 2974                   	;
 2975 10F5  E5          U113A:	PUSH	HL
 2976 10F6  CD CB61     	CALL	CRWDY2		; Anzeige CR, LF, Dummyzeichen
 2977 10F9  CD C767     	CALL	LIST9		; Stop nach vorgegebener Zeilenanzahl
 2978 10FC  E1          	POP	HL
 2979 10FD  CD 061F     	CALL	U0613		; Taste gedrueckt?
 2980 1100  FE 03       	CP	3
 2981 1102  20 EB       	JR	NZ,U1134	; weiter anzeigen
 2982 1104  C9          	RET
 2983                   ;
 2984                   ; GOTO 20	Programmstart, System-Reset, Loeschen aller Variablen
 2985                   ; PE:	A	Groesse des Stringraums in Byte (256 Byte werden mindestens benutzt)
 2986                   ;	CC(0)	Vordergrundfarbe
 2987                   ;	CC(1)	Hintergrundfarbe
 2988                   ; PA:	HO=39	Anzahl Textspalten-1
 2989                   ;	VE=31	Anzahl Textzeilen-1
 2990                   ;	HG=320	Bildschirmbreite in Pixeln
 2991                   ;	VG=240	Bildschirmhoehe in Piceln
 2992                   ;	CN=0	Voreinstellung = zeichnen (nicht loeschen	
 2993                   ;	IN=0
 2994                   ;	IN$=""
 2995                   ;	SR$=""
 2996                   ;
 2997 1105  CD 1F13     GO20:	CALL	U1ECA		; Farbe nach Variable CC einstellen
 2998 1108  E1          	POP	HL
 2999 1109  D1          	POP	DE
 3000 110A  C1          	POP	BC
 3001 110B  F1          	POP	AF
 3002 110C  08          	EX	AF,AF'
 3003 110D  D9          	EXX
 3004 110E  3A 003B     	LD	A,(FLAGS)
 3005 1111  E6 F4       	AND	0F4H		; Bit 0, 1 und 3 ruecksetzen
 3006 1113  32 003B     	LD	(FLAGS),A
 3007                   ; 02.01.2024: hier Loeschen des Bildschirms erforderlich? - ja.
 3008 1116  CD 05DC     	CALL	CLS		; Bildschirm loeschen
 3009 1119  AF          	XOR	A
 3010 111A  CD C8DF     	CALL	RESTO
 3011 111D  01 4100     	LD	BC,4100H	; A
 3012 1120  CD 1644     	CALL	U167B		; Wert der Variable A nach HL holen
 3013 1123  11 0100     	LD	DE,256		; Mindestgroesse
 3014 1126  CD C689     	CALL	CPREG		; Vergleiche Register DE mit HL
 3015 1129  38 01       	JR	C,U116E		; Mindestgroesse 256 benutzen
 3016 112B  EB          	EX	DE,HL		; Wert der Variablen A benutzen
 3017 112C  AF          U116E:	XOR	A		; Z=1
 3018 112D  CD C9B2     	CALL	CLEAR+8		; Variablen loeschen
 3019 1130  21 1E8A     	LD	HL,U1E41	; vordefinierte Variablen
 3020 1133  ED 5B 03D7  	LD	DE,(SVARPT)	; Programmende+1
 3021 1137  01 0030     	LD	BC,U1E71-U1E41
 3022 113A  ED B0       	LDIR			; Variablen mit Startwerten belegen
 3023 113C  EB          	EX	DE,HL		; HL=Ende der belegten Variablen
 3024 113D  22 03D9     	LD	(DVARPT),HL
 3025 1140  22 03DB     	LD	(FSLPTR),HL	; erste freie Adresse hinter den Variablen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  44
BAC85   Z80

 3026 1143  CD 05C4     	CALL	U05C5		; Fenster auf volle Groesse stellen
 3027 1146  D9          	EXX
 3028 1147  08          	EX	AF,AF'
 3029 1148  F5          	PUSH	AF
 3030 1149  C5          	PUSH	BC
 3031 114A  D5          	PUSH	DE
 3032 114B  E9          	JP	(HL)
 3033                   ;
 3034                   ; GOSUB 110	Setzen des Cursors an eine bestimmte Position
 3035                   ;		Uebergabe der Position in den Variablen HO und VE
 3036                   ;
 3037 114C  CD 1F13     GO110:	CALL	U1ECA		; Farbe nach Variable CC einstellen
 3038 114F  01 5645     	LD	BC,'VE'
 3039 1152  CD 1644     	CALL	U167B		; Wert der Variable VE nach HL holen
 3040 1155  7D          	LD	A,L
 3041 1156  FE 20       	CP	32		; ausserhalb?
 3042 1158  38 07       	JR	C,U11A3		; nein
 3043 115A  CB 7F       	BIT	7,A
 3044 115C  3E 1F       	LD	A,31		; Position ganz unten
 3045 115E  28 01       	JR	Z,U11A3
 3046 1160  AF          	XOR	A		; Position ganz oben
 3047 1161  F5          U11A3:	PUSH	AF
 3048 1162  01 484F     	LD	BC,'HO'
 3049 1165  CD 1644     	CALL	U167B		; Wert der Variable HO nach HL holen
 3050 1168  7D          	LD	A,L
 3051 1169  FE 28       	CP	40		; ausserhalb?
 3052 116B  38 07       	JR	C,U11B6		; nein
 3053 116D  CB 7F       	BIT	7,A
 3054 116F  3E 27       	LD	A,39		; Position ganz rechts
 3055 1171  28 01       	JR	Z,U11B6
 3056 1173  AF          	XOR	A		; Position ganz links
 3057 1174  6F          U11B6:	LD	L,A
 3058 1175  F1          	POP	AF
 3059 1176  67          	LD	H,A
 3060                   ;	JP	U05E1		; Cursor auf HL setzen
 3061                   ;
 3062                   ; Cursor auf HL setzen
 3063                   ;	
 3064 1177  C5          U05E1:	PUSH	BC
 3065 1178  CD F018     	CALL	IRMON		; veraendert BC-Register
 3066 117B  22 B7A0     	LD	(CURSO),HL
 3067 117E  18 07       	JR	U05F1
 3068                   ;
 3069                   ; aktuelle Cursorposition nach HL
 3070                   ;	
 3071 1180  C5          U05EA:	PUSH	BC
 3072 1181  CD F018     	CALL	IRMON		; veraendert BC-Register
 3073 1184  2A B7A0     	LD	HL,(CURSO)
 3074 1187  CD F01B     U05F1:	CALL	IRMOFF
 3075 118A  C1          	POP	BC		; veraendert BC-Register
 3076 118B  C9          	RET
 3077                   ;
 3078                   ; GOSUB 120	Ermittlung der Position des Cursors
 3079                   ;		Rueckgabe der Position in den Variablen HO und VE
 3080                   ;
 3081 118C  CD 1180     GO120:	CALL	U05EA		; Cursorposition nach HL
 3082 118F  E5          	PUSH	HL
 3083 1190  01 484F     	LD	BC,'HO'
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  45
BAC85   Z80

 3084 1193  CD CF48     	CALL	DIM7		; Adresse der Variable HO nach DE holen
 3085 1196  E1          	POP	HL
 3086 1197  E5          	PUSH	HL
 3087 1198  7D          	LD	A,L		; A=Spalte
 3088 1199  CD 11A3     	CALL	U11D3		; Wert in Variable eintragen
 3089 119C  01 5645     	LD	BC,'VE'
 3090 119F  CD CF48     	CALL	DIM7		; Adresse der Variable VE nach DE holen
 3091 11A2  F1          	POP	AF		; A=Zeile
 3092 11A3  6F          U11D3:	LD	L,A
 3093 11A4  26 00       	LD	H,0		; HL=Wert
 3094 11A6  C3 16D0     	JP	U1671		; in Variable eintragen
 3095                   ;
 3096                   ; GOSUB 200	Auslesen eines Tastendrucks
 3097                   ;		Rueckgabe des Zeichens in der Variablen IN$
 3098                   ;		Rueckgabe einer leeren Variable IN$, wenn keine Taste gedrueckt wurde
 3099                   ;
 3100 11A9  CD 061F     GO200:	CALL	U0613		; Taste gedrueckt?
 3101 11AC  18 03       	JR	U11E7
 3102                   ;
 3103                   ; GOSUB 210	Warten auf einen Tastendruck
 3104                   ;		Rueckgabe des Zeichens in der Variablen IN$
 3105                   ;
 3106 11AE  CD 0638     GO210:	CALL	U062C		; Eingabe ein Zeichen
 3107 11B1  FE 03       U11E7:	CP	3
 3108 11B3  20 05       	JR	NZ,U11F0
 3109 11B5  E1          	POP	HL
 3110 11B6  E1          	POP	HL
 3111 11B7  C3 C918     	JP	STOP
 3112                   	;
 3113 11BA  B7          U11F0:	OR	A
 3114 11BB  F5          	PUSH	AF
 3115 11BC  01 49CE     	LD	BC,'IN'+80H	; IN$
 3116 11BF  CD CF48     	CALL	DIM7		; Adresse der Variable IN$ nach DE holen
 3117 11C2  EB          	EX	DE,HL
 3118 11C3  36 00       	LD	(HL),0
 3119 11C5  F1          	POP	AF
 3120 11C6  5F          	LD	E,A
 3121 11C7  28 40       	JR	Z,U123F
 3122 11C9  FE 01       	CP	1
 3123 11CB  20 17       	JR	NZ,U121A
 3124 11CD  1E 7F       	LD	E,7FH
 3125 11CF  E5          	PUSH	HL
 3126 11D0  CD 1180     	CALL	U05EA		; Cursorposition nach HL
 3127 11D3  2C          	INC	L
 3128 11D4  2D          	DEC	L
 3129 11D5  E1          	POP	HL
 3130 11D6  28 31       	JR	Z,U123F
 3131 11D8  36 03       	LD	(HL),3
 3132 11DA  23          	INC	HL
 3133 11DB  23          	INC	HL
 3134 11DC  01 1D51     	LD	BC,U1D08
 3135 11DF  71          	LD	(HL),C
 3136 11E0  23          	INC	HL
 3137 11E1  70          	LD	(HL),B
 3138 11E2  18 25       	JR	U123F
 3139                   	;
 3140 11E4  3E 01       U121A:	LD	A,1
 3141 11E6  77          	LD	(HL),A
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  46
BAC85   Z80

 3142 11E7  23          	INC	HL
 3143 11E8  23          	INC	HL
 3144 11E9  D5          	PUSH	DE
 3145 11EA  E5          	PUSH	HL
 3146 11EB  CD D1E1     	CALL	STROP
 3147 11EE  E1          	POP	HL
 3148 11EF  73          	LD	(HL),E
 3149 11F0  23          	INC	HL
 3150 11F1  72          	LD	(HL),D
 3151 11F2  EB          	EX	DE,HL
 3152 11F3  D1          	POP	DE
 3153 11F4  73          	LD	(HL),E
 3154 11F5  7B          	LD	A,E
 3155 11F6  FE 08       	CP	8
 3156 11F8  38 08       	JR	C,U1238
 3157 11FA  FE 0C       	CP	0CH
 3158 11FC  30 04       	JR	NC,U1238
 3159 11FE  C6 14       	ADD	14H
 3160 1200  18 06       	JR	U123E
 3161                   	;
 3162 1202  FE 60       U1238:	CP	60H		; Kleinbuchstabe?
 3163 1204  38 03       	JR	C,U123F		; nein
 3164 1206  D6 20       	SUB	20H		; in Grossbuchstabe wandeln
 3165 1208  5F          U123E:	LD	E,A
 3166 1209  16 00       U123F:	LD	D,0
 3167 120B  D5          	PUSH	DE
 3168 120C  01 494E     	LD	BC,'IN'
 3169 120F  CD CF48     	CALL	DIM7		; Adresse der Variable IN nach DE holen
 3170 1212  E1          	POP	HL
 3171 1213  C3 16D0     	JP	U1671		; in Variable 'IN' eintragen
 3172                   ;
 3173                   ; Cursorposition ausserhalb bei GOSUB 220
 3174                   ;
 3175 1216  AF          U124C:	XOR	A
 3176 1217  18 EF       	JR	U123E
 3177                   ;
 3178                   ; GOSUB 220	Auslesen eines Zeichens vom Bildschirm
 3179                   ;		Uebergeben der Bildschirmposition in den Variablen HO und VE
 3180                   ;		Rueckgeben des Zeichens als numerischer Wert in der Variablen IN
 3181                   ;
 3182 1219  01 5645     GO220:	LD	BC,'VE'
 3183 121C  CD 1644     	CALL	U167B		; Wert der Variable VE nach HL holen
 3184 121F  7D          	LD	A,L
 3185 1220  FE 20       	CP	20H
 3186 1222  30 F2       	JR	NC,U124C	; VE ausserhalb!
 3187 1224  F5          	PUSH	AF
 3188 1225  01 484F     	LD	BC,'HO'
 3189 1228  CD 1644     	CALL	U167B		; Wert der Variable HO nach HL holen
 3190 122B  7D          	LD	A,L
 3191 122C  FE 28       	CP	40
 3192 122E  E1          	POP	HL		; H=Zeile
 3193 122F  30 E5       	JR	NC,U124C	; HO ausserhalb!
 3194 1231  6F          	LD	L,A		; L=Spalte
 3195 1232  CD 0668     	CALL	U0654		; Zeichen aus VRAM nach Register A lesen
 3196 1235  5F          	LD	E,A
 3197 1236  FE C9       	CP	0C9H		; C9 im VRAM ???
 3198 1238  20 C8       	JR	NZ,U1238	; nein, upcase
 3199 123A  18 CC       	JR	U123E		; in Variable IN uebergeben
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  47
BAC85   Z80

 3200                   ;
 3201                   ; GOSUB 260	Ermittlung einer Zufallszahl zwischen 0 und 1
 3202                   ;		Rueckgabe der Zahl in der Variablen RV
 3203                   ;
 3204 123C  AF          GO260:	XOR	A
 3205 123D  3C          	INC	A
 3206 123E  CD DA06     	CALL	RND+9
 3207 1241  3A 03E6     	LD	A,(WRA1+1)
 3208 1244  5F          	LD	E,A
 3209 1245  ED 5F       	LD	A,R
 3210 1247  83          	ADD	E
 3211 1248  32 03E6     	LD	(WRA1+1),A
 3212 124B  01 5256     	LD	BC,'RV'
 3213 124E  CD CF48     U1286:	CALL	DIM7		; Adresse der Variable nach DE holen
 3214 1251  EB          	EX	DE,HL
 3215 1252  C3 D6F7     	JP	OPTRAN
 3216                   ;
 3217                   ; GOSUB 270	 Ermittlung der Groesse des freien Speichers
 3218                   ;		 Rueckgabe des Wertes in der Variablen FR
 3219                   ;
 3220 1255  AF          GO270:	XOR	A
 3221 1256  32 03AE     	LD	(DATYPE),A
 3222 1259  CD D090     	CALL	FRE
 3223 125C  CD 1277     	CALL	U12AF
 3224 125F  CD D6C8     	CALL	OPARST
 3225 1262  3E 01       	LD	A,1
 3226 1264  32 03AE     	LD	(DATYPE),A
 3227 1267  CD D090     	CALL	FRE
 3228 126A  CD 1277     	CALL	U12AF
 3229 126D  C1          	POP	BC
 3230 126E  D1          	POP	DE
 3231 126F  CD D46F     	CALL	ADD5
 3232 1272  01 4652     	LD	BC,'FR'
 3233 1275  18 D7       	JR	U1286
 3234                   ;
 3235 1277  CD D697     U12AF:	CALL	TSGNM
 3236 127A  F0          	RET	P
 3237 127B  01 9100     	LD	BC,9100H	; 65536
 3238 127E  11 0000     	LD	DE,0
 3239 1281  C3 D46F     	JP	ADD5
 3240                   ;
 3241                   ; GOSUB 300	Umwandlung eines numerischen Wertes in einen String
 3242                   ;		Uebergabe des numerischen Wertes in der Variablen SR
 3243                   ;		Rueckgabe des Strings in der Variablen SR$
 3244                   ;
 3245 1284  01 5352     GO300:	LD	BC,'SR'
 3246 1287  CD CF48     	CALL	DIM7		; Adresse der Variable SR nach DE holen
 3247 128A  EB          	EX	DE,HL
 3248 128B  CD D6DD     	CALL	OPKOP		; Wert in Arithmetikregister 1 laden
 3249 128E  CD D834     	CALL	NUMKON
 3250 1291  23          	INC	HL
 3251 1292  E5          	PUSH	HL
 3252 1293  AF          	XOR	A
 3253 1294  4F          	LD	C,A
 3254 1295  ED B1       	CPIR
 3255 1297  79          	LD	A,C
 3256 1298  2F          	CPL
 3257 1299  C6 02       U12DF:	ADD	2		; wird auch als Zeiger auf UOT1=2 genutzt!
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  48
BAC85   Z80

 3258 129B  CD D1E1     	CALL	STROP
 3259 129E  D6 02       	SUB	2
 3260 12A0  13          	INC	DE
 3261 12A1  13          	INC	DE
 3262 12A2  4F          	LD	C,A
 3263 12A3  06 00       	LD	B,0
 3264 12A5  E1          	POP	HL
 3265 12A6  E5          	PUSH	HL
 3266 12A7  D5          	PUSH	DE
 3267 12A8  ED B0       	LDIR
 3268 12AA  E1          	POP	HL
 3269 12AB  D1          	POP	DE
 3270 12AC  4F          	LD	C,A
 3271 12AD  1A          	LD	A,(DE)
 3272 12AE  1B          	DEC	DE
 3273 12AF  FE 2E       	CP	2EH
 3274 12B1  20 04       	JR	NZ,U12FD
 3275 12B3  0C          	INC	C
 3276 12B4  2B          	DEC	HL
 3277 12B5  36 30       	LD	(HL),30H
 3278 12B7  1A          U12FD:	LD	A,(DE)
 3279 12B8  FE 2D       	CP	2DH
 3280 12BA  20 03       	JR	NZ,U1305
 3281 12BC  0C          	INC	C
 3282 12BD  2B          	DEC	HL
 3283 12BE  77          	LD	(HL),A
 3284 12BF  C5          U1305:	PUSH	BC
 3285 12C0  E5          	PUSH	HL
 3286 12C1  01 53D2     	LD	BC,'SR'+80H	; SR$
 3287 12C4  CD CF48     	CALL	DIM7		; Adresse der Variable SR$ nach DE holen
 3288 12C7  E1          	POP	HL
 3289 12C8  C1          	POP	BC
 3290 12C9  EB          	EX	DE,HL
 3291 12CA  71          	LD	(HL),C
 3292 12CB  23          	INC	HL
 3293 12CC  23          	INC	HL
 3294 12CD  73          	LD	(HL),E
 3295 12CE  23          	INC	HL
 3296 12CF  72          	LD	(HL),D
 3297 12D0  C9          	RET
 3298                   ;
 3299                   ; GOSUB 310	Umwandlung eines numerischen Wertes in einen String
 3300                   ;		Uebergabe des numerischen Wertes in der Variablen SR
 3301                   ;		Uebergabe einer festen Stringldnge in der Variablen CT
 3302                   ;		Uebergabe der Position des Dezimalpunkts in der Variablen CN
 3303                   ;		Rueckgabe des Strings in der Variablen SR$
 3304                   ;
 3305 12D1  CD 160E     GO310:	CALL	GETCN		; CN holen
 3306 12D4  01 4354     	LD	BC,'CT'
 3307 12D7  CD 1644     	CALL	U167B		; Wert der Variable CT nach HL holen
 3308 12DA  7D          	LD	A,L
 3309 12DB  65          	LD	H,L
 3310 12DC  22 003C     	LD	(XPOS2),HL
 3311 12DF  F5          	PUSH	AF
 3312 12E0  CD D1E1     	CALL	STROP
 3313 12E3  D5          	PUSH	DE
 3314 12E4  01 53D2     	LD	BC,'SR'+80H	; SR$
 3315 12E7  CD CF48     	CALL	DIM7		; Adresse der Variable SR$ nach DE holen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  49
BAC85   Z80

 3316 12EA  E1          	POP	HL
 3317 12EB  22 0051     	LD	(U0041),HL
 3318 12EE  EB          	EX	DE,HL
 3319 12EF  F1          	POP	AF
 3320 12F0  77          	LD	(HL),A
 3321 12F1  23          	INC	HL
 3322 12F2  23          	INC	HL
 3323 12F3  73          	LD	(HL),E
 3324 12F4  23          	INC	HL
 3325 12F5  72          	LD	(HL),D
 3326 12F6  D5          	PUSH	DE
 3327 12F7  01 5352     	LD	BC,'SR'
 3328 12FA  CD CF48     	CALL	DIM7		; Adresse der Variable SR nach DE holen
 3329 12FD  EB          	EX	DE,HL
 3330 12FE  E5          	PUSH	HL
 3331 12FF  CD D6DD     	CALL	OPKOP		; Wert in Arithmetikregister 1 laden
 3332 1302  CD D697     	CALL	TSGNM
 3333 1305  E1          	POP	HL
 3334 1306  E3          	EX	(SP),HL
 3335 1307  3A 003C     	LD	A,(XPOS2)
 3336 130A  30 09       	JR	NC,U135B
 3337 130C  36 2D       	LD	(HL),2DH
 3338 130E  23          	INC	HL
 3339 130F  D6 02       	SUB	2
 3340 1311  DA 13BA     	JP	C,U1400
 3341 1314  3C          	INC	A
 3342 1315  47          U135B:	LD	B,A
 3343 1316  3A 0044     	LD	A,(CN)		; CN
 3344 1319  4F          	LD	C,A
 3345 131A  B7          	OR	A
 3346 131B  28 01       	JR	Z,U1364
 3347 131D  0C          	INC	C
 3348 131E  0C          U1364:	INC	C
 3349 131F  78          	LD	A,B
 3350 1320  91          	SUB	C
 3351 1321  DA 13BA     	JP	C,U1400
 3352 1324  3C          	INC	A
 3353 1325  32 003C     	LD	(XPOS2),A
 3354 1328  E3          	EX	(SP),HL
 3355 1329  F5          	PUSH	AF
 3356 132A  E5          	PUSH	HL
 3357 132B  CD 13CC     	CALL	U1412
 3358 132E  E1          	POP	HL
 3359 132F  CD D6EE     	CALL	OPLAD
 3360 1332  CD D5F5     	CALL	DIV1
 3361 1335  CD D6BC     	CALL	ABS
 3362 1338  3E 20       	LD	A,20H
 3363 133A  B7          	OR	A
 3364 133B  08          	EX	AF,AF'
 3365 133C  3A 0044     	LD	A,(CN)		; CN
 3366 133F  4F          	LD	C,A
 3367 1340  F1          	POP	AF
 3368 1341  81          	ADD	C
 3369 1342  4F          	LD	C,A
 3370 1343  06 00       	LD	B,0
 3371 1345  C5          	PUSH	BC
 3372 1346  CD D6C8     	CALL	OPARST
 3373 1349  CD 13CC     	CALL	U1412
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  50
BAC85   Z80

 3374 134C  01 8000     	LD	BC,8000H	; 0.5
 3375 134F  11 0000     	LD	DE,0
 3376 1352  CD D5F5     	CALL	DIV1
 3377 1355  C1          	POP	BC
 3378 1356  D1          	POP	DE
 3379 1357  CD D46F     	CALL	ADD5
 3380 135A  C1          	POP	BC
 3381 135B  E1          	POP	HL
 3382 135C  3A 03E8     	LD	A,(WRA1+3)
 3383 135F  FE 81       	CP	81H
 3384 1361  30 58       	JR	NC,U1401
 3385 1363  C5          U13A9:	PUSH	BC
 3386 1364  3A 003C     	LD	A,(XPOS2)
 3387 1367  B8          	CP	B
 3388 1368  20 03       	JR	NZ,U13B3
 3389 136A  36 2E       	LD	(HL),'.'
 3390 136C  23          	INC	HL
 3391 136D  3D          U13B3:	DEC	A
 3392 136E  B8          	CP	B
 3393 136F  20 04       	JR	NZ,U13BB
 3394 1371  08          	EX	AF,AF'
 3395 1372  3E 30       	LD	A,'0'
 3396 1374  08          	EX	AF,AF'
 3397 1375  E5          U13BB:	PUSH	HL
 3398 1376  01 8420     	LD	BC,8420H	; 10
 3399 1379  11 0000     	LD	DE,0
 3400 137C  CD D59A     	CALL	MUL1
 3401 137F  CD D6C8     	CALL	OPARST
 3402 1382  CD C96F     	CALL	EPRVL3		; Ausdruck berechnen -> DE
 3403 1385  7B          	LD	A,E
 3404 1386  32 003E     	LD	(YPOS2),A
 3405 1389  CD D0C0     	CALL	POS1
 3406 138C  CD D6C0     	CALL	ABS1
 3407 138F  C1          	POP	BC
 3408 1390  D1          	POP	DE
 3409 1391  CD D46F     	CALL	ADD5
 3410 1394  3A 003E     	LD	A,(YPOS2)
 3411 1397  B7          	OR	A
 3412 1398  E1          	POP	HL
 3413 1399  28 09       	JR	Z,U13EA
 3414 139B  1E 30       	LD	E,'0'
 3415 139D  83          	ADD	E
 3416 139E  77          	LD	(HL),A
 3417 139F  08          	EX	AF,AF'
 3418 13A0  7B          	LD	A,E
 3419 13A1  37          	SCF
 3420 13A2  18 02       	JR	U13EC
 3421                   	;
 3422 13A4  08          U13EA:	EX	AF,AF'
 3423 13A5  77          	LD	(HL),A
 3424 13A6  08          U13EC:	EX	AF,AF'
 3425 13A7  23          	INC	HL
 3426 13A8  C1          	POP	BC
 3427 13A9  04          	INC	B
 3428 13AA  78          	LD	A,B
 3429 13AB  B9          	CP	C
 3430 13AC  20 B5       	JR	NZ,U13A9
 3431 13AE  08          	EX	AF,AF'
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  51
BAC85   Z80

 3432 13AF  D8          	RET	C
 3433 13B0  2A 0051     	LD	HL,(U0041)
 3434 13B3  7E          	LD	A,(HL)
 3435 13B4  FE 2D       	CP	'-'
 3436 13B6  C0          	RET	NZ
 3437 13B7  36 20       	LD	(HL),' '
 3438 13B9  C9          	RET
 3439                   	;
 3440 13BA  E1          U1400:	POP	HL
 3441 13BB  2A 0051     U1401:	LD	HL,(U0041)
 3442 13BE  3A 003E     	LD	A,(YPOS2)
 3443 13C1  3C          	INC	A
 3444 13C2  47          	LD	B,A
 3445 13C3  3E 2A       	LD	A,'*'
 3446 13C5  18 02       	JR	U140F
 3447                   	;
 3448 13C7  77          U140D:	LD	(HL),A
 3449 13C8  23          	INC	HL
 3450 13C9  10 FC       U140F:	DJNZ	U140D
 3451 13CB  C9          	RET
 3452                   ;
 3453 13CC  CD D0C0     U1412:	CALL	POS1
 3454 13CF  01 8420     	LD	BC,8420H	; 10
 3455 13D2  11 0000     	LD	DE,0
 3456 13D5  C3 D92A     	JP	EXPO+2
 3457                   ;
 3458                   ; GOSUB 330	Umwandlung aller Kleinbuchstaben in einem String in Grossbuchstaben
 3459                   ;		Uebergabe und Rueckgabe des Strings in der Variablen SR$
 3460                   ;
 3461 13D8  01 53D2     GO330:	LD	BC,'SR'+80H	; SR$
 3462 13DB  CD CF48     	CALL	DIM7		; Adresse der Variable SR$ nach DE holen
 3463 13DE  EB          	EX	DE,HL
 3464 13DF  7E          	LD	A,(HL)
 3465 13E0  23          	INC	HL
 3466 13E1  23          	INC	HL
 3467 13E2  E5          	PUSH	HL
 3468 13E3  5E          	LD	E,(HL)
 3469 13E4  23          	INC	HL
 3470 13E5  56          	LD	D,(HL)
 3471 13E6  EB          	EX	DE,HL
 3472 13E7  E3          	EX	(SP),HL
 3473 13E8  E5          	PUSH	HL
 3474 13E9  CD D1E1     	CALL	STROP
 3475 13EC  E1          	POP	HL
 3476 13ED  73          	LD	(HL),E
 3477 13EE  23          	INC	HL
 3478 13EF  72          	LD	(HL),D
 3479 13F0  E1          	POP	HL
 3480 13F1  47          	LD	B,A
 3481 13F2  04          	INC	B
 3482 13F3  18 0E       	JR	U1449
 3483                   	;
 3484 13F5  7E          U143B:	LD	A,(HL)
 3485 13F6  FE 60       	CP	60H
 3486 13F8  38 06       	JR	C,U1446
 3487 13FA  FE 7F       	CP	7FH
 3488 13FC  30 02       	JR	NC,U1446
 3489 13FE  D6 20       	SUB	20H
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  52
BAC85   Z80

 3490 1400  12          U1446:	LD	(DE),A
 3491 1401  23          	INC	HL
 3492 1402  13          	INC	DE
 3493 1403  10 F0       U1449:	DJNZ	U143B
 3494 1405  C9          	RET
 3495                   ;
 3496                   ; GOSUB 350	Ausgabe eines Strings auf dem Drucker
 3497                   ;		Uebergabe des Strings in der Variablen SR$
 3498                   ;
 3499 1406  CD 165A     GO350:	CALL	U1691		; Zeichenkette SR$ holen
 3500 1409  EB          	EX	DE,HL		; Adresse in HL
 3501 140A  18 05       	JR	U1457
 3502                   	;
 3503 140C  7E          U1452:	LD	A,(HL)		; Zeichen holen
 3504 140D  23          	INC	HL
 3505 140E  CD 0732     	CALL	PRINT		; Zeichen an Drucker senden
 3506 1411  10 F9       U1457:	DJNZ	U1452
 3507 1413  C9          	RET
 3508                   ;
 3509                   ; GOSUB 360	Ausgabe eines Zeilenumbruchs auf dem Drucker
 3510                   ;
 3511 1414  21 1D4E     GO360:	LD	HL,U1D05	; CR,LF
 3512 1417  06 03       	LD	B,3		; 2+1
 3513 1419  18 F6       	JR	U1457
 3514                   ;
 3515                   ; GOSUB 400	Ausgabe eines Tones
 3516                   ;		Uebergabe der Lautstaerke, Dauer und Tonhoehe
 3517                   ;		 in den Variablen SV, SD und SP
 3518                   ;
 3519 141B  01 5356     GO400:	LD	BC,'SV'		; Sound Volume (Lautstaerke) 0-15
 3520 141E  CD 1644     	CALL	U167B		; Wert der Variable SV nach HL holen
 3521 1421  E5          	PUSH	HL
 3522 1422  CD 15AD     	CALL	U15DA		; Zeitdauer SD
 3523 1425  01 5350     	LD	BC,'SP'		; Sound Pitch (Tonhoehe)
 3524 1428  CD 1644     	CALL	U167B		; Wert der Variable SP nach HL holen
 3525 142B  7D          	LD	A,L
 3526 142C  C1          	POP	BC
 3527 142D  2A 01EC     	LD	HL,(01ECH)	; Interrupt CTC Kanal 2 - Tondauer, Blinkfrequenz
 3528 1430  E5          	PUSH	HL		; merken
 3529 1431  21 1AFF     	LD	HL,ISRC2	; interne ISR fuer CTC2
 3530 1434  22 01EC     	LD	(01ECH),HL	; jetzt aktivieren
 3531 1437  CD 068C     	CALL	U0677
 3532 143A  E1          	POP	HL
 3533 143B  22 01EC     	LD	(01ECH),HL	; urspruengliche ISR
 3534 143E  C9          	RET
 3535                   ;
 3536                   ; GOSUB 450	Warten einer bestimmten Zeit auf einen Tastendruck
 3537                   ;		Uebergabe der Dauer in der Variablen SD (in 100ms-Einheiten)
 3538                   ;
 3539 143F  CD 15AD     GO450:	CALL	U15DA		; Zeitdauer
 3540 1442  C4 1461     	CALL	NZ,U14A7
 3541 1445  F5          	PUSH	AF
 3542 1446  D5          	PUSH	DE
 3543 1447  7C          	LD	A,H
 3544 1448  45          	LD	B,L
 3545 1449  CD D0B1     	CALL	FRE3
 3546 144C  CD 1277     	CALL	U12AF
 3547 144F  21 03E8     	LD	HL,WRA1+3
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  53
BAC85   Z80

 3548 1452  7E          	LD	A,(HL)
 3549 1453  D6 02       	SUB	2
 3550 1455  30 01       	JR	NC,U149E
 3551 1457  AF          	XOR	A
 3552 1458  77          U149E:	LD	(HL),A
 3553 1459  E1          	POP	HL
 3554 145A  CD D6F7     	CALL	OPTRAN
 3555 145D  F1          	POP	AF
 3556 145E  C3 11B1     	JP	U11E7
 3557                   ;
 3558 1461  2A 01EC     U14A7:	LD	HL,(01ECH)	; Interrupt CTC Kanal 2 - Tondauer, Blinkfrequenz
 3559 1464  22 004F     	LD	(U003F),HL	; Originalwert hier merken
 3560 1467  21 1AFF     	LD	HL,ISRC2
 3561 146A  22 01EC     	LD	(01ECH),HL	; interne ISR fuer CTC2
 3562 146D  3E 03       	LD	A,3
 3563 146F  D3 8C       	OUT	(CTC0),A
 3564 1471  3E A7       	LD	A,0A7H
 3565 1473  D3 8E       	OUT	(CTC2),A
 3566 1475  3E AB       	LD	A,0ABH
 3567 1477  D3 8E       	OUT	(CTC2),A
 3568 1479  2A 005A     U14BF:	LD	HL,(U004A)
 3569 147C  7C          	LD	A,H
 3570 147D  B5          	OR	L
 3571 147E  28 05       	JR	Z,U14CB
 3572 1480  CD 061F     	CALL	U0613		; Taste gedrueckt?
 3573 1483  28 F4       	JR	Z,U14BF
 3574 1485  E5          U14CB:	PUSH	HL
 3575 1486  2A 004F     	LD	HL,(U003F)	; gemerkte ISR
 3576 1489  22 01EC     	LD	(01ECH),HL	; Interrupt CTC Kanal 2 - Tondauer, Blinkfrequenz
 3577 148C  E1          	POP	HL
 3578 148D  C9          	RET
 3579                   ;
 3580                   ; GOSUB 500	Oeffnen einer Datei
 3581                   ;		Uebergabe des Namens in der Variablen NF$
 3582                   ;		Festlegung eines Datei-Identifiers in der Variablen NF
 3583                   ;
 3584 148E  CD F018     GO500:	CALL	IRMON
 3585 1491  21 B6D8     	LD	HL,0B6D8H	; VRAM-Adresse Bild 0, letzte Zeile
 3586 1494  11 0010     	LD	DE,U0000
 3587 1497  01 0028     	LD	BC,40		; gesamte Zeile
 3588 149A  ED B0       	LDIR			; Inhalt der Bildschirmzeile in Puffer kopieren
 3589 149C  CD F01B     	CALL	IRMOFF
 3590 149F  CD 1629     	CALL	U1656		; Offset gemaess NF holen nach HL und B
 3591 14A2  C5          	PUSH	BC		; B=NF (0-7)
 3592 14A3  48          	LD	C,B
 3593 14A4  CD 1621     	CALL	U164E		; Kanal bereits geoeffnet?
 3594 14A7  DA 163B     	JP	C,U1668		; ja, Fehler
 3595 14AA  79          	LD	A,C		; C=NF
 3596 14AB  FE 04       	CP	4
 3597 14AD  3A 0055     	LD	A,(U0045)
 3598 14B0  38 03       	JR	C,U14ED		; NF = 0..3
 3599 14B2  E6 F0       	AND	0F0H		; ein anderer Kanal aus 4-7 geoeffnet?
 3600 14B4  11          	DB	11H	; LD DE,0FE6H
 3601 14B5  E6 0F       U14ED:	AND	0FH		; ein anderer Kanal aus 0-3 geoeffnet?
 3602 14B7  C2 163B     	JP	NZ,U1668	; ja, Fehler
 3603 14BA  E5          	PUSH	HL		; Kanal-Offset
 3604         0001      if DEV
 3605 14BB  CB 81       	RES	0,C		; gleiches Device bei Lesen/Schreiben
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  54
BAC85   Z80

 3606 14BD  79          	LD	A,C
 3607 14BE  B7          	OR	A		; BASICODE?
 3608 14BF  C4 0862     	CALL	NZ,DEVICE	; nein, DEVICE einstellen
 3609 14C2  E1          	POP	HL
 3610 14C3  DA 163B     	JP	C,U1668		; Fehler bei DEVICE-Auswahl
 3611 14C6  E5          	PUSH	HL
 3612                   endif
 3613 14C7  01 4EC6     	LD	BC,'NF'+80H	; NF$
 3614 14CA  CD CF48     	CALL	DIM7		; Adresse der Variable NF$ nach DE holen
 3615 14CD  D5          	PUSH	DE
 3616 14CE  21 0060     	LD	HL,FNAME	; Dateiname hier ablegen fuer MBIN/MBOUT
 3617 14D1  5D          	LD	E,L
 3618 14D2  54          	LD	D,H
 3619 14D3  13          	INC	DE
 3620                   ; 28.12.2023:
 3621                   ; Dateinamen fuer MBIN/MBOUT vorbereiten, dazu 3x Dateityp, 8x Dateiname
 3622 14D4  36 C4       	LD	(HL),'D'+80H	; Dateityp .DDD
 3623 14D6  01 0002     	LD	BC,2		; 3 Zeichen
 3624 14D9  ED B0       	LDIR			; kopieren
 3625 14DB  23          	INC	HL
 3626 14DC  13          	INC	DE
 3627 14DD  36 20       	LD	(HL),' '
 3628 14DF  0E 07       	LD	C,7		; 8 Zeichen (B ist noch 0 vom letzten LDIR)
 3629 14E1  ED B0       	LDIR			; 8x mit Leerzeichen vorbelegen
 3630                   ;	INC	HL		; abschliessende 0 nicht mehr erforderlich
 3631                   ;	LD	(HL),C		; Ende-0 anhaengen
 3632                   
 3633 14E3  E1          	POP	HL		; HL = NF$
 3634 14E4  4E          	LD	C,(HL)		; BC = Laenge der Zeichenkette
 3635 14E5  23          	INC	HL
 3636                   ;	LD	B,(HL)		; B ist immer 0, noch vom letzten LDIR
 3637 14E6  23          	INC	HL
 3638 14E7  5E          	LD	E,(HL)
 3639 14E8  23          	INC	HL
 3640 14E9  56          	LD	D,(HL)		; DE = Beginn der Zeichenkette
 3641 14EA  79          	LD	A,C
 3642 14EB  B7          	OR	A
 3643 14EC  28 0C       	JR	Z,U1518		; Laenge = 0
 3644 14EE  FE 08       	CP	8
 3645 14F0  38 02       	JR	C,U1517		; Laenge < 8
 3646 14F2  0E 08       	LD	C,8		; Laenge auf max. 8 begrenzen
 3647 14F4  21 0063     U1517:	LD	HL,FNAME+3	; Dateiname
 3648 14F7  EB          	EX	DE,HL
 3649 14F8  ED B0       	LDIR			; Dateiname dorthin kopieren
 3650 14FA  E1          U1518:	POP	HL		; Kanal-Offset (0, 2, 4 .. 14)
 3651 14FB  11 1EBA     	LD	DE,U1E71	; Sprungverteiler zum Oeffnen einer Datei
 3652 14FE  CD 161B     	CALL	U1648		; Datei oeffnen
 3653 1501  C1          	POP	BC
 3654 1502  DA 163C     	JP	C,U1669		; Fehler
 3655 1505  3A 0055     	LD	A,(U0045)
 3656 1508  4F          	LD	C,A
 3657 1509  04          	INC	B
 3658 150A  AF          	XOR	A
 3659 150B  37          	SCF
 3660 150C  17          U152A:	RLA
 3661 150D  10 FD       	DJNZ	U152A
 3662 150F  B1          	OR	C
 3663 1510  32 0055     	LD	(U0045),A
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  55
BAC85   Z80

 3664 1513  18 5C       	JR	U158F
 3665                   ;
 3666                   ; GOSUB 540	Lesen eines Strings aus einer Datei
 3667                   ;		Uebergabe des Identifiers in der Variablen NF
 3668                   ;		Rueckgabe des Strings in der Variablen IN$
 3669                   ;
 3670 1515  CD 1629     GO540:	CALL	U1656		; Offset gemaess NF holen nach HL und B
 3671 1518  CB 40       	BIT	0,B		; Kanal zum Schreiben geoeffnet?
 3672 151A  C2 163C     	JP	NZ,U1669	; ja, unzulaessig
 3673 151D  11 1669     	LD	DE,U16A0	; IN$ zurueckgeben
 3674 1520  CD 1621     U153E:	CALL	U164E		; Kanal geoeffnet?
 3675 1523  D2 163C     	JP	NC,U1669	; nein, unzulaessig
 3676 1526  D5          	PUSH	DE
 3677 1527  11 1EDA     	LD	DE,U1E91	; Sprungverteiler Lesen/Schreiben
 3678 152A  19          	ADD	HL,DE
 3679 152B  5E          	LD	E,(HL)
 3680 152C  23          	INC	HL
 3681 152D  56          	LD	D,(HL)		; Adresse der Routine lesen
 3682 152E  D5          	PUSH	DE
 3683 152F  FD E1       	POP	IY		; und in IY eintragen fuer spaeteres CALL (IY)
 3684 1531  C9          	RET
 3685                   ;
 3686                   ; GOSUB 560	Schreiben eines Strings in eine Datei
 3687                   ;		Uebergabe des Identifiers in der Variablen NF
 3688                   ;		Uebergabe des Strings in der Variablen SR$
 3689                   ;
 3690 1532  CD 1629     GO560:	CALL	U1656		; Offset gemaess NF holen nach HL und B
 3691 1535  CB 40       	BIT	0,B		; Kanal zum Lesen geoeffnet?
 3692 1537  CA 163C     	JP	Z,U1669		; ja, unzulaessig
 3693 153A  11 16DA     	LD	DE,U170A	; SR$ zurueckgeben
 3694 153D  18 E1       	JR	U153E
 3695                   ;
 3696                   ; GOSUB 580	Schliessen einer Datei
 3697                   ;		Uebergabe des Identifiers in der Variablen NF
 3698                   ;
 3699 153F  CD 1629     GO580:	CALL	U1656		; Offset gemaess NF holen nach HL und B
 3700 1542  C5          	PUSH	BC
 3701 1543  CD 1621     	CALL	U164E		; Kanal geoeffnet?
 3702 1546  C1          	POP	BC
 3703 1547  D2 163C     	JP	NC,U1669	; nein, unzulaessig
 3704 154A  C5          	PUSH	BC
 3705 154B  04          	INC	B
 3706 154C  3A 0055     	LD	A,(U0045)	; geoeffnete Kanaele
 3707 154F  1F          U156D:	RRA
 3708 1550  10 FD       	DJNZ	U156D
 3709 1552  D2 163B     	JP	NC,U1668	; Fehler, nicht der richtige Kanal
 3710 1555  11 1ECA     	LD	DE,U1E81	; Sprungverteiler zum Schliessen einer Datei
 3711 1558  CD 161B     	CALL	U1648		; Datei schliessen
 3712 155B  C1          	POP	BC
 3713 155C  DA 163C     	JP	C,U1669		; Fehler
 3714 155F  3A 0055     	LD	A,(U0045)	; geoeffnete Kanaelt
 3715 1562  4F          	LD	C,A
 3716 1563  04          	INC	B
 3717 1564  AF          	XOR	A		; alle Bits 0
 3718 1565  37          	SCF			; 1-Bit
 3719 1566  17          U1584:	RLA			; an die gewuenschte Stelle schieben
 3720 1567  10 FD       	DJNZ	U1584
 3721 1569  2F          	CPL			; Bit negieren
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  56
BAC85   Z80

 3722 156A  A1          	AND	C		; geoeffneten Kanal zuruecksetzen
 3723 156B  32 0055     	LD	(U0045),A	; und eintragen
 3724 156E  CD 0971     	CALL	U09C8		; unterste Bildschirmzeile malen
 3725 1571  01 494E     U158F:	LD	BC,'IN'
 3726 1574  CD CF48     	CALL	DIM7		; Adresse der Variable IN nach DE holen
 3727 1577  13          	INC	DE
 3728 1578  13          	INC	DE
 3729 1579  13          	INC	DE
 3730 157A  AF          	XOR	A
 3731 157B  12          	LD	(DE),A
 3732 157C  C9          	RET
 3733                   ;
 3734                   ; GOSUB 600	Initialisieren des Grafikmodus, Loeschen des Bildschirms
 3735                   ;
 3736 157D  CD 1F13     GO600:	CALL	U1ECA		; Farbe nach Variable CC einstellen
 3737 1580  01 484F     	LD	BC,'HO'
 3738 1583  CD 1650     	CALL	U1687		; Variable 'HO' auf 0 setzen
 3739 1586  01 5645     	LD	BC,'VE'
 3740 1589  CD 1650     	CALL	U1687		; Variable 'VE' auf 0 setzen
 3741 158C  21 0000     	LD	HL,0
 3742 158F  22 003C     	LD	(XPOS2),HL
 3743 1592  22 003E     	LD	(YPOS2),HL
 3744 1595  22 0040     	LD	(XPOS1),HL
 3745 1598  22 0042     	LD	(YPOS1),HL
 3746 159B  C3 05DC     	JP	CLS		; Bildschirm loeschen
 3747                   ;
 3748                   ; GOTO 950	Beenden des BASICODE-Programms
 3749                   ;
 3750 159E  CD 1F13     GO950:	CALL	U1ECA		; Farbe nach Variable CC einstellen
 3751 15A1  E5          	PUSH	HL
 3752 15A2  CD 05DC     	CALL	CLS		; Bildschirm loeschen
 3753 15A5  E1          	POP	HL
 3754 15A6  AF          	XOR	A		; Z=1 (BREAK IN ... nicht anzeigen)
 3755 15A7  CD 0659     	CALL	U0642		; BRK/STOP aktivieren
 3756 15AA  C3 C91B     	JP	END0		; zurueck in BASIC-ROM
 3757                   ;
 3758                   ; Warteschleife fuer GOSUB 400 (Tondauer) und GOSUB 450 (Warte auf Tastendruck)
 3759                   ;
 3760 15AD  01 5344     U15DA:	LD	BC,'SD'		; Sound Duration (Tondauer in 0,1s Schritten)
 3761 15B0  CD CF48     	CALL	DIM7		; Adresse der Variable SD nach DE holen
 3762 15B3  D5          	PUSH	DE
 3763 15B4  EB          	EX	DE,HL
 3764 15B5  CD D6DD     	CALL	OPKOP		; Wert in Arithmetikregister 1 laden
 3765 15B8  21 03E8     	LD	HL,WRA1+3
 3766 15BB  7E          	LD	A,(HL)
 3767 15BC  B7          	OR	A
 3768 15BD  28 10       	JR	Z,U15FC
 3769 15BF  C6 02       	ADD	2
 3770 15C1  77          	LD	(HL),A
 3771 15C2  FE 90       	CP	90H
 3772 15C4  38 09       	JR	C,U15FC
 3773 15C6  01 9180     	LD	BC,9180H	; -65536
 3774 15C9  11 0000     	LD	DE,0
 3775 15CC  CD D46F     	CALL	ADD5
 3776 15CF  CD C96F     U15FC:	CALL	EPRVL3		; Ausdruck berechnen -> DE
 3777 15D2  EB          	EX	DE,HL
 3778 15D3  22 005A     	LD	(U004A),HL
 3779 15D6  7C          	LD	A,H
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  57
BAC85   Z80

 3780 15D7  B5          	OR	L
 3781 15D8  D1          	POP	DE
 3782 15D9  C9          	RET
 3783                   ;
 3784                   ; Werte der Variablen HO, VE und CN holen
 3785                   ;
 3786 15DA  01 484F     U1607:	LD	BC,'HO'		; Horizontalposition
 3787 15DD  CD CF48     	CALL	DIM7		; Adresse der Variable HO nach DE holen
 3788 15E0  EB          	EX	DE,HL
 3789 15E1  CD D6DD     	CALL	OPKOP		; Wert in Arithmetikregister 1 laden
 3790 15E4  01 8920     	LD	BC,8920H
 3791 15E7  11 0000     	LD	DE,0		; 320
 3792 15EA  CD D59A     	CALL	MUL1		; HO*320
 3793 15ED  CD C96F     	CALL	EPRVL3		; Ausdruck berechnen -> DE
 3794 15F0  ED 53 003C  	LD	(XPOS2),DE	; X-Position ablegen
 3795 15F4  01 5645     	LD	BC,'VE'		; Vertikalposition
 3796 15F7  CD CF48     	CALL	DIM7		; Adresse der Variable VE nach DE holen
 3797 15FA  EB          	EX	DE,HL
 3798 15FB  CD D6DD     	CALL	OPKOP		; Wert in Arithmetikregister 1 laden
 3799 15FE  01 8870     	LD	BC,8870H	; (BC=8900H waere 256)
 3800 1601  11 0000     	LD	DE,0		; 240
 3801 1604  CD D59A     	CALL	MUL1		; VE*240
 3802 1607  CD C96F     	CALL	EPRVL3		; Ausdruck berechnen -> DE
 3803 160A  ED 53 003E  	LD	(YPOS2),DE	; Y-Position ablegen
 3804 160E  01 434E     GETCN:	LD	BC,'CN'		; Farbe (Color Numerisch)
 3805 1611  CD 1644     	CALL	U167B		; Wert der Variable CN nach HL holen
 3806 1614  7D          	LD	A,L
 3807 1615  32 0044     	LD	(CN),A		; Wert von CN speichern
 3808 1618  C9          	RET
 3809                   
 3810 1619  FD E9       CALLIY:	JP	(IY)		; CALL (IY)
 3811         161A      CALLHL:	EQU	$-1		; CALL (HL)
 3812                   ;
 3813                   ; Verzweigen gemaess Sprungverteiler
 3814                   ; PE:	DE = Adresse des Sprungverteilers
 3815                   ;	HL = Offset (0 bei NF=0, 2 bei NF=2 usw.)
 3816                   ;
 3817 161B  19          U1648:	ADD	HL,DE
 3818 161C  7E          	LD	A,(HL)
 3819 161D  23          	INC	HL
 3820 161E  66          	LD	H,(HL)
 3821 161F  6F          	LD	L,A
 3822 1620  E9          	JP	(HL)
 3823                   ;
 3824                   ; Kanal geoeffnet?
 3825                   ; PE:	B=Kanal-Nr. NF (0-7)
 3826                   ;
 3827 1621  04          U164E:	INC	B		; B = 1-8
 3828 1622  3A 0055     	LD	A,(U0045)
 3829 1625  1F          U1652:	RRA
 3830 1626  10 FD       	DJNZ	U1652
 3831 1628  C9          	RET
 3832                   ;
 3833                   ; Offset entsprechend Variable NF holen
 3834                   ; PA:	HL = NF*2
 3835                   ;	B = NF
 3836                   ;
 3837 1629  D5          U1656:	PUSH	DE
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  58
BAC85   Z80

 3838 162A  01 4E46     	LD	BC,'NF'
 3839 162D  CD 1644     	CALL	U167B		; Wert der Variable NF nach HL holen
 3840 1630  D1          	POP	DE
 3841 1631  24          	INC	H
 3842 1632  25          	DEC	H
 3843 1633  20 06       	JR	NZ,U1668	; H > 0 ist unzulaessig
 3844 1635  7D          	LD	A,L
 3845 1636  45          	LD	B,L
 3846 1637  29          	ADD	HL,HL
 3847 1638  FE 08       	CP	8
 3848 163A  D8          	RET	C		; OK (NF liegt zwischen 0 und 7)
 3849                   ; Fehler:
 3850 163B  F1          U1668:	POP	AF		; RET-Adresse vom Stack nehmen
 3851 163C  3E FF       U1669:	LD	A,0FFH		; Fehler setzen
 3852 163E  32 0053     	LD	(U0043),A
 3853 1641  C3 16C2     	JP	U16F9		; Variable IN zurueckmelden
 3854                   ;
 3855                   ; Wert einer Variable lesen
 3856                   ; PE:	BC=Name der Variablen
 3857                   ; PA:	HL=Zahlenwert
 3858                   ;
 3859 1644  CD CF48     U167B:	CALL	DIM7		; Adresse der Variable nach DE holen
 3860 1647  EB          	EX	DE,HL
 3861 1648  CD D6DD     	CALL	OPKOP		; Wert in Arithmetikregister 1 laden
 3862 164B  CD C96F     	CALL	EPRVL3		; Ausdruck berechnen -> DE
 3863 164E  EB          	EX	DE,HL		; Uebergabe in HL
 3864 164F  C9          	RET
 3865                   ;
 3866                   ; Wert einer Variable holen und Inhalt auf 0 setzen
 3867                   ; PE:	BC=Name der Variablen
 3868                   ;
 3869 1650  CD CF48     U1687:	CALL	DIM7		; Adresse der Variable nach DE holen
 3870 1653  AF          	XOR	A
 3871 1654  12          	LD	(DE),A		; 0 eintragen
 3872 1655  13          	INC	DE
 3873 1656  13          	INC	DE
 3874 1657  13          	INC	DE
 3875 1658  12          	LD	(DE),A		; 0 eintragen
 3876 1659  C9          	RET
 3877                   ;
 3878                   ; Zeichenkette aus SR$ holen
 3879                   ;
 3880 165A  01 53D2     U1691:	LD	BC,'SR'+80H	; SR$
 3881 165D  CD CF48     	CALL	DIM7		; Adresse der Variable SR$ nach DE holen
 3882 1660  EB          	EX	DE,HL
 3883 1661  46          	LD	B,(HL)		; B = Anzahl Zeichen
 3884 1662  04          	INC	B		; Laenge+1
 3885 1663  23          	INC	HL
 3886 1664  23          	INC	HL
 3887 1665  5E          	LD	E,(HL)
 3888 1666  23          	INC	HL
 3889 1667  56          	LD	D,(HL)		; DE = Zeiger auf Zeichenkette
 3890 1668  C9          	RET
 3891                   ;
 3892                   ; Variable IN$ zurueckgeben (aus Datei Lesen)
 3893                   ;
 3894 1669  01 49CE     U16A0:	LD	BC,'IN'+80H	; IN$
 3895 166C  CD CF48     	CALL	DIM7		; Adresse der Variable IN$ nach DE holen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  59
BAC85   Z80

 3896 166F  D5          	PUSH	DE
 3897 1670  2A 03DB     	LD	HL,(FSLPTR)	; erste freie Adresse hinter den Variablen
 3898 1673  AF          	XOR	A
 3899 1674  32 0053     	LD	(U0043),A	; 00 = kein Fehler
 3900 1677  5F          	LD	E,A
 3901 1678  E5          U16AF:	PUSH	HL
 3902 1679  D5          	PUSH	DE
 3903 167A  CD 1619     	CALL	CALLIY		; CALL (IY) => hier Leseroutine
 3904 167D  D1          	POP	DE
 3905 167E  E1          	POP	HL
 3906 167F  FE 0D       	CP	CR
 3907 1681  28 26       	JR	Z,U16E0
 3908 1683  FE 20       	CP	' '
 3909 1685  38 04       	JR	C,U16C2
 3910 1687  FE 7F       	CP	7FH
 3911 1689  38 07       	JR	C,U16C9
 3912 168B  3E FF       U16C2:	LD	A,0FFH
 3913 168D  32 0053     	LD	(U0043),A	; FF = Fehler
 3914 1690  3E 23       	LD	A,23H
 3915 1692  77          U16C9:	LD	(HL),A
 3916 1693  23          	INC	HL
 3917 1694  E5          	PUSH	HL
 3918 1695  ED 72       	SBC	HL,SP
 3919 1697  E1          	POP	HL
 3920 1698  D2 C33E     	JP	NC,OMER
 3921 169B  1C          	INC	E
 3922 169C  3A 0054     	LD	A,(U0044)	; FFH = Abbruch/Fehler (0 = OK)
 3923 169F  57          	LD	D,A
 3924 16A0  3A 0053     	LD	A,(U0043)
 3925 16A3  B2          	OR	D
 3926 16A4  32 0053     	LD	(U0043),A
 3927 16A7  18 CF       	JR	U16AF
 3928                   	;
 3929 16A9  7B          U16E0:	LD	A,E
 3930 16AA  CD D1E1     	CALL	STROP
 3931 16AD  E1          	POP	HL
 3932 16AE  77          	LD	(HL),A
 3933 16AF  23          	INC	HL
 3934 16B0  23          	INC	HL
 3935 16B1  73          	LD	(HL),E
 3936 16B2  23          	INC	HL
 3937 16B3  72          	LD	(HL),D
 3938 16B4  2B          	DEC	HL
 3939 16B5  2B          	DEC	HL
 3940 16B6  2B          	DEC	HL
 3941 16B7  B7          	OR	A
 3942 16B8  28 08       	JR	Z,U16F9		; Variable IN zurueckmelden
 3943 16BA  2A 03DB     	LD	HL,(FSLPTR)	; erste freie Adresse hinter den Variablen
 3944 16BD  4F          	LD	C,A
 3945 16BE  06 00       	LD	B,0
 3946 16C0  ED B0       	LDIR
 3947 16C2  01 494E     U16F9:	LD	BC,'IN'
 3948 16C5  CD CF48     	CALL	DIM7		; Adresse der Variable IN nach DE holen
 3949 16C8  3A 0053     	LD	A,(U0043)
 3950 16CB  3C          	INC	A
 3951 16CC  6F          	LD	L,A
 3952 16CD  26 00       	LD	H,0
 3953 16CF  2B          	DEC	HL
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  60
BAC85   Z80

 3954                   ;	JP	U1671		; in Variable 'IN' eintragen
 3955                   ;
 3956                   ; Wert in eine Variable eintragen
 3957                   ; PE:	HL=Wert
 3958                   ;	DE=Adresse
 3959                   ;
 3960 16D0  7C          U1671:	LD	A,H
 3961 16D1  45          	LD	B,L
 3962 16D2  D5          	PUSH	DE
 3963 16D3  CD D0B1     	CALL	FRE3
 3964 16D6  E1          	POP	HL
 3965 16D7  C3 D6F7     	JP	OPTRAN
 3966                   ;
 3967                   ; Variable SR$ zurueckgeben (in Datei schreiben)
 3968                   ;
 3969 16DA  CD 165A     U170A:	CALL	U1691		; Zeichenkette SR$ holen
 3970 16DD  0E 00       	LD	C,0		; fehlerfrei annehmen
 3971 16DF  18 0E       	JR	U171F
 3972                   	;
 3973 16E1  C5          U1711:	PUSH	BC
 3974 16E2  D5          	PUSH	DE
 3975 16E3  1A          	LD	A,(DE)		; Zeichen aus SR$
 3976 16E4  CD 1619     	CALL	CALLIY		; CALL (IY) => hier Schreibroutine
 3977 16E7  D1          	POP	DE
 3978 16E8  C1          	POP	BC
 3979 16E9  3A 0054     	LD	A,(U0044)	; FFH = Abbruch/Fehler (0 = OK)
 3980 16EC  B1          	OR	C
 3981 16ED  4F          	LD	C,A
 3982 16EE  13          	INC	DE		; naechstes Zeichen
 3983 16EF  10 F0       U171F:	DJNZ	U1711		; bis Zeichenanzahl abgearbeitet ist
 3984 16F1  79          	LD	A,C
 3985 16F2  32 0053     	LD	(U0043),A
 3986 16F5  3E 0D       	LD	A,CR		; Zeichenkette in Datei mit CR abschliessen
 3987 16F7  CD 1619     	CALL	CALLIY		; CALL (IY) => hier Schreibroutine
 3988 16FA  18 C6       	JR	U16F9		; Variable IN zurueckmelden
 3989                   ;
 3990                   ; Datei oeffnen (BASICODE lesen)
 3991                   ; NF=0
 3992                   ;
 3993 16FC  CD 1770     U172D:	CALL	U178A		; Stack 1KByte nach vorn verlagern
 3994 16FF  D8          	RET	C		; zu wenig Speicherplatz
 3995 1700  2A 0047     	LD	HL,(U0033)	; Ende ASCII-File
 3996 1703  22 0049     	LD	(CPOINT),HL	; als Pufferzeiger eintragen (Puffer = leer)
 3997 1706  18 07       	JR	U1740
 3998                   ;
 3999                   ; Datei Lesen (BASICODE lesen)
 4000                   ; NF=0
 4001                   ;
 4002 1708  3A 0056     U1739:	LD	A,(U0046)
 4003 170B  FE 04       	CP	4
 4004 170D  28 21       	JR	Z,U1761
 4005 170F  F5          U1740:	PUSH	AF
 4006 1710  ED 5B 0047  	LD	DE,(U0033)	; Ende ASCII-File
 4007 1714  2A 0049     	LD	HL,(CPOINT)	; Pufferzeiger
 4008 1717  CD C689     	CALL	CPREG		; Vergleiche Register DE mit HL
 4009 171A  CC 1835     	CALL	Z,U17F1		; Puffer leer, 1 KByte-Block einlesen
 4010 171D  7E          	LD	A,(HL)
 4011 171E  23          	INC	HL
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  61
BAC85   Z80

 4012 171F  22 0049     	LD	(CPOINT),HL	; Pufferzeiger
 4013 1722  32 0056     	LD	(U0046),A
 4014 1725  FE 04       	CP	4
 4015 1727  20 05       	JR	NZ,U175F
 4016 1729  21 0053     	LD	HL,U0043
 4017 172C  CB C6       	SET	0,(HL)
 4018 172E  F1          U175F:	POP	AF
 4019 172F  C9          	RET
 4020                   	;
 4021 1730  21 0053     U1761:	LD	HL,U0043
 4022 1733  CB C6       	SET	0,(HL)
 4023 1735  3E 0D       	LD	A,CR
 4024 1737  C9          	RET
 4025                   ;
 4026                   ; Datei schliessen (BASICODE schreiben)
 4027                   ; NF=1
 4028                   ;
 4029 1738  2A 0049     U17D7:	LD	HL,(CPOINT)	; Pufferzeiger
 4030 173B  ED 5B 0047  	LD	DE,(U0033)	; Ende ASCII-File
 4031 173F  36 04       U17DE:	LD	(HL),4		; ENDE-Zeichen eintragen
 4032 1741  23          	INC	HL
 4033 1742  CD C689     	CALL	CPREG		; Vergleiche Register DE mit HL
 4034 1745  20 F8       	JR	NZ,U17DE	; bis Rest vom Puffer damit gefuellt ist
 4035 1747  CD 17BA     	CALL	U18A2		; letzten Datenblock schreiben
 4036 174A  3A 0053     	LD	A,(U0043)
 4037 174D  87          	ADD	A
 4038 174E  D8          	RET	C
 4039                   ;	JP	U1769		; Datei Schliessen (BASICODE lesen)
 4040                   ;
 4041                   ; Datei schliessen (BASICODE lesen)
 4042                   ; - 1K Pufferspeicher wird wieder freigegeben
 4043                   ; NF=0
 4044                   ;
 4045 174F  F3          U1769:	DI
 4046 1750  21 0000     	LD	HL,0
 4047 1753  39          	ADD	HL,SP		; HL = aktueller Stackpointer, CY=0
 4048 1754  ED 5B 0045  	LD	DE,(U0031)	; DE = Beginn ASCII-File
 4049 1758  D5          	PUSH	DE		; Begin ASCII-File
 4050 1759  EB          	EX	DE,HL
 4051 175A  ED 52       	SBC	HL,DE		; Groesse der Stack-Belegung berechnen
 4052 175C  38 0F       	JR	C,U1787		; zu wenig Platz
 4053 175E  4D          	LD	C,L
 4054 175F  44          	LD	B,H
 4055 1760  E1          	POP	HL		; Beginn ASCII-File
 4056 1761  ED 5B 0047  	LD	DE,(U0033)	; Ende ASCII-File
 4057 1765  1B          	DEC	DE
 4058 1766  2B          	DEC	HL
 4059 1767  ED B8       	LDDR			; Stack-Inhalt mit nehmen
 4060 1769  EB          	EX	DE,HL
 4061 176A  23          	INC	HL		; Stack an Ende verlegen
 4062 176B  F9          	LD	SP,HL		; und SP neu setzen
 4063 176C  3E          	DB	3EH	; LD A,0E1H (POP HL verhindern)
 4064 176D  E1          U1787:	POP	HL
 4065 176E  FB          	EI
 4066 176F  C9          	RET
 4067                   ;
 4068                   ; Vorbereitung fuer Lesen bzw. Schreiben von BASICODE-Datenfile
 4069                   ; - Blocknummer auf FFH setzen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  62
BAC85   Z80

 4070                   ; - Stack um 1KByte nach vorn verlegen
 4071                   ; PA:	CY=1	zu wenig Speicherplatz
 4072                   ;
 4073 1770  3E FF       U178A:	LD	A,0FFH
 4074 1772  32 004B     	LD	(BLNR),A
 4075 1775  F3          	DI
 4076 1776  21 0000     	LD	HL,0
 4077 1779  39          	ADD	HL,SP
 4078 177A  E5          	PUSH	HL		; aktueller Stack
 4079 177B  11 FC00     	LD	DE,-400H	; 1 KByte
 4080 177E  19          	ADD	HL,DE		; vor dem Stack
 4081 177F  ED 5B 03DB  	LD	DE,(FSLPTR)	; erste freie Adresse hinter den Variablen
 4082 1783  CD C689     	CALL	CPREG		; Vergleiche Register DE mit HL
 4083 1786  C1          	POP	BC		; aktueller Stack
 4084 1787  38 14       	JR	C,U17B7		; zu wenig Platz
 4085 1789  F9          	LD	SP,HL		; Stack 1KByte nach vorn verlegen
 4086 178A  EB          	EX	DE,HL		; neuer Stack jetzt in DE
 4087 178B  C5          	PUSH	BC		; aktueller Stack
 4088 178C  2A 0356     	LD	HL,(STDPTR)	; RAM-Mindestgroesse (KC85/3=7EFF KC85/4=BEFF)
 4089 178F  22 0047     	LD	(U0033),HL	; Ende ASCII-File
 4090 1792  ED 42       	SBC	HL,BC		; Groesse der Stack-Belegung berechnen
 4091 1794  4D          	LD	C,L
 4092 1795  44          	LD	B,H
 4093 1796  E1          	POP	HL		; aktueller Stack
 4094 1797  ED B0       	LDIR			; Stack-Inhalt mit nehmen
 4095 1799  ED 53 0045  	LD	(U0031),DE	; Beginn ASCII-File
 4096 179D  FB          U17B7:	EI
 4097 179E  C9          	RET
 4098                   ;
 4099                   ; Datei oeffnen (BASICODE schreiben)
 4100                   ; NF=1
 4101                   ;
 4102 179F  CD 1770     U17B9:	CALL	U178A		; Stack 1KByte nach vorn verlagern
 4103 17A2  D8          	RET	C		; zu wenig Speicherplatz
 4104 17A3  2A 0045     	LD	HL,(U0031)	; Beginn ASCII-File
 4105 17A6  22 0049     	LD	(CPOINT),HL	; als Pufferzeiger setzen (Puffer = leer)
 4106 17A9  C9          	RET
 4107                   ;
 4108                   ; Datei Schreiben (BASICODE schreiben)
 4109                   ; NF=1
 4110                   ;
 4111 17AA  2A 0049     U17C4:	LD	HL,(CPOINT)	; Pufferzeiger
 4112 17AD  77          	LD	(HL),A		; Datenbyte in Puffer eintragen
 4113 17AE  23          	INC	HL		; +1
 4114 17AF  22 0049     	LD	(CPOINT),HL	; Pufferzeiger neu
 4115 17B2  ED 5B 0047  	LD	DE,(U0033)	; Ende ASCII-File
 4116 17B6  CD C689     	CALL	CPREG		; Vergleiche Register DE mit HL
 4117 17B9  C0          	RET	NZ		; noch Platz im Puffer
 4118                   ;
 4119                   ; BASICODE Datenblock 1 KByte aus Puffer schreiben
 4120                   ;
 4121 17BA  26 00       U18A2:	LD	H,0		; Startwert Pruefbyte
 4122 17BC  D9          	EXX
 4123 17BD  CD 1911     	CALL	U1919		; BASICODE Bandsusgabe vorbereiten
 4124 17C0  3A 004B     	LD	A,(BLNR)
 4125 17C3  3C          	INC	A		; Blocknummer +1
 4126 17C4  32 004B     	LD	(BLNR),A
 4127 17C7  AF          	XOR	A
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  63
BAC85   Z80

 4128 17C8  32 0054     	LD	(U0044),A	; Abbruch/Fehler zurueck setzen
 4129 17CB  CD 197C     	CALL	VTON		; 5 Sekunden Vorton
 4130 17CE  3E 01       	LD	A,1		; 01H = STH start of header
 4131 17D0  CD 19FD     	CALL	BCOUT		; ein Byte schreiben
 4132 17D3  3A 004B     	LD	A,(BLNR)	; Blocknummer
 4133 17D6  CD 19FD     	CALL	BCOUT		; ein Byte schreiben
 4134 17D9  2A 0045     	LD	HL,(U0031)	; Beginn ASCII-File
 4135 17DC  22 0049     	LD	(CPOINT),HL	; Pufferzeiger
 4136 17DF  01 0400     	LD	BC,1024		; Blockgroesse = 1 KByte
 4137 17E2  7E          U18CA:	LD	A,(HL)		; Byte aus Puffer entnehmen
 4138 17E3  CD 19FD     	CALL	BCOUT		; ein Byte schreiben
 4139 17E6  CD 062E     	CALL	U0622		; Taste gedrueckt?
 4140 17E9  20 12       	JR	NZ,U18E5	; ja
 4141 17EB  ED A1       	CPI			; HL=HL+1 und BC=BC-1
 4142 17ED  EA 17E2     	JP	PE,U18CA	; bis BC=0
 4143 17F0  3E 03       U18D0:	LD	A,3		; Ende-Byte 03H = ETX
 4144 17F2  CD 19FD     	CALL	BCOUT		; ein Byte schreiben
 4145 17F5  CD 19F8     	CALL	BCPRO		; Pruefbyte schreiben
 4146 17F8  CD 1976     	CALL	NTON		; 1 Sekunde Nachton
 4147 17FB  18 05       	JR	BCOOLD		; umgeleitete ISR (Ausgabe) zurueckstellen
 4148                   	;
 4149 17FD  3E FF       U18E5:	LD	A,0FFH
 4150 17FF  32 0054     	LD	(U0044),A	; Abbruch/Fehler setzen
 4151                   ;	JR	BCOOLD		; umgeleitete ISR (Ausgabe) zurueckstellen
 4152                   ;
 4153                   ; umgeleitete ISR (bei Ausgabe) wieder zurueckstellen
 4154                   ;
 4155 1802  F3          BCOOLD:	DI
 4156 1803  3E 03       	LD	A,3
 4157 1805  D3 8D       	OUT	(CTC1),A
 4158 1807  2A 004F     	LD	HL,(U003F)	; gemerkter Wert fuer
 4159 180A  22 01EA     	LD	(01EAH),HL	; ISR CTC1
 4160 180D  18 0D       	JR	BCOLD
 4161                   ;
 4162                   ; umgeleitete ISR (bei Eingabe) wieder zurueckstellen
 4163                   ;
 4164 180F  F3          BCIOLD:	DI
 4165 1810  2A 004D     	LD	HL,(U003D)	; gemerkter Wert fuer
 4166 1813  22 01E4     	LD	(01E4H),HL	; Interrupt PIO Kanal A - Kassetteneingabe
 4167 1816  2A 004F     	LD	HL,(U003F)	; gemerkter Wert fuer
 4168 1819  22 01EC     	LD	(01ECH),HL	; Interrupt CTC 2
 4169 181C  3E 03       BCOLD:	LD	A,3
 4170 181E  D3 8D       	OUT	(CTC1),A	; CTC1 stoppen
 4171 1820  D3 8A       	OUT	(PIOAS),A	; PIO-A DI
 4172 1822  DB 88       	IN	A,(PIOAD)
 4173 1824  E6 9F       	AND	9FH		; LED aus, Stop Recorder
 4174 1826  D3 88       	OUT	(PIOAD),A
 4175 1828  3E 47       	LD	A,47H
 4176 182A  D3 8E       	OUT	(CTC2),A	; CTC2 Zaehler, ZK folgt
 4177 182C  D3 8E       	OUT	(CTC2),A	; ZK
 4178 182E  FB          	EI
 4179 182F  21 1BAC     	LD	HL,U1B63	; Text 'Bitte Band stoppen'
 4180 1832  C3 1AAE     	JP	U1AE5		; anzeigen
 4181                   ;
 4182                   ; BASICODE-Datenblock 1 KByte einlesen in Puffer
 4183                   ;
 4184 1835  3A 004B     U17F1:	LD	A,(BLNR)
 4185 1838  3C          	INC	A		; erwartete Blocknummer+1
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  64
BAC85   Z80

 4186 1839  32 004B     	LD	(BLNR),A
 4187 183C  AF          	XOR	A
 4188 183D  32 0054     	LD	(U0044),A	; Abbruch/Fehler zuruecksetzen
 4189 1840  CD 18E4     	CALL	U18EC		; BASICODE Bandeingabe vorbereiten
 4190 1843  CD 192E     U17FF:	CALL	BCSYN		; Synchronisation mit Frequenzmessung
 4191 1846  CD 199F     U1802:	CALL	BCIN		; ein Byte lesen
 4192 1849  38 FB       	JR	C,U1802		; Fehler, naechstes Byte lesen
 4193 184B  20 48       	JR	NZ,U1851	; Taste gedrueckt
 4194 184D  FE 01       	CP	1		; 01H = STH start of header
 4195 184F  28 08       	JR	Z,U1815
 4196 1851  21 1C5F     	LD	HL,U1C16	; Text 'kein BASICODE-Bestand!'
 4197 1854  CD 1AAE     	CALL	U1AE5		; anzeigen
 4198 1857  18 EA       	JR	U17FF		; und wiederholen
 4199                   	;
 4200 1859  CD 199F     U1815:	CALL	BCIN		; ein Byte lesen (Blocknummer)
 4201 185C  20 37       	JR	NZ,U1851	; Taste gedrueckt
 4202 185E  32 01F2     	LD	(U01F2),A	; Blocknummer in (IX+2) eintragen
 4203 1861  4F          	LD	C,A
 4204 1862  3A 004B     	LD	A,(BLNR)	; erwartete Blocknummer
 4205 1865  B9          	CP	C
 4206 1866  28 05       	JR	Z,U1829		; Blocknummer stimmt
 4207 1868  CD 18A1     	CALL	U185D		; Anzeige gelesene und erwartete Blocknummer
 4208 186B  18 D6       	JR	U17FF		; und wiederholen
 4209                   	;
 4210 186D  2A 0045     U1829:	LD	HL,(U0031)	; Beginn ASCII-File
 4211 1870  22 0049     	LD	(CPOINT),HL	; Pufferzeiger
 4212 1873  01 0400     	LD	BC,1024		; Blockgroesse = 1 KByte
 4213 1876  CD 199F     U1832:	CALL	BCIN		; ein Byte lesen
 4214 1879  20 1A       	JR	NZ,U1851	; Taste gedrueckt
 4215 187B  77          	LD	(HL),A		; Byte in Puffer ablegen
 4216 187C  ED A1       	CPI			; HL=HL+1 und BC=BC-1
 4217 187E  EA 1876     	JP	PE,U1832	; bis BC=0
 4218 1881  CD 199F     	CALL	BCIN		; ein Byte lesen (Ende-Byte 03H = ETX)
 4219                   				; wird nicht ueberprueft
 4220 1884  CD 199F     	CALL	BCIN		; ein Byte lesen (Check-Byte)
 4221 1887  20 0C       	JR	NZ,U1851	; Taste gedrueckt
 4222 1889  D9          	EXX
 4223 188A  24          	INC	H		; Pruefsumme von BCIN berechnet
 4224 188B  25          	DEC	H		; Pruefsumme korrekt?
 4225 188C  28 0C       	JR	Z,U1856		; ja
 4226 188E  CD 18CD     	CALL	U188B		; Lesefehler, zurueck J/N?
 4227 1891  28 B0       	JR	Z,U17FF		; ja, wiederholen
 4228 1893  18 05       	JR	U1856
 4229                   	;
 4230 1895  3E FF       U1851:	LD	A,0FFH		; Kennung fuer Abbruch/Fehler
 4231 1897  32 0054     	LD	(U0044),A	; Abbruch eintragen
 4232 189A  CD 180F     U1856:	CALL	BCIOLD		; umgeleitete ISR (Eingabe) zurueckstellen
 4233 189D  2A 0045     	LD	HL,(U0031)	; Beginn ASCII-File
 4234 18A0  C9          	RET
 4235                   ;
 4236                   ; Anzeige der gelesenen und erwarteten Blocknummer
 4237                   ;
 4238 18A1  21 1C23     U185D:	LD	HL,U1BDA	; Zeichenkette "falsche Blocknummer..."
 4239 18A4  11 1C38     	LD	DE,U1BEF	; hier die gelesene Blocknummer einbauen
 4240 18A7  3A 01F2     	LD	A,(U01F2)	; entspricht (IX+2) = gelesene Blocknummer
 4241 18AA  CD 18B9     	CALL	DEHEX		; in Zeichenkette einbauen
 4242 18AD  11 1C44     	LD	DE,U1BFB	; hier die erwartete Blocknummer einbauen
 4243 18B0  3A 004B     U186C:	LD	A,(BLNR)	; erwartete Blocknummer
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  65
BAC85   Z80

 4244 18B3  CD 18B9     	CALL	DEHEX		; in Zeichenkette einbauen
 4245 18B6  C3 1AAE     	JP	U1AE5		; und anzeigen
 4246                   ;
 4247                   ; aehnlich AHEX, aber Eintragen in Zeichenkette (DE)
 4248                   ;
 4249 18B9  F5          DEHEX:	PUSH	AF
 4250 18BA  0F          	RRCA
 4251 18BB  0F          	RRCA
 4252 18BC  0F          	RRCA
 4253 18BD  0F          	RRCA
 4254 18BE  CD 18C3     	CALL	HEX1		; 1x aufrufen
 4255 18C1  13          	INC	DE		; naechste Position
 4256 18C2  F1          	POP	AF		; und dann reinlaufen
 4257 18C3  E6 0F       HEX1:	AND	0FH		; Maske
 4258 18C5  C6 90       	ADD	A,90H		; uebliche
 4259 18C7  27          	DAA			; Routine
 4260 18C8  CE 40       	ADC	A,40H		; fuer die
 4261 18CA  27          	DAA			; Hexausgabe
 4262 18CB  12          	LD	(DE),A
 4263 18CC  C9          	RET
 4264                   ;
 4265                   ; Anzeige Lesefehler und Abfrage Wiederholung J/N?
 4266                   ;
 4267 18CD  21 1BFE     U188B:	LD	HL,U1BB5	; Text 'Lesefehler in Block ...'
 4268 18D0  11 1C13     	LD	DE,U1BCA	; hier die erwartete Blocknummer einbauen
 4269 18D3  CD 18B0     	CALL	U186C		; und anzeigen...
 4270 18D6  CD 0638     U1894:	CALL	U062C		; Tastatureingabe abwarten
 4271 18D9  E6 5F       	AND	5FH		; upcase
 4272 18DB  FE 4A       	CP	'J'
 4273 18DD  C8          	RET	Z		; Z=1 heisst wiederholen
 4274 18DE  FE 4E       	CP	'N'
 4275 18E0  20 F4       	JR	NZ,U1894
 4276 18E2  3D          	DEC	A		; Z=0 nicht wiederholen
 4277 18E3  C9          	RET
 4278                   ;
 4279                   ; BASICODE Bandeingabe vorbereiten
 4280                   ;
 4281 18E4  21 1B99     U18EC:	LD	HL,U1B50	; Text 'Bitte Band starten'
 4282 18E7  CD 1AAE     	CALL	U1AE5		; anzeigen
 4283 18EA  F3          	DI
 4284 18EB  3E 83       	LD	A,83H
 4285 18ED  D3 8A       	OUT	(PIOAS),A
 4286 18EF  2A 01E4     	LD	HL,(01E4H)	; Interrupt PIO Kanal A - Kassetteneingabe
 4287 18F2  22 004D     	LD	(U003D),HL	; hier merken
 4288 18F5  21 1ADB     	LD	HL,ISRPA
 4289 18F8  22 01E4     	LD	(01E4H),HL	; neuer Wert
 4290 18FB  2A 01EC     	LD	HL,(01ECH)	; Interrupt CTC Kanal 2 - Tondauer, Blinkfrequenz
 4291 18FE  22 004F     	LD	(U003F),HL
 4292 1901  21 1AFF     	LD	HL,ISRC2
 4293 1904  22 01EC     	LD	(01ECH),HL	; interne ISR fuer CTC2
 4294 1907  DB 88       U190F:	IN	A,(PIOAD)
 4295 1909  F6 40       	OR	40H
 4296 190B  E6 DF       	AND	0DFH
 4297 190D  D3 88       	OUT	(PIOAD),A
 4298 190F  FB          	EI
 4299 1910  C9          	RET
 4300                   ;
 4301                   ; BASICODE Bandsusgabe vorbereiten
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  66
BAC85   Z80

 4302                   ;
 4303 1911  21 1B99     U1919:	LD	HL,U1B50	; Text 'Bitte Band starten'
 4304 1914  CD 1AAE     	CALL	U1AE5		; anzeigen
 4305 1917  3E 03       	LD	A,3
 4306 1919  D3 8E       	OUT	(CTC2),A	; CTC2 stoppen
 4307 191B  F3          	DI
 4308 191C  2A 01EA     	LD	HL,(01EAH)	; Interrupt CTC Kanal 1 - Kassettenausgabe
 4309 191F  22 004F     	LD	(U003F),HL	; hier merken
 4310 1922  21 1AF5     	LD	HL,ISRC1	; neue ISR
 4311 1925  22 01EA     	LD	(01EAH),HL	; fuer CTC1 eintragen
 4312 1928  AF          	XOR	A
 4313 1929  32 01F0     	LD	(U01F0),A	; (IX+0) Zeitkonstante Kassettenroutinen
 4314 192C  18 D9       	JR	U190F
 4315                   ;
 4316                   ; Synchronisation mit Frequenzmessung
 4317                   ; PA:	Z=0	Taste gedrueckt
 4318                   ;	B'	Schwingungen fuer "1"
 4319                   ;	C'	Schwingungen fuer "0"
 4320                   ;	H'=0	Startwert fuer Pruefsummenberechnung
 4321                   ;
 4322 192E  D9          BCSYN:	EXX
 4323 192F  01 0D10     BCY1:	LD	BC,0D10H	; ca. 0.7 sek Tondauer bei 2400Hz
 4324 1932  5A          BCY2:	LD	E,D
 4325 1933  CD 062E     	CALL	U0622		; Taste gedrueckt?
 4326 1936  C0          	RET	NZ		; ja
 4327 1937  CD 1A41     	CALL	BCBY		; eine Schwingung messen
 4328 193A  57          	LD	D,A
 4329 193B  C6 04       	ADD	A,4
 4330 193D  BB          	CP	E
 4331 193E  38 EF       	JR	C,BCY1		; ausser Toloeranz (+5)
 4332 1940  D6 09       	SUB	9
 4333 1942  BB          	CP	E
 4334 1943  30 EA       	JR	NC,BCY1		; ausser Toleranz (-5)
 4335 1945  ED A1       	CPI			; wie DEC BC
 4336 1947  EA 1932     	JP	PE,BCY2		; wdh. bis BC=0
 4337 194A  60          	LD	H,B
 4338 194B  68          	LD	L,B		; HL=0
 4339 194C  50          	LD	D,B		; D=0
 4340 194D  CD 062E     BCY3:	CALL	U0622		; Taste gedrueckt?
 4341 1950  C0          	RET	NZ		; ja
 4342 1951  CD 1A41     	CALL	BCBY		; eine Schwingung messen
 4343 1954  5F          	LD	E,A
 4344 1955  19          	ADD	HL,DE		; addieren
 4345 1956  10 F5       	DJNZ	BCY3		; 256 Messungen addieren
 4346 1958  E5          	PUSH	HL
 4347 1959  7C          	LD	A,H
 4348 195A  CB 3C       	SRL	H		; /2
 4349 195C  84          	ADD	H
 4350 195D  47          	LD	B,A		; B=1.5 Schwingungen	"1"
 4351 195E  CB 3C       	SRL	H
 4352 1960  84          	ADD	H
 4353 1961  4F          	LD	C,A		; C=1.75 Schwingungen	"0"
 4354 1962  26 00       	LD	H,0		; Startwert fuer Pruefsummenberechnung in H'
 4355 1964  D9          	EXX
 4356 1965  E1          	POP	HL
 4357 1966  7C          	LD	A,H
 4358 1967  FE 45       	CP	45H
 4359 1969  38 05       	JR	C,U1B2F
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  67
BAC85   Z80

 4360 196B  21 1D0B     	LD	HL,U1CC2	; Text "Ein sehr schwaches Kassetteninterface..."
 4361 196E  18 03       	JR	U1B32		; anzeigen
 4362                   
 4363 1970  21 1BBF     U1B2F:	LD	HL,U1B76	; Text 'Ich lese BASICODE'
 4364 1973  C3 1AAE     U1B32:	JP	U1AE5		; anzeigen
 4365                   ;
 4366                   ; Nachton ausgeben, ca. 1 Sekunde
 4367                   ;
 4368 1976  C5          NTON:	PUSH	BC
 4369 1977  01 C012     	LD	BC,0C012H	; ca. 1 sek
 4370 197A  18 0C       	JR	BCTON
 4371                   ;
 4372                   ; Vorton ausgeben, ca. 5 Sekunden
 4373                   ;
 4374 197C  C5          VTON:	PUSH	BC
 4375 197D  01 C05D     	LD	BC,0C05DH	; ca. 5 Sekunden
 4376 1980  3E 85       	LD	A,85H
 4377 1982  D3 8D       	OUT	(CTC1),A	; Zeitgeber, VT=16, ZK folgt
 4378 1984  3E 17       	LD	A,17H		; ZK fuer 2400Hz
 4379 1986  D3 8D       	OUT	(CTC1),A
 4380 1988  3A 01F0     BCTON:	LD	A,(U01F0)	; Zeitkonstante
 4381 198B  B7          	OR	A
 4382 198C  20 FA       	JR	NZ,BCTON	; warten, bis von ISR 0 eingetragen ist
 4383 198E  3E 01       	LD	A,1
 4384 1990  32 01F0     	LD	(U01F0),A	; wieder auf 1 setzen
 4385 1993  10 F3       	DJNZ	BCTON
 4386 1995  0D          	DEC	C
 4387 1996  20 F0       	JR	NZ,BCTON	; wiederholen
 4388 1998  3E FF       	LD	A,0FFH
 4389 199A  32 01F0     	LD	(U01F0),A	; und noch weitere 255 Schwingungen
 4390 199D  C1          	POP	BC
 4391 199E  C9          	RET
 4392                   ;
 4393                   ; Ein Byte BASICODE lesen
 4394                   ; PA:	Z=0	Taste gedrueckt
 4395                   ;	CY=1	Fehler
 4396                   ;
 4397 199F  D9          BCIN:	EXX
 4398 19A0  2E 00       	LD	L,0
 4399 19A2  5D          	LD	E,L		; E=0
 4400 19A3  CD 062E     BCI1:	CALL	U0622		; Taste gedrueckt?
 4401 19A6  C0          	RET	NZ		; ja
 4402 19A7  2D          	DEC	L
 4403 19A8  28 4B       	JR	Z,BCI6		; 256 mal kein Startbit gelesen
 4404 19AA  CD 1A4C     	CALL	BCHB		; Zeit abwarten
 4405 19AD  57          	LD	D,A
 4406 19AE  83          	ADD	E
 4407 19AF  5A          	LD	E,D
 4408 19B0  B9          	CP	C
 4409 19B1  38 F0       	JR	C,BCI1		; kein Startbit
 4410 19B3  CB 3F       	SRL	A
 4411 19B5  B9          	CP	C
 4412 19B6  30 EB       	JR	NC,BCI1		; kein Startbit
 4413 19B8  1E 80       	LD	E,80H
 4414 19BA  2E 00       	LD	L,0
 4415 19BC  7D          BCI2:	LD	A,L
 4416 19BD  B7          	OR	A
 4417 19BE  CC 1A4C     	CALL	Z,BCHB		; Bit lesen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  68
BAC85   Z80

 4418 19C1  2E 00       	LD	L,0
 4419 19C3  B8          	CP	B
 4420 19C4  30 1D       	JR	NC,BCI5		; "0" einschieben
 4421 19C6  57          	LD	D,A
 4422 19C7  CD 1A4C     	CALL	BCHB		; Bit lesen
 4423 19CA  82          	ADD	D
 4424 19CB  B9          	CP	C
 4425 19CC  30 15       	JR	NC,BCI5		; "0" einschieben
 4426 19CE  B8          	CP	B
 4427 19CF  38 06       	JR	C,BCI3
 4428 19D1  CD 1A4C     	CALL	BCHB		; Bit lesen
 4429 19D4  87          	ADD	A
 4430 19D5  18 03       	JR	BCI4
 4431                   	;
 4432 19D7  CD 1A41     BCI3:	CALL	BCBY		; eine Schwingung messen
 4433 19DA  B8          BCI4:	CP	B
 4434 19DB  38 06       	JR	C,BCI5		; "1" einschieben
 4435 19DD  D6 17       	SUB	17H
 4436 19DF  CB 3F       	SRL	A
 4437 19E1  6F          	LD	L,A
 4438 19E2  37          	SCF			; "1"
 4439 19E3  CB 1B       BCI5:	RR	E		; Bit einschieben
 4440 19E5  30 D5       	JR	NC,BCI2		; 8 Bit einlesen
 4441 19E7  7B          	LD	A,E
 4442 19E8  AC          	XOR	H		; Pruefsumme berechnen in H'
 4443 19E9  67          	LD	H,A
 4444 19EA  7B          	LD	A,E
 4445 19EB  EE 80       	XOR	80H		; Bit 7 invertieren
 4446 19ED  CD 0986     	CALL	U09DD		; Zeichen in unterste Zeile malen
 4447 19F0  CD 062E     	CALL	U0622		; Taste gedrueckt?
 4448 19F3  D9          	EXX
 4449 19F4  C9          	RET			; Z=0, wenn Taste gedrueckt wurde
 4450                   	;
 4451 19F5  D9          BCI6:	EXX
 4452                   ;
 4453                   ; Dateiarbeit, ungenutzte Routinen
 4454                   ; NF=4..7
 4455                   ;
 4456 19F6  37          U09AC:	SCF			; Fehler-Kennung
 4457 19F7  C9          	RET
 4458                   ;
 4459                   ; Pruefbyte (H') ausgeben
 4460                   ;
 4461 19F8  D9          BCPRO:	EXX
 4462 19F9  7C          	LD	A,H		; Pruefbyte
 4463 19FA  EE 80       	XOR	80H
 4464 19FC  D9          	EXX
 4465                   ;
 4466                   ; Datenbyte ausgeben im BASICODE-Format
 4467                   ;
 4468 19FD  D9          BCOUT:	EXX
 4469 19FE  CD 0986     	CALL	U09DD		; Zeichen malen
 4470 1A01  EE 80       	XOR	80H		; Bit 7 negieren
 4471 1A03  4F          	LD	C,A		; Zeichen
 4472 1A04  06 09       	LD	B,9		; insgesamt 9 Bit mit Startbit
 4473 1A06  AC          	XOR	H		; Pruefsumme nebenbei mit berechnen
 4474 1A07  67          	LD	H,A
 4475 1A08  CB 21       	SLA	C		; Startbit "0" einschieben
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  69
BAC85   Z80

 4476 1A0A  3A 01F0     BCO1:	LD	A,(U01F0)	; (IX+0)
 4477 1A0D  3C          	INC	A
 4478 1A0E  3D          	DEC	A		; CY bleibt unveraendert
 4479 1A0F  20 F9       	JR	NZ,BCO1		; warten, bis 0 eingetragen ist
 4480 1A11  3E 85       	LD	A,85H
 4481 1A13  D3 8D       	OUT	(CTC1),A	; neue ZK ankuendigen
 4482 1A15  CB 19       	RR	C
 4483 1A17  30 08       	JR	NC,BCO2	; Bit 0 oder 1?
 4484 1A19  3E 17       	LD	A,17H		; ZK fuer 2400Hz
 4485 1A1B  D3 8D       	OUT	(CTC1),A
 4486 1A1D  3E 04       	LD	A,4		; 2 Schwingungen
 4487 1A1F  18 06       	JR	BCO3
 4488                   	;
 4489 1A21  3E 2E       BCO2:	LD	A,2EH		; ZK fuer 1200Hz
 4490 1A23  D3 8D       	OUT	(CTC1),A
 4491 1A25  3E 02       	LD	A,2		; 1 Schwingung
 4492 1A27  32 01F0     BCO3:	LD	(U01F0),A	; (IX+0)
 4493 1A2A  10 DE       	DJNZ	BCO1
 4494 1A2C  3A 01F0     BCO4:	LD	A,(U01F0)	; (IX+0)
 4495 1A2F  B7          	OR	A
 4496 1A30  20 FA       	JR	NZ,BCO4		; warten bis 0 eingetragen ist
 4497 1A32  3E 85       	LD	A,85H
 4498 1A34  D3 8D       	OUT	(CTC1),A	; neue ZK ankuendigen
 4499 1A36  3E 17       	LD	A,17H		; ZK fuer 2400Hz
 4500 1A38  D3 8D       	OUT	(CTC1),A
 4501 1A3A  3E 08       	LD	A,8		; 4 Schwingungen = 2 Stoppbits
 4502 1A3C  32 01F0     	LD	(U01F0),A
 4503 1A3F  D9          	EXX
 4504 1A40  C9          	RET
 4505                   ;
 4506                   ; eine Schwingung messen (Addieden von 2 Halbwellen)
 4507                   ;
 4508 1A41  D5          BCBY:	PUSH	DE
 4509 1A42  CD 1A4C     	CALL	BCHB		; erste Halbwelle
 4510 1A45  5F          	LD	E,A
 4511 1A46  CD 1A4C     	CALL	BCHB		; zweite Halbwelle
 4512 1A49  83          	ADD	A,E		; addieren
 4513 1A4A  D1          	POP	DE
 4514 1A4B  C9          	RET
 4515                   ;
 4516                   ; Warten auf Flankenwechsel am PIO
 4517                   ;
 4518 1A4C  AF          BCHB:	XOR	A
 4519 1A4D  32 01F0     	LD	(U01F0),A	; (IX+0) auf 0 setzen
 4520 1A50  DB 88       BCHW:	IN	A,(PIOAD)
 4521 1A52  D3 88       	OUT	(PIOAD),A	; PIO freigeben
 4522 1A54  3A 01F0     	LD	A,(U01F0)
 4523 1A57  B7          	OR	A
 4524 1A58  28 F6       	JR	Z,BCHW		; Warten, bis Zeit eingetragen ist
 4525 1A5A  C9          	RET
 4526                   ;
 4527                   ; Zeichen im ASCII-Speicher ablegen und auf Bildschirm malen
 4528                   ;	
 4529 1A5B  F5          U1A8A:	PUSH	AF		; Zeichen
 4530 1A5C  3A 003B     	LD	A,(FLAGS)
 4531 1A5F  CB 77       	BIT	6,A		; unerlaubter Befehl?
 4532 1A61  28 11       	JR	Z,U1AA3
 4533 1A63  E6 BF       	AND	0BFH		; Bit 6 ruecksetzen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  70
BAC85   Z80

 4534 1A65  32 003B     	LD	(FLAGS),A
 4535 1A68  0B          	DEC	BC
 4536 1A69  0A          	LD	A,(BC)		; letztes Zeichen
 4537 1A6A  03          	INC	BC
 4538 1A6B  FE 3A       	CP	':'		; war das ein Doppelpunkt?
 4539 1A6D  28 05       	JR	Z,U1AA3
 4540 1A6F  3E 20       	LD	A,' '		; danach immer ein Leerzeichen
 4541 1A71  CD 1A75     	CALL	U1AA4		; eintragen, dann reinlaufen
 4542 1A74  F1          U1AA3:	POP	AF
 4543 1A75  02          U1AA4:	LD	(BC),A		; Zeichen in ASCII-File schreiben
 4544 1A76  03          	INC	BC		; Zeiger weiter ruecken
 4545         0000      IF KC3
 4555                   ELSE
 4556 1A77  08          	EX	AF,AF'
 4557 1A78  3C          	INC	A		; Zeichen zaehlen
 4558 1A79  08          	EX	AF,AF'
 4559 1A7A  C3 0986     	JP	U09DD		; Zeichen malen
 4560                   ENDIF
 4561                   
 4562                   ;
 4563                   ; Test: ASCII-File und BASIC-Programm im Speicher?
 4564                   ;
 4565 1A7D  21 2189     U1AB5:	LD	HL,Z1000	; Anfang BASIC-Programm
 4566                   ;	LD	D,A		; ???
 4567 1A80  5E          	LD	E,(HL)
 4568 1A81  23          	INC	HL
 4569 1A82  7E          	LD	A,(HL)
 4570 1A83  2B          	DEC	HL
 4571 1A84  B3          	OR	E
 4572                   ;	LD	A,D		; ???
 4573 1A85  3E 01       	LD	A,1		; A=1 (BASIC-Programm im Speicher)
 4574 1A87  20 01       	JR	NZ,U1AC4
 4575 1A89  3D          	DEC	A		; A=0 (kein BASIC-Programm im Speicher)
 4576 1A8A  4F          U1AC4:	LD	C,A
 4577 1A8B  3A 003B     	LD	A,(FLAGS)
 4578 1A8E  E6 02       	AND	2		; Bi1 1: ASCII-File im Speicher?
 4579 1A90  28 0E       	JR	Z,U1ADA		; nein
 4580 1A92  2A 0045     	LD	HL,(U0031)	; Beginn ASCII-File
 4581 1A95  ED 5B 03D7  	LD	DE,(SVARPT)	; BASIC-Programmende+1
 4582 1A99  CD C689     	CALL	CPREG		; Vergleiche Register DE mit HL
 4583 1A9C  38 02       	JR	C,U1ADA		; BASIC-Programm hat ASCII ueberschrieben!
 4584 1A9E  CB C9       	SET	1,C		; ASCII-File im Speicher
 4585 1AA0  79          U1ADA:	LD	A,C
 4586 1AA1  C9          	RET
 4587                   	
 4588 1AA2  21 1CA2     U1ADC:	LD	HL,U1C59	; Text 'kein ASCII-File im Speicher!'
 4589 1AA5  CD 1AAE     	CALL	U1AE5		; anzeigen
 4590 1AA8  C3 C08C     	JP	SECST		; RESTART BASIC-Interpreter
 4591                   ;
 4592                   ; Anzeige 'Speicher voll'
 4593                   ;
 4594 1AAB  21 1BD1     U0ECA:	LD	HL,U1B88	; Text 'Speichergrenze erreicht!'
 4595                   ;	JP	U1AE5		; anzeigen
 4596                   ;
 4597                   ; Zeichenkette anzeigen, welche in (HL) uebergeben wird
 4598                   ; Das erste Byte gibt dabei die Anzahl der folgenden Zeichen an
 4599                   ;
 4600 1AAE  E5          U1AE5:	PUSH	HL
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  71
BAC85   Z80

 4601 1AAF  2A 0358     	LD	HL,(CULINO)	; aktuelle Zeilennummer
 4602 1AB2  23          	INC	HL
 4603 1AB3  7C          	LD	A,H
 4604 1AB4  B5          	OR	L		; Zeilennummer=0?
 4605 1AB5  E1          	POP	HL
 4606 1AB6  20 0B       	JR	NZ,U1AFA	; wir befinden und im Programm
 4607                   ; im Direktmode normal anzeigen
 4608 1AB8  46          	LD	B,(HL)		; Anzahl
 4609 1AB9  23          U1AF0:	INC	HL
 4610 1ABA  7E          	LD	A,(HL)		; Zeichen
 4611 1ABB  CD DDD5     	CALL	CO		; anzeigen
 4612 1ABE  10 F9       	DJNZ	U1AF0
 4613 1AC0  C3 CB61     	JP	CRWDY2		; Anzeige CR, LF, Dummyzeichen
 4614                   ; im Programmmode auf untere Zeile malen
 4615 1AC3  CD 0968     U1AFA:	CALL	U09AE		; IRM-Adresse auf links/unten einstellen
 4616 1AC6  46          	LD	B,(HL)		; Anzahl
 4617 1AC7  48          	LD	C,B
 4618 1AC8  23          U1AFF:	INC	HL
 4619 1AC9  7E          	LD	A,(HL)		; Zeichen
 4620 1ACA  CD 0986     	CALL	U09DD		; in unterste Zeile malen
 4621 1ACD  10 F9       	DJNZ	U1AFF
 4622 1ACF  3E 28       	LD	A,28H
 4623 1AD1  91          	SUB	C
 4624 1AD2  47          	LD	B,A
 4625 1AD3  3E 20       	LD	A,20H
 4626 1AD5  CD 0986     U1B0C:	CALL	U09DD		; Zeichen malen
 4627 1AD8  10 FB       	DJNZ	U1B0C
 4628 1ADA  C9          	RET
 4629                   ;
 4630                   ; ISR PIO-A (Kassetteneingabe)
 4631                   ;
 4632 1ADB  F5          ISRPA:	PUSH	AF
 4633 1ADC  DB 8E       	IN	A,(CTC2)	; aktueller Zaehlerstand
 4634 1ADE  ED 44       	NEG
 4635 1AE0  32 01F0     	LD	(U01F0),A	; Ablage der Zeit auf (IX+0)
 4636 1AE3  3E 07       	LD	A,7
 4637 1AE5  D3 8E       	OUT	(CTC2),A	; CTC ruecksetzen, neue ZK
 4638 1AE7  3E FC       	LD	A,0FCH
 4639 1AE9  D3 8E       	OUT	(CTC2),A	; ZK laden
 4640 1AEB  DB 88       	IN	A,(PIOAD)
 4641 1AED  EE 20       	XOR	20H		; LED ein/aus
 4642 1AEF  D3 88       	OUT	(PIOAD),A
 4643 1AF1  F1          IRET:	POP	AF
 4644 1AF2  FB          	EI
 4645 1AF3  ED 4D       	RETI
 4646                   ;
 4647                   ; ISR CTC Kanal 1 (Kassettenausgabe)
 4648                   ; (IX+0) decrementieren
 4649                   ;
 4650 1AF5  F5          ISRC1:	PUSH	AF
 4651 1AF6  3A 01F0     	LD	A,(U01F0)	; schneller als DEC (IX+0)
 4652 1AF9  3D          	DEC	A		; 18 statt 23 Takte
 4653 1AFA  32 01F0     	LD	(U01F0),A	; (IX+0)
 4654 1AFD  18 F2       	JR	IRET		; POP AF, EI, RETI
 4655                   ;
 4656                   ; ISR CTC Kanal 2 (Ton)-Dauer und Kassetteneingabe
 4657                   ;
 4658 1AFF  F5          ISRC2:	PUSH	AF
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  72
BAC85   Z80

 4659 1B00  E5          	PUSH	HL
 4660 1B01  2A 005A     	LD	HL,(U004A)	; Zaehler
 4661 1B04  2B          	DEC	HL		; decrementieren
 4662 1B05  22 005A     	LD	(U004A),HL	; und zurueckschreiben
 4663 1B08  7C          	LD	A,H
 4664 1B09  B5          	OR	L		; Zaehler=0?
 4665 1B0A  20 0A       	JR	NZ,ISRCO	; nein
 4666 1B0C  3E 03       	LD	A,3
 4667 1B0E  D3 8D       	OUT	(CTC1),A	; CTC1 stoppen
 4668 1B10  3E 47       	LD	A,47H
 4669 1B12  D3 8E       	OUT	(CTC2),A	; CTC2 neu starten
 4670 1B14  D3 8E       	OUT	(CTC2),A	; mit dieser Zeitkonstante
 4671 1B16  E1          ISRCO:	POP	HL
 4672 1B17  18 D8       	JR	IRET		; POP AF, EI, RETI
 4673                   ;
 4674                   ; 02.01.2024: Kopie einer Tastaturtabelle direkt hier im Programm
 4675                   ; diese KTAB deaktiviert STOP- und BRK-Taste
 4676                   ;
 4677 1B19  57 77       KTAB2:	DB	'Ww'		;		00 01
 4678 1B1B  41 61       	DB	'Aa'		;		02 03
 4679 1B1D  32 22       	DB	'2"'		;		04 05
 4680 1B1F  08 19       	DB	8,19H		; CUL		06 07
 4681 1B21  10 0C       	DB	10H,0CH		; HOME		08 09
 4682 1B23  2D 3D       	DB	'-='		;		0A 0B
 4683 1B25  F2 F8       	DB	0F2H,0F8H	; F2		0C 0D
 4684 1B27  59 79       	DB	'Yy'		;		0E 0F	
 4685 1B29  45 65       	DB	'Ee'		;		10 11
 4686 1B2B  53 73       	DB	'Ss'		;		12 13
 4687 1B2D  33 23       	DB	'3#'		;		14 15
 4688 1B2F  5E 5D       	DB	'^]'		;		16 17
 4689 1B31  01 0F       	DB	1,0FH		; CLR		18 19
 4690 1B33  3A 2A       	DB	':*'		;		1A 1B
 4691 1B35  F3 F9       	DB	0F3H,0F9H	; F3		1C 1D
 4692 1B37  58 78       	DB	'Xx'		;		1E 1F
 4693 1B39  54 74       	DB	'Tt'		;		20 21
 4694 1B3B  46 66       	DB	'Ff'		;		22 23
 4695 1B3D  35 25       	DB	'5%'		;		24 25
 4696 1B3F  50 70       	DB	'Pp'		;		26 27
 4697 1B41  1F 02       	DB	1FH,2		; DEL		28 29
 4698 1B43  30 40       	DB	'0',40H		;		2A 2B
 4699 1B45  F5 FB       	DB	0F5H,0FBH	; F5		2C 2D
 4700 1B47  56 76       	DB	'Vv'		;		2E 2F
 4701 1B49  55 75       	DB	'Uu'		;		30 31
 4702 1B4B  48 68       	DB	'Hh'		;		32 33
 4703 1B4D  37 27       	DB	'7',27H		; 7 / Apostroph	34 35
 4704 1B4F  4F 6F       	DB	'Oo'		;		36 37
 4705 1B51  1A 14       	DB	1AH,14H		; INS		38 39
 4706 1B53  39 29       	DB	'9)'		;		3A 3B
 4707 1B55  00 00       	DB	0,0		; BRK		3C 3D
 4708 1B57  4E 6E       	DB	'Nn'		;		3E 3F
 4709 1B59  49 69       	DB	'Ii'		;		40 41
 4710 1B5B  4A 6A       	DB	'Jj'		;		42 43
 4711 1B5D  38 28       	DB	'8('		;		44 45
 4712 1B5F  20 5B       	DB	' ['		; SPC		46 47
 4713 1B61  4B 6B       	DB	'Kk'		;		48 49
 4714 1B63  2C 3C       	DB	',<'		;		4A 4B
 4715         0000      IF KC3
 4717                   ELSE
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  73
BAC85   Z80

 4718 1B65  00 1B       	DB	0,ESC		; STOP		4C 4D
 4719                   ENDIF
 4720 1B67  4D 6D       	DB	'Mm'		;		4E 4F
 4721 1B69  5A 7A       	DB	'Zz'		;		50 51
 4722 1B6B  47 67       	DB	'Gg'		;		52 53
 4723 1B6D  36 26       	DB	'6&'		;		54 55
 4724 1B6F  1C 1D       	DB	1CH,1DH		; LIST/RUN	56 57
 4725 1B71  4C 6C       	DB	'Ll'		;		58 59
 4726 1B73  2E 3E       	DB	'.>'		;		5A 5B
 4727 1B75  F6 FC       	DB	0F6H,0FCH	; F6		5C 5D
 4728 1B77  42 62       	DB	'Bb'		;		5E 5F
 4729 1B79  52 72       	DB	'Rr'		;		60 61
 4730 1B7B  44 64       	DB	'Dd'		;		62 63
 4731 1B7D  34 24       	DB	'4$'		;		64 65
 4732 1B7F  5F 5C       	DB	'_\'		;		66 67
 4733 1B81  2B 3B       	DB	'+;'		;		68 69
 4734 1B83  2F 3F       	DB	'/?'		;		6A 6B
 4735 1B85  F4 FA       	DB	0F4H,0FAH	; F4		6C 6D
 4736 1B87  43 63       	DB	'Cc'		;		6E 6F
 4737 1B89  51 71       	DB	'Qq'		;		70 71
 4738 1B8B  16 05       	DB	16H,5		; CAPS		72 73
 4739 1B8D  31 21       	DB	'1!'		;		74 75
 4740 1B8F  0A 12       	DB	LF,12H		; CUD		76 77
 4741 1B91  0B 11       	DB	0BH,11H		; CUU		78 79
 4742 1B93  09 18       	DB	9,18H		; CUR		7A 7B
 4743 1B95  F1 F7       	DB	0F1H,0F7H	; F1		7C 7D
 4744 1B97  0D 0E       	DB	CR,0EH		; ENTER		7E 7F
 4745                   ;
 4746                   ; Zeichenketten, jeweils erst die Anzahl der Bytes, dann der Text
 4747                   ;
 4748 1B99  12 42 69 74 U1B50:	DB	18,'Bitte Band starten'
 4749 1BAC  12 42 69 74 U1B63:	DB	18,'Bitte Band stoppen'
 4750 1BBF  11 49 63 68 U1B76:	DB	17,'Ich lese BASICODE'
 4751 1BD1  18 53 70 65 U1B88:	DB	24,'Speichergrenze erreicht!'
 4752 1BEA  13 4C 65 73 U1BA1:	DB	19,'Lesefehler erkannt!'
 4753 1BFE  24 4C 65 73 U1BB5:	DB	36,'Lesefehler in Block '
 4754 1C13  20 20 21 20 U1BCA:	DB	'  ! zurueck? J/N'
 4755 1C23  23 66 61 6C U1BDA:	DB	35,'falsche Blocknummer '
 4756 1C38  20 20 3B 20 U1BEF:	DB	'  ; erwarte '
 4757 1C44  20 20 21    U1BFB:	DB	'  !'
 4758 1C47  17 6B 65 69 U1BFE:	DB	23,'kein BASICODE-Programm!'
 4759 1C5F  16 6B 65 69 U1C16:	DB	22,'kein BASICODE-Bestand!'		; keine BASICODE-Datei
 4760 1C76  1C 75 6E 65 U1C2D:	DB	28,'unerlaubter BASICODE-Befehl!'
 4761 1C93  0E 52 65 67 U1C4A:	DB	14,'Regelverstoss!'
 4762 1CA2  1C 6B 65 69 U1C59:	DB	28,'kein ASCII-File im Speicher!'
 4763 1CBF  19 50 72 6F U1C76:	DB	25,'Programm wurde geloescht!'
 4764 1CD9  1A 6B 65 69 U1C90:	DB	26,'kein Programm im Speicher!'
 4765 1CF4  16 42 65 73 U1CAB:	DB	22,'Bestaende geschlossen!'		; Dateien geschlossen
 4766 1D0B  28 45 69 6E U1CC2:	DB	40,'Ein sehr schwaches Kassetteninterface...'
 4767 1D34  4E 61 6D 65 	DB	'Name: ',0
 4768 1D3B  5A 65 69 6C U1CF2:	DB	'Zeile ',0
 4769 1D42  20 69 73 74 U1CF9:	DB	' ist zu lang'
 4770 1D4E  0D 0A 00    U1D05:	DB	CR,LF,0
 4771 1D51  08 20 08    U1D08:	DB	8,' ',8
 4772 1D54  4C 4F 47 80 U1D0B:	DB	'LOG',80H
 4773 1D58  20 42 79 74 U1D0F:	DB	' Bytes',CR,LF,0
 4774 1D61  0D 0A 50 72 U1D18:	DB	CR,LF,'Programm:',0
 4775 1D6D  41 53 43 2D U1D24:	DB	'ASC-File:',0
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  74
BAC85   Z80

 4776 1D77  46 72 65 69 U1D2E:	DB	'Frei    :',0
 4777 1D81  0D 0A 20 2A U1D38:	DB	CR,LF,' *  - BASICODE-Menu'
 4778 1D96  0D 0A 20 2A 	DB	CR,LF,' *L - Laden, Uebersetzen und Starten'
 4779 1DBC  0D 0A 20 2A 	DB	CR,LF,' *A - Einlesen ASCII-File'
 4780 1DD7  0D 0A 20 2A 	DB	CR,LF,' *W - Retten ASCII-File'
 4781 1DF0  0D 0A 20 2A 	DB	CR,LF,' *T - Uebersetzen ASCII-File ==> BASIC'
 4782 1E18  0D 0A 20 2A 	DB	CR,LF,' *C - Uebersetzen BASIC ==> ASCII-File'
 4783 1E40  0D 0A 20 2A 	DB	CR,LF,' *K - Listen ASCII-File'
 4784 1E59  0D 0A 00    	DB	CR,LF,0
 4785                   ;
 4786                   ; erlaubte Token im BASICODE-Programm
 4787                   ;
 4788 1E5C  B8          U1E13:	DB	0B8H	; ABS
 4789 1E5D  B1          	DB	0B1H	; AND
 4790 1E5E  CB          	DB	0CBH	; ASC
 4791 1E5F  C4          	DB	0C4H	; ATN
 4792 1E60  CC          	DB	0CCH	; CHR$
 4793 1E61  C1          	DB	0C1H	; COS
 4794 1E62  83          	DB	83H	; DATA
 4795 1E63  94          	DB	94H	; DEF
 4796 1E64  85          	DB	85H	; DIM
 4797 1E65  C0          	DB	0C0H	; EXP
 4798 1E66  A7          	DB	0A7H	; FN
 4799 1E67  81          	DB	81H	; FOR
 4800 1E68  8A          	DB	8AH	; IF
 4801 1E69  84          	DB	84H	; INPUT
 4802 1E6A  B7          	DB	0B7H	; INT
 4803 1E6B  CD          	DB	0CDH	; LEFT$
 4804 1E6C  C8          	DB	0C8H	; LEN
 4805 1E6D  87          	DB	87H	; LET
 4806 1E6E  BF          	DB	0BFH	; LN
 4807 1E6F  CF          	DB	0CFH	; MID$
 4808 1E70  AA          	DB	0AAH	; NOT
 4809 1E71  91          	DB	91H	; ON
 4810 1E72  B2          	DB	0B2H	; OR
 4811 1E73  9E          	DB	9EH	; PRINT
 4812 1E74  86          	DB	86H	; READ
 4813 1E75  8D          	DB	8DH	; RETURN
 4814 1E76  CE          	DB	0CEH	; RIGHT$
 4815 1E77  B6          	DB	0B6H	; SGN
 4816 1E78  C2          	DB	0C2H	; SIN
 4817 1E79  BD          	DB	0BDH	; SQR
 4818 1E7A  A5          	DB	0A5H	; TAB(
 4819 1E7B  C3          	DB	0C3H	; TAN
 4820 1E7C  CA          	DB	0CAH	; VAL
 4821 1E7D  AC          	DB	0ACH	; +
 4822 1E7E  AD          	DB	0ADH	; -
 4823 1E7F  AE          	DB	0AEH	; *
 4824 1E80  AF          	DB	0AFH	; /
 4825 1E81  B0          	DB	0B0H	; ^
 4826 1E82  B3          	DB	0B3H	; >
 4827 1E83  B4          	DB	0B4H	; =
 4828 1E84  B5          	DB	0B5H	; <
 4829 1E85  8C          U1E3C:	DB	8CH	; GOSUB
 4830 1E86  88          	DB	88H	; GOTO
 4831 1E87  AB          	DB	0ABH	; STEP
 4832 1E88  A9          	DB	0A9H	; THEN
 4833 1E89  A6          	DB	0A6H	; TO
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  75
BAC85   Z80

 4834                   ;
 4835                   ; vordefinierte Variablen fuer Laufzeit
 4836                   ;
 4837 1E8A  484F        U1E41:	DW	'HO'
 4838 1E8C  0000        	DW	0
 4839 1E8E  861C        	DW	861CH	; 39
 4840                   
 4841 1E90  5645        	DW	'VE'
 4842 1E92  0000        	DW	0
 4843 1E94  8578        	DW	8578H	; 31
 4844                   
 4845 1E96  494E        	DW	'IN'
 4846 1E98  0000        	DW	0
 4847 1E9A  0000        	DW	0	; 0
 4848                   
 4849 1E9C  49CE        	DW	'IN'+80H	; IN$
 4850 1E9E  0000        	DW	0
 4851 1EA0  8420        	DW	8420H	; 10
 4852                   
 4853 1EA2  53D2        	DW	'SR'+80H	; SR$
 4854 1EA4  0000        	DW	0
 4855 1EA6  8100        	DW	8100H	; 1
 4856                   
 4857 1EA8  434E        	DW	'CN'
 4858 1EAA  0000        	DW	0
 4859 1EAC  0000        	DW	0	; 0
 4860                   
 4861 1EAE  4847        	DW	'HG'
 4862 1EB0  0000        	DW	0
 4863 1EB2  8920        	DW	8920H	; 320
 4864                   
 4865 1EB4  5647        	DW	'VG'
 4866 1EB6  0000        	DW	0
 4867 1EB8  8870        	DW	8870H	; 240
 4868                   ;
 4869                   ; Sprungverteiler zum Oeffnen einer Datei
 4870                   ;
 4871 1EBA  16FC        U1E71:	DW	U172D	; NF=0	BASICODE lesen
 4872 1EBC  179F        	DW	U17B9	; NF=1	BASICODE schreiben
 4873 1EBE  08A7        	DW	U0829	; NF=2	KC-Format lesen (TAPE)
 4874 1EC0  091F        	DW	U0915	; NF=3	KC-Format schreiben (TAPE)
 4875         0001      if DEV
 4876 1EC2  08A7        	DW	U0829	; NF=4  KC-Format lesen (Diskette)
 4877 1EC4  091F        	DW	U0915	; NF=5  KC-Format schreiben (Diskette)
 4878 1EC6  08A7        	DW	U0829	; NF=6  KC-Format lesen (USB)
 4879 1EC8  091F        	DW	U0915	; NF=7  KC-Format schreiben (USB)
 4880                   ELSE
 4885                   ENDIF
 4886                   ;
 4887                   ; Sprungverteiler zum Schliessen einer Datei
 4888                   ;
 4889 1ECA  174F        U1E81:	DW	U1769	; NF=0	BASICODE lesen
 4890 1ECC  1738        	DW	U17D7	; NF=1	BASICODE schreiben
 4891 1ECE  08C1        	DW	U0864	; NF=2	KC-Format lesen (TAPE)
 4892 1ED0  0962        	DW	U099A	; NF=3	KC-Format schreiben (TAPE)
 4893         0001      IF DEV
 4894 1ED2  08C1        	DW	U0864	; NF=4	KC-Format lesen (DISK)
 4895 1ED4  0962        	DW	U099A	; NF=5	KC-Format schreiben (DISK)
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  76
BAC85   Z80

 4896 1ED6  08C1        	DW	U0864	; NF=6	KC-Format lesen (USB)
 4897 1ED8  0962        	DW	U099A	; NF=7	KC-Format schreiben (USB)
 4898                   ELSE
 4903                   ENDIF
 4904                   ;
 4905                   ; Sprungverteiler zum Datei Lesen/Schreiben (1 Byte)
 4906                   ;
 4907 1EDA  1708        U1E91:	DW	U1739	; NF=0	BASICODE lesen
 4908 1EDC  17AA        	DW	U17C4	; NF=1	BASICODE schreiben
 4909 1EDE  08C4        	DW	U0869	; NF=2	KC-Format lesen (TAPE)
 4910 1EE0  0929        	DW	U0946	; NF=3	KC-Format schreiben (TAPE)
 4911         0001      IF DEV
 4912 1EE2  08C4        	DW	U0869	; NF=4	KC-Format lesen (DISK)
 4913 1EE4  0929        	DW	U0946	; NF=5	KC-Format schreiben (DISK)
 4914 1EE6  08C4        	DW	U0869	; NF=6	KC-Format lesen (USB)
 4915 1EE8  0929        	DW	U0946	; NF=7	KC-Format schreiben (USB)
 4916                   ELSE
 4921                   ENDIF
 4922                   ;
 4923                   ; Sonderbefehle mit *
 4924                   ;
 4925 1EEA  4C 41 57 54 U1EA1:	DB	'LAWTCK'	; 6 Kennbuchstaben
 4926 1EF0  10CE        U1EA7:	DW	STAR_K		; *K
 4927 1EF2  0F00        	DW	STAR_C		; *C
 4928 1EF4  0EC7        	DW	STAR_T		; *T
 4929 1EF6  0E97        	DW	STAR_W		; *W
 4930 1EF8  0E31        	DW	STAR_A		; *A
 4931 1EFA  0DE9        	DW	STAR_L		; *L
 4932 1EFC  0D95        	DW	STAR		; * Menu
 4933 1EFE  0E1C        	DW	CSAVE
 4934                   ;
 4935                   ; 4 Befehle, welche abgefangen werden
 4936                   ;
 4937 1F00  43 4F 4E 54 U1EB7:	DB	'CONT',0
 4938 1F05  47 4F 00    	DB	'GO',0
 4939 1F08  52 55 4E 00 	DB	'RUN',0
 4940 1F0C  43 53 41 56 	DB	'CSAVE',0
 4941                   
 4942 1F12  00          	NOP
 4943                   ;
 4944                   ; Farbe entsprechend Variable CC(0) und CC(1) einstellen
 4945                   ;
 4946 1F13  2A 03DB     U1ECA:	LD	HL,(FSLPTR)	; erste freie Adresse hinter den Variablen
 4947 1F16  ED 5B 03D9  	LD	DE,(DVARPT)	; Liste der Feldvariablen
 4948 1F1A  ED 52       	SBC	HL,DE		; Groesse des Variablenbereiches
 4949 1F1C  44          	LD	B,H
 4950 1F1D  4D          	LD	C,L
 4951 1F1E  03          	INC	BC		; Suchbereich
 4952 1F1F  EB          	EX	DE,HL
 4953 1F20  3E 43       U1ED7:	LD	A,'C'
 4954 1F22  ED B1       	CPIR			; 'C' im Variablenbereich suchen
 4955 1F24  EA 1F28     	JP	PE,U1EE0	; gefunden
 4956                   ; 16.11.2023: Farbe nicht veraendern, wenn CC nicht definiert ist
 4957                   ;	JR	U1F0B		; ausgesucht
 4958 1F27  C9          	RET			; CC nicht definiert -> Farbe nicht aendern
 4959                   	;
 4960 1F28  7E          U1EE0:	LD	A,(HL)		; folgendes Zeichen
 4961 1F29  FE 43       	CP	'C'		; folgt noch ein 'C'?
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  77
BAC85   Z80

 4962 1F2B  28 02       	JR	Z,U1EE7		; ja
 4963 1F2D  18 F1       	JR	U1ED7		; weitersuchen
 4964                   	;
 4965 1F2F              U1EE7:	; CC() gefunden
 4966 1F2F  23          	INC	HL
 4967 1F30  23          	INC	HL
 4968 1F31  23          	INC	HL
 4969 1F32  23          	INC	HL
 4970 1F33  23          	INC	HL
 4971 1F34  23          	INC	HL
 4972 1F35  CD D6DD     	CALL	OPKOP		; Wert in Arithmetikregister 1 laden
 4973 1F38  CD C96F     	CALL	EPRVL3		; Ausdruck berechnen -> DE
 4974 1F3B  7B          	LD	A,E		; Vordergrundfarbe aus CC(0)
 4975 1F3C  CB 27       	SLA	A	; *2
 4976 1F3E  CB 27       	SLA	A	; *4
 4977 1F40  CB 27       	SLA	A	; *8
 4978                   ; 19.11.2023:
 4979                   ; Grafikfarbe wird ausschliesslich ueber CAOS-Arbeitszelle FARB ermittelt,
 4980                   ; keine Modifikation des Programmcodes mehr erforderlich
 4981                   ;	LD	(U078C+1),A	; Routine zum Linie zeichnen
 4982                   ;	LD	(U0744+1),A	; Routene zum Punkt setzen
 4983 1F42  F5          	PUSH	AF
 4984 1F43  CD D6DD     	CALL	OPKOP		; Wert in Arithmetikregister 1 laden
 4985 1F46  CD C96F     	CALL	EPRVL3		; Ausdruck berechnen -> DE
 4986 1F49  F1          	POP	AF		; Vordergrundfarbe *8
 4987 1F4A  CD F018     	CALL	IRMON
 4988 1F4D  32 B7D6     	LD	(FARB),A	; Grafikfarbe eintragen
 4989 1F50  83          	ADD	E		; + Hintergrundfarbe aus CC(1)
 4990                   ;	JR	U1F0D		; Farbwert eintragen
 4991                   ; 16.11.2023: Ferbwert nicht aendern, wenn CC() nicht vorhanden ist
 4992                   ;U1F0B:	LD	A,DEFCOL	; Standardfarbe
 4993                   ;U1F0D:
 4994 1F51  32 B7A3     	LD	(COLOR),A	; neuen Farbwert fuer Textfarbe eintragen
 4995                   ; 17.11.2023: Farbe wird direkt aus COLOR gelesen
 4996                   ;	LD	(U1F25+1),A	; Programmcode modifizieren fuer Textanzeige im Grafikmode
 4997 1F54  C3 0772     	JP	IOFRET		; IRM OFF, RET
 4998         0000      IF KC3
 5012                   ELSE
 5013                   ;
 5014                   ; Farbebene KC85/4 schreiben
 5015                   ;	
 5016 1F57  F3          U1F1A:	DI			; Interrupt sperren, weil (IX+1) nicht aktualisiert wird
 5017 1F58  DD 7E 01    	LD	A,(IX+1)
 5018 1F5B  F5          	PUSH	AF
 5019 1F5C  CB CF       	SET	1,A		; Wechsel zu Farbebene
 5020 1F5E  D3 84       	OUT	(84H),A		; (IX+1) wird nicht aktualisiert, deshalb DI !!!
 5021                   ; 17.11.2023: Farbe wird direkt aus COLOR gelesen
 5022                   ;U1F25:	LD	A,20H		; hier wird der aktuelle Farbwert eingetragen
 5023 1F60  3A B7A3     	LD	A,(COLOR)	; sollte genauso funktionieren
 5024 1F63  77          	LD	(HL),A		; Farbwert eintragen in IRM
 5025 1F64  F1          	POP	AF
 5026 1F65  D3 84       	OUT	(84H),A	; Wechsel zurueck zu Pixelebene
 5027 1F67  FB          	EI
 5028 1F68  C9          	RET
 5029                   ENDIF
 5030                   ;
 5031                   ; Hier steht das BASIC-Programm, welches nur bei RUN sichtbar ist
 5032                   ; (bzw. mit GOSUB 100:LIST)
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  78
BAC85   Z80

 5033                   ;
 5034 1F69  00          	DB	0
 5035 1F6A  0000        	DW	0
 5036                   
 5037 1F6C              ZEILE2:	;	2! (C) Andreas und Uwe Zierott
 5038 1F6C  1F8E        	DW	ZEILE4
 5039 1F6E  0002        	DW	2		; Zeilennummer
 5040 1F70  9C          	DB	9CH		; REM
 5041 1F71  20 28 43 29 	DB	' (C) Andreas und Uwe Zierott',0
 5042                   
 5043 1F8E              ZEILE4:	;	4! Stand: 31.01.1990
 5044 1F8E  1FA6        	DW	ZEILE6
 5045 1F90  0004        	DW	4		; Zeilennummer
 5046 1F92  9C          	DB	9CH		; REM
 5047 1F93  20 53 74 61 	DB	' Stand: 31.01.1990',0
 5048                   
 5049 1FA6              ZEILE6:	;	6! Farbe von Rudolf Wenzel
 5050 1FA6  1FCF        	DW	ZEILE8
 5051 1FA8  0006        	DW	6		; Zeilennummer
 5052 1FAA  9C          	DB	9CH		; REM
 5053         0000      IF KC3
 5055                   ELSE
 5056 1FAB  20 46 61 72 	DB	' Farbe von Rudolf Wenzel 08.12.1992',0
 5057                   ENDIF
 5058                   
 5059 1FCF              ZEILE8:	;	8! Stand: 08.12.1992
 5060 1FCF  1FF8        	DW	ZEIL10
 5061 1FD1  0008        	DW	8		; Zeilennummer
 5062 1FD3  9C          	DB	9CH		; REM
 5063         0000      IF KC3
 5065                   ELSE
 5066 1FD4  20 4B 43 38 	DB	' KC85/5'
 5067                   ENDIF
 5068 1FDB  2D 41 6E 70 	DB	'-Anpassung von ML 03.01.2024',0
 5069                   
 5070 1FF8              ZEIL10:	;	10 GOTO 1000
 5071 1FF8  2002        	DW	ZEIL20
 5072 1FFA  000A        	DW	10		; Zeilennummer
 5073 1FFC  88          	DB	88H		; GOTO
 5074 1FFD  31 30 30 30 	DB	'1000',0
 5075                   
 5076 2002              ZEIL20:	;	20 CC(0)=5:CC(1)=2:CALL*1FC4:GOTO 1010
 5077                   	;	CC(0)=7	Zeichenfarbe weiss Standard
 5078                   	;	CC(1)=0	Hintergrundfarbe schwarz Standard
 5079 2002  2023        	DW	ZEI100
 5080 2004  0014        	DW	20		; Zeilennummer
 5081 2006  43 43 28 30 	DB	'CC(0)'
 5082 200B  B4          	DB	0B4H		; =
 5083 200C  37 3A 43 43 	DB	'7:CC(1)'
 5084 2013  B4          	DB	0B4H		; =
 5085 2014  30 3A       	DB	'0:'
 5086 2016  9D AE       	DB	9DH,0AEH	; CALL*
 5087                   	ASCTXT	GO20
    5 2018  31          		DB	(GO20/1000H AND 0FH) + 30H
   12 2019  31          		DB	(GO20/100H AND 0FH) + 30H
   18 201A  30          		DB	(GO20/10H AND 0FH) + 30H
   24 201B  35          		DB	(GO20 AND 0FH) + 30H
 5088 201C  3A          	DB	':'
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  79
BAC85   Z80

 5089 201D  88          	DB	88H		; GOTO
 5090 201E  31 30 31 30 	DB	'1010',0
 5091                   
 5092 2023              ZEI100:	;	100 CALL*1FA1:RETURN
 5093 2023  202F        	DW	ZEI110
 5094 2025  0064        	DW	100		; Zeilennummer
 5095 2027  9D AE       	DB	9DH,0AEH	; CALL*
 5096                   	ASCTXT	GO100
   12 2029  35          		DB	(GO100/100H AND 0FH) + 30H
   16 202A  44          		DB	(GO100/10H AND 0FH) + 37H
   24 202B  39          		DB	(GO100 AND 0FH) + 30H
 5097 202C  3A          	DB	':'
 5098 202D  8D 00       	DB	8DH,0		; RETURN
 5099                   
 5100 202F              ZEI110:	;	110 CALL*1FDA:RETURN
 5101 202F  203C        	DW	ZEI120
 5102 2031  006E        	DW	110
 5103 2033  9D AE       	DB	9DH,0AEH	; CALL*
 5104                   	ASCTXT	GO110
    5 2035  31          		DB	(GO110/1000H AND 0FH) + 30H
   12 2036  31          		DB	(GO110/100H AND 0FH) + 30H
   18 2037  34          		DB	(GO110/10H AND 0FH) + 30H
   22 2038  43          		DB	(GO110 AND 0FH) + 37H
 5105 2039  3A          	DB	':'
 5106 203A  8D 00       	DB	8DH,0		; RETURN
 5107                   
 5108 203C              ZEI120:	;	120 CALL*11BC:RETURN
 5109 203C  2049        	DW	ZEI150
 5110 203E  0078        	DW	120		; Zeilennummer
 5111 2040  9D AE       	DB	9DH,0AEH	; CALL*
 5112                   	ASCTXT	GO120
    5 2042  31          		DB	(GO120/1000H AND 0FH) + 30H
   12 2043  31          		DB	(GO120/100H AND 0FH) + 30H
   18 2044  38          		DB	(GO120/10H AND 0FH) + 30H
   22 2045  43          		DB	(GO120 AND 0FH) + 37H
 5113 2046  3A          	DB	':'
 5114 2047  8D 00       	DB	8DH,0		; RETURN
 5115                   
 5116 2049              ZEI150:	;	150 CALL*1FD3:RETURN
 5117 2049  2055        	DW	ZEI200
 5118 204B  0096        	DW	150		; Zeilennummer
 5119 204D  9D AE       	DB	9DH,0AEH	; CALL*
 5120                   	ASCTXT	GO150
   12 204F  35          		DB	(GO150/100H AND 0FH) + 30H
   16 2050  45          		DB	(GO150/10H AND 0FH) + 37H
   24 2051  33          		DB	(GO150 AND 0FH) + 30H
 5121 2052  3A          	DB	':'
 5122 2053  8D 00       	DB	8DH,0		; RETURN
 5123                   
 5124 2055              ZEI200:	;	200 CALL*11DF:RETURN
 5125 2055  2062        	DW	ZEI210
 5126 2057  00C8        	DW	200		; Zeilennummer
 5127 2059  9D AE       	DB	9DH,0AEH	; CALL*
 5128                   	ASCTXT	GO200
    5 205B  31          		DB	(GO200/1000H AND 0FH) + 30H
   12 205C  31          		DB	(GO200/100H AND 0FH) + 30H
   16 205D  41          		DB	(GO200/10H AND 0FH) + 37H
   24 205E  39          		DB	(GO200 AND 0FH) + 30H
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  80
BAC85   Z80

 5129 205F  3A          	DB	':'
 5130 2060  8D 00       	DB	8DH,0		; RETURN
 5131                   
 5132 2062              ZEI210:	;	210 CALL*11E4:RETURN
 5133 2062  206F        	DW	ZEI220
 5134 2064  00D2        	DW	210		; Zeilennummer
 5135 2066  9D AE       	DB	9DH,0AEH	; CALL*
 5136                   	ASCTXT	GO210
    5 2068  31          		DB	(GO210/1000H AND 0FH) + 30H
   12 2069  31          		DB	(GO210/100H AND 0FH) + 30H
   16 206A  41          		DB	(GO210/10H AND 0FH) + 37H
   22 206B  45          		DB	(GO210 AND 0FH) + 37H
 5137 206C  3A          	DB	':'
 5138 206D  8D 00       	DB	8DH,0		; RETURN
 5139                   
 5140 206F              ZEI220:	;	220 CALL*124F:RETURN
 5141 206F  207C        	DW	ZEI250
 5142 2071  00DC        	DW	220		; Zeilennummer
 5143 2073  9D AE       	DB	9DH,0AEH	; CALL*
 5144                   	ASCTXT	GO220
    5 2075  31          		DB	(GO220/1000H AND 0FH) + 30H
   12 2076  32          		DB	(GO220/100H AND 0FH) + 30H
   18 2077  31          		DB	(GO220/10H AND 0FH) + 30H
   24 2078  39          		DB	(GO220 AND 0FH) + 30H
 5145 2079  3A          	DB	':'
 5146 207A  8D 00       	DB	8DH,0		; RETURN
 5147                   
 5148 207C              ZEI250:	;	250 CALL*6F1:RETURN
 5149 207C  2088        	DW	ZEI260
 5150 207E  00FA        	DW	250		; Zeilennummer
 5151 2080  9D AE       	DB	9DH,0AEH	; CALL*
 5152                   	ASCTXT	GO250
   12 2082  37          		DB	(GO250/100H AND 0FH) + 30H
   18 2083  30          		DB	(GO250/10H AND 0FH) + 30H
   24 2084  36          		DB	(GO250 AND 0FH) + 30H
 5153 2085  3A          	DB	':'
 5154 2086  8D 00       	DB	8DH,0		; RETURN
 5155                   
 5156 2088              ZEI260:	;	260 CALL*1274:RETURN
 5157 2088  2095        	DW	ZEI270
 5158 208A  0104        	DW	260		; Zeilennummer
 5159 208C  9D AE       	DB	9DH,0AEH	; CALL*
 5160                   	ASCTXT	GO260
    5 208E  31          		DB	(GO260/1000H AND 0FH) + 30H
   12 208F  32          		DB	(GO260/100H AND 0FH) + 30H
   18 2090  33          		DB	(GO260/10H AND 0FH) + 30H
   22 2091  43          		DB	(GO260 AND 0FH) + 37H
 5161 2092  3A          	DB	':'
 5162 2093  8D 00       	DB	8DH,0		; RETURN
 5163                   
 5164 2095              ZEI270:	;	270 CALL*128D:RETURN
 5165 2095  20A2        	DW	ZEI280
 5166 2097  010E        	DW	270		; Zeilennummer
 5167 2099  9D AE       	DB	9DH,0AEH	; CALL*
 5168                   	ASCTXT	GO270
    5 209B  31          		DB	(GO270/1000H AND 0FH) + 30H
   12 209C  32          		DB	(GO270/100H AND 0FH) + 30H
   18 209D  35          		DB	(GO270/10H AND 0FH) + 30H
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  81
BAC85   Z80

   24 209E  35          		DB	(GO270 AND 0FH) + 30H
 5169 209F  3A          	DB	':'
 5170 20A0  8D 00       	DB	8DH,0		; RETURN
 5171                   
 5172 20A2              ZEI280:	;	280 CALL*12BC:RETURN
 5173 20A2  20AE        	DW	ZEI300
 5174 20A4  0118        	DW	280		; Zeilennummer
 5175                   ; 11.11.2023 GUSOB 280 Funktion deaktiviert
 5176                   ; 02.01.2024 wieder aktiviert
 5177 20A6  9D AE       	DB	9DH,0AEH	; CALL*
 5178                   	ASCTXT	GO280
   12 20A8  36          		DB	(GO280/100H AND 0FH) + 30H
   18 20A9  34          		DB	(GO280/10H AND 0FH) + 30H
   22 20AA  45          		DB	(GO280 AND 0FH) + 37H
 5179 20AB  3A          	DB	':'
 5180 20AC  8D 00       	DB	8DH,0		; RETURN
 5181                   
 5182 20AE              ZEI300:	;	300 CALL*12CA:RETURN
 5183 20AE  20BB        	DW	ZEI310
 5184 20B0  012C        	DW	300		; Zeilennummer
 5185 20B2  9D AE       	DB	9DH,0AEH	; CALL*
 5186                   	ASCTXT	GO300
    5 20B4  31          		DB	(GO300/1000H AND 0FH) + 30H
   12 20B5  32          		DB	(GO300/100H AND 0FH) + 30H
   18 20B6  38          		DB	(GO300/10H AND 0FH) + 30H
   24 20B7  34          		DB	(GO300 AND 0FH) + 30H
 5187 20B8  3A          	DB	':'
 5188 20B9  8D 00       	DB	8DH,0		; RETURN
 5189                   
 5190 20BB              ZEI310:	;	310 CALL*1317:RETURN
 5191 20BB  20C8        	DW	ZEI330
 5192 20BD  0136        	DW	310		; Zeilennummer
 5193 20BF  9D AE       	DB	9DH,0AEH	; CALL*
 5194                   	ASCTXT	GO310
    5 20C1  31          		DB	(GO310/1000H AND 0FH) + 30H
   12 20C2  32          		DB	(GO310/100H AND 0FH) + 30H
   16 20C3  44          		DB	(GO310/10H AND 0FH) + 37H
   24 20C4  31          		DB	(GO310 AND 0FH) + 30H
 5195 20C5  3A          	DB	':'
 5196 20C6  8D 00       	DB	8DH,0		; RETURN
 5197                   
 5198 20C8              ZEI330:	;	330 CALL*141E:RETURN
 5199 20C8  20D5        	DW	ZEI350
 5200 20CA  014A        	DW	330		; Zeilennummer
 5201 20CC  9D AE       	DB	9DH,0AEH	; CALL*
 5202                   	ASCTXT	GO330
    5 20CE  31          		DB	(GO330/1000H AND 0FH) + 30H
   12 20CF  33          		DB	(GO330/100H AND 0FH) + 30H
   16 20D0  44          		DB	(GO330/10H AND 0FH) + 37H
   24 20D1  38          		DB	(GO330 AND 0FH) + 30H
 5203 20D2  3A          	DB	':'
 5204 20D3  8D 00       	DB	8DH,0		; RETURN
 5205                   
 5206 20D5              ZEI350:	;	350 CALL*144C:RETURN
 5207 20D5  20E2        	DW	ZEI360
 5208 20D7  015E        	DW	350		; Zeilennummer
 5209 20D9  9D AE       	DB	9DH,0AEH	; CALL*
 5210                   	ASCTXT	GO350
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  82
BAC85   Z80

    5 20DB  31          		DB	(GO350/1000H AND 0FH) + 30H
   12 20DC  34          		DB	(GO350/100H AND 0FH) + 30H
   18 20DD  30          		DB	(GO350/10H AND 0FH) + 30H
   24 20DE  36          		DB	(GO350 AND 0FH) + 30H
 5211 20DF  3A          	DB	':'
 5212 20E0  8D 00       	DB	8DH,0		; RETURN
 5213                   
 5214 20E2              ZEI360:	;	360 CALL*145A:RETURN
 5215 20E2  20EF        	DW	ZEI400
 5216 20E4  0168        	DW	360		; Zeilennummer
 5217 20E6  9D AE       	DB	9DH,0AEH	; CALL*
 5218                   	ASCTXT	GO360
    5 20E8  31          		DB	(GO360/1000H AND 0FH) + 30H
   12 20E9  34          		DB	(GO360/100H AND 0FH) + 30H
   18 20EA  31          		DB	(GO360/10H AND 0FH) + 30H
   24 20EB  34          		DB	(GO360 AND 0FH) + 30H
 5219 20EC  3A          	DB	':'
 5220 20ED  8D 00       	DB	8DH,0		; RETURN
 5221                   
 5222 20EF              ZEI400:	;	400 CALL*1461:RETURN
 5223 20EF  20FC        	DW	ZEI450
 5224 20F1  0190        	DW	400		; Zeilennummer
 5225 20F3  9D AE       	DB	9DH,0AEH	; CALL*
 5226                   	ASCTXT	GO400
    5 20F5  31          		DB	(GO400/1000H AND 0FH) + 30H
   12 20F6  34          		DB	(GO400/100H AND 0FH) + 30H
   18 20F7  31          		DB	(GO400/10H AND 0FH) + 30H
   22 20F8  42          		DB	(GO400 AND 0FH) + 37H
 5227 20F9  3A          	DB	':'
 5228 20FA  8D 00       	DB	8DH,0		; RETURN
 5229                   
 5230 20FC              ZEI450:	;	450 CALL*1485:RETURN
 5231 20FC  2109        	DW	ZEI500
 5232 20FE  01C2        	DW	450		; Zeilennummer
 5233 2100  9D AE       	DB	9DH,0AEH	; CALL*
 5234                   	ASCTXT	GO450
    5 2102  31          		DB	(GO450/1000H AND 0FH) + 30H
   12 2103  34          		DB	(GO450/100H AND 0FH) + 30H
   18 2104  33          		DB	(GO450/10H AND 0FH) + 30H
   22 2105  46          		DB	(GO450 AND 0FH) + 37H
 5235 2106  3A          	DB	':'
 5236 2107  8D 00       	DB	8DH,0		; RETURN
 5237                   
 5238 2109              ZEI500:	;	500 CALL*14D4:RETURN
 5239 2109  2116        	DW	ZEI540
 5240 210B  01F4        	DW	500		; Zeilennummer
 5241 210D  9D AE       	DB	9DH,0AEH	; CALL*
 5242                   	ASCTXT	GO500
    5 210F  31          		DB	(GO500/1000H AND 0FH) + 30H
   12 2110  34          		DB	(GO500/100H AND 0FH) + 30H
   18 2111  38          		DB	(GO500/10H AND 0FH) + 30H
   22 2112  45          		DB	(GO500 AND 0FH) + 37H
 5243 2113  3A          	DB	':'
 5244 2114  8D 00       	DB	8DH,0		; RETURN
 5245                   
 5246 2116              ZEI540:	;	540 CALL*1533:RETURN
 5247 2116  2123        	DW	ZEI560
 5248 2118  021C        	DW	540		; Zeilennummer
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  83
BAC85   Z80

 5249 211A  9D AE       	DB	9DH,0AEH	; CALL*
 5250                   	ASCTXT	GO540
    5 211C  31          		DB	(GO540/1000H AND 0FH) + 30H
   12 211D  35          		DB	(GO540/100H AND 0FH) + 30H
   18 211E  31          		DB	(GO540/10H AND 0FH) + 30H
   24 211F  35          		DB	(GO540 AND 0FH) + 30H
 5251 2120  3A          	DB	':'
 5252 2121  8D 00       	DB	8DH,0		; RETURN
 5253                   
 5254 2123              ZEI560:	;	560 CALL*1550:RETURN
 5255 2123  2130        	DW	ZEI580
 5256 2125  0230        	DW	560		; Zeilennummer
 5257 2127  9D AE       	DB	9DH,0AEH	; CALL*
 5258                   	ASCTXT	GO560
    5 2129  31          		DB	(GO560/1000H AND 0FH) + 30H
   12 212A  35          		DB	(GO560/100H AND 0FH) + 30H
   18 212B  33          		DB	(GO560/10H AND 0FH) + 30H
   24 212C  32          		DB	(GO560 AND 0FH) + 30H
 5259 212D  3A          	DB	':'
 5260 212E  8D 00       	DB	8DH,0		; RETURN
 5261                   
 5262 2130              ZEI580:	;	580 CALL*155D:RETURN
 5263 2130  213D        	DW	ZEI600
 5264 2132  0244        	DW	580		; Zeilennummer
 5265 2134  9D AE       	DB	9DH,0AEH	; CALL*
 5266                   	ASCTXT	GO580
    5 2136  31          		DB	(GO580/1000H AND 0FH) + 30H
   12 2137  35          		DB	(GO580/100H AND 0FH) + 30H
   18 2138  33          		DB	(GO580/10H AND 0FH) + 30H
   22 2139  46          		DB	(GO580 AND 0FH) + 37H
 5267 213A  3A          	DB	':'
 5268 213B  8D 00       	DB	8DH,0		; RETURN
 5269                   
 5270 213D              ZEI600:	;	600 CALL*1FA8:RETURN
 5271 213D  214A        	DW	ZEI620
 5272 213F  0258        	DW	600		; Zeilennummer
 5273 2141  9D AE       	DB	9DH,0AEH	; CALL*
 5274                   	ASCTXT	GO600
    5 2143  31          		DB	(GO600/1000H AND 0FH) + 30H
   12 2144  35          		DB	(GO600/100H AND 0FH) + 30H
   18 2145  37          		DB	(GO600/10H AND 0FH) + 30H
   22 2146  44          		DB	(GO600 AND 0FH) + 37H
 5275 2147  3A          	DB	':'
 5276 2148  8D 00       	DB	8DH,0		; RETURN
 5277                   
 5278 214A              ZEI620:	;	620 CALL*1FAF:RETURN
 5279 214A  2156        	DW	ZEI630
 5280 214C  026C        	DW	620		; Zeilennummer
 5281 214E  9D AE       	DB	9DH,0AEH	; CALL*
 5282                   	ASCTXT	GO620
   12 2150  37          		DB	(GO620/100H AND 0FH) + 30H
   18 2151  33          		DB	(GO620/10H AND 0FH) + 30H
   22 2152  41          		DB	(GO620 AND 0FH) + 37H
 5283 2153  3A          	DB	':'
 5284 2154  8D 00       	DB	8DH,0		; RETURN
 5285                   
 5286 2156              ZEI630:	;	630 CALL*1FB6:RETURN
 5287 2156  2162        	DW	ZEI650
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  84
BAC85   Z80

 5288 2158  0276        	DW	630		; Zeilennummer
 5289 215A  9D AE       	DB	9DH,0AEH	; CALL*
 5290                   	ASCTXT	GO630
   12 215C  37          		DB	(GO630/100H AND 0FH) + 30H
   18 215D  37          		DB	(GO630/10H AND 0FH) + 30H
   24 215E  36          		DB	(GO630 AND 0FH) + 30H
 5291 215F  3A          	DB	':'
 5292 2160  8D 00       	DB	8DH,0		; RETURN
 5293                   
 5294 2162              ZEI650:	;	650 CALL*1FBD:RETURN
 5295 2162  216E        	DW	ZEI950
 5296 2164  028A        	DW	650		; Zeilennummer
 5297 2166  9D AE       	DB	9DH,0AEH	; CALL*
 5298                   	ASCTXT	GO650
   12 2168  37          		DB	(GO650/100H AND 0FH) + 30H
   16 2169  42          		DB	(GO650/10H AND 0FH) + 37H
   24 216A  32          		DB	(GO650 AND 0FH) + 30H
 5299 216B  3A          	DB	':'
 5300 216C  8D 00       	DB	8DH,0		; RETURN
 5301                   
 5302 216E              ZEI950:	;	950 CC(0)=6:CC(1)=1:CALL*1FE1
 5303                   	;	CC(0)=6	Zeichenfarbe gelb
 5304                   	;	CC(1)=1	Hintergrundfarbe blau
 5305 216E  2189        	DW	Z1000
 5306 2170  03B6        	DW	950		; Zeilennummer
 5307 2172  43 43 28 30 	DB	'CC(0)'
 5308 2177  B4          	DB	0B4H		; =
 5309 2178  36 3A 43 43 	DB	'6:CC(1)'
 5310 217F  B4          	DB	0B4H		; =
 5311 2180  31 3A       	DB	'1:'
 5312 2182  9D AE       	DB	9DH,0AEH	; CALL*
 5313                   	ASCTXT	GO950
    5 2184  31          		DB	(GO950/1000H AND 0FH) + 30H
   12 2185  35          		DB	(GO950/100H AND 0FH) + 30H
   18 2186  39          		DB	(GO950/10H AND 0FH) + 30H
   22 2187  45          		DB	(GO950 AND 0FH) + 37H
 5314 2188  00          	DB	0
 5315                   
 5316 2189  0000        Z1000:	DW	0		; Anfang BASIC-Programm
 5317 218B              U21F3:				; Ende BASCICODE
 5318                   ;
 5319                   ; V.24-Druckertreiber (wird nach BA00H kopiert und dort ausgefuehrt)
 5320                   ;
 5321                   	.phase	0BA00H
 5322 BA00  CD BAFE     UBA00:	CALL	UBAFE
 5323 BA03  76          UBA03:	HALT
 5324 BA04  DD 7E 0D    	LD	A,(IX+13)	; Tastencode
 5325 BA07  B7          	OR	A		; eingetragen?
 5326 BA08  20 F9       	JR	NZ,UBA03	; nein, weiter warten
 5327 BA0A  AF          	XOR	A
 5328 BA0B  32 BD7C     	LD	(UBD78),A
 5329 BA0E  76          UBA0E:	HALT
 5330 BA0F  3A BD7C     	LD	A,(UBD78)
 5331 BA12  B7          	OR	A
 5332 BA13  28 08       	JR	Z,UBA1D
 5333 BA15  CD F003     	CALL	PV1
 5334 BA18  0E          	DB	KBDZ
 5335 BA19  30 F3       	JR	NC,UBA0E
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  85
BAC85   Z80

 5336 BA1B  18 06       	JR	UBA23
 5337                   	;
 5338 BA1D  DD 7E 0D    UBA1D:	LD	A,(IX+13)
 5339 BA20  B7          	OR	A
 5340 BA21  28 EB       	JR	Z,UBA0E
 5341 BA23  FE 08       UBA23:	CP	8
 5342 BA25  20 10       	JR	NZ,UBA37
 5343 BA27  2A BD78     	LD	HL,(UBD74)
 5344 BA2A  7C          	LD	A,H
 5345 BA2B  B5          	OR	L
 5346 BA2C  28 E0       	JR	Z,UBA0E
 5347 BA2E  2B          	DEC	HL
 5348 BA2F  22 BD78     	LD	(UBD74),HL
 5349 BA32  CD BB19     	CALL	UBB19
 5350 BA35  18 D7       	JR	UBA0E
 5351                   	;
 5352 BA37  FE 09       UBA37:	CP	9
 5353 BA39  20 14       	JR	NZ,UBA4F
 5354 BA3B  2A BD76     	LD	HL,(UBD72)
 5355 BA3E  11 013F     	LD	DE,013FH
 5356 BA41  CD BD5D     	CALL	UBD59
 5357 BA44  28 C8       	JR	Z,UBA0E
 5358 BA46  23          	INC	HL
 5359 BA47  22 BD76     	LD	(UBD72),HL
 5360 BA4A  CD BB1F     	CALL	UBB1F
 5361 BA4D  18 BF       	JR	UBA0E
 5362                   	;
 5363 BA4F  FE 0A       UBA4F:	CP	0AH
 5364 BA51  20 10       	JR	NZ,UBA63
 5365 BA53  3A BD7A     	LD	A,(UBD76)
 5366 BA56  FE FF       	CP	0FFH
 5367 BA58  28 B4       	JR	Z,UBA0E
 5368 BA5A  3C          	INC	A
 5369 BA5B  32 BD7A     	LD	(UBD76),A
 5370 BA5E  CD BB35     	CALL	UBB35
 5371 BA61  18 AB       	JR	UBA0E
 5372                   	;
 5373 BA63  FE 0B       UBA63:	CP	0BH
 5374 BA65  20 0F       	JR	NZ,UBA76
 5375 BA67  3A BD7B     	LD	A,(UBD77)
 5376 BA6A  B7          	OR	A
 5377 BA6B  28 A1       	JR	Z,UBA0E
 5378 BA6D  3D          	DEC	A
 5379 BA6E  32 BD7B     	LD	(UBD77),A
 5380 BA71  CD BB2F     	CALL	UBB2F
 5381 BA74  18 98       	JR	UBA0E
 5382                   	;
 5383 BA76  FE 19       UBA76:	CP	19H
 5384 BA78  20 16       	JR	NZ,UBA90
 5385 BA7A  2A BD76     	LD	HL,(UBD72)
 5386 BA7D  ED 5B BD78  	LD	DE,(UBD74)
 5387 BA81  CD BD5D     	CALL	UBD59
 5388 BA84  28 88       	JR	Z,UBA0E
 5389 BA86  CD BB1F     	CALL	UBB1F
 5390 BA89  2B          	DEC	HL
 5391 BA8A  22 BD76     	LD	(UBD72),HL
 5392 BA8D  C3 BA0E     	JP	UBA0E
 5393                   	;
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  86
BAC85   Z80

 5394 BA90  FE 18       UBA90:	CP	18H
 5395 BA92  20 17       	JR	NZ,UBAAB
 5396 BA94  2A BD78     	LD	HL,(UBD74)
 5397 BA97  ED 5B BD76  	LD	DE,(UBD72)
 5398 BA9B  CD BD5D     	CALL	UBD59
 5399 BA9E  CA BA0E     	JP	Z,UBA0E
 5400 BAA1  CD BB19     	CALL	UBB19
 5401 BAA4  23          	INC	HL
 5402 BAA5  22 BD78     	LD	(UBD74),HL
 5403 BAA8  C3 BA0E     	JP	UBA0E
 5404                   	;
 5405 BAAB  FE 12       UBAAB:	CP	12H
 5406 BAAD  20 15       	JR	NZ,UBAC4
 5407 BAAF  3A BD7A     	LD	A,(UBD76)
 5408 BAB2  47          	LD	B,A
 5409 BAB3  3A BD7B     	LD	A,(UBD77)
 5410 BAB6  B8          	CP	B
 5411 BAB7  CA BA0E     	JP	Z,UBA0E
 5412 BABA  CD BB2F     	CALL	UBB2F
 5413 BABD  3C          	INC	A
 5414 BABE  32 BD7B     	LD	(UBD77),A
 5415 BAC1  C3 BA0E     	JP	UBA0E
 5416                   	;
 5417 BAC4  FE 11       UBAC4:	CP	11H
 5418 BAC6  20 15       	JR	NZ,UBADD
 5419 BAC8  3A BD7B     	LD	A,(UBD77)
 5420 BACB  47          	LD	B,A
 5421 BACC  3A BD7A     	LD	A,(UBD76)
 5422 BACF  B8          	CP	B
 5423 BAD0  CA BA0E     	JP	Z,UBA0E
 5424 BAD3  CD BB35     	CALL	UBB35
 5425 BAD6  3D          	DEC	A
 5426 BAD7  32 BD7A     	LD	(UBD76),A
 5427 BADA  C3 BA0E     	JP	UBA0E
 5428                   	;
 5429 BADD  FE 16       UBADD:	CP	16H
 5430 BADF  20 11       	JR	NZ,UBAF2
 5431 BAE1  76          UBAE1:	HALT
 5432 BAE2  DD 7E 0D    	LD	A,(IX+13)
 5433 BAE5  B7          	OR	A
 5434 BAE6  20 F9       	JR	NZ,UBAE1
 5435 BAE8  3A BD7C     	LD	A,(UBD78)
 5436 BAEB  2F          	CPL
 5437 BAEC  32 BD7C     	LD	(UBD78),A
 5438 BAEF  C3 BA0E     	JP	UBA0E
 5439                   	;
 5440 BAF2  FE 0D       UBAF2:	CP	0DH
 5441 BAF4  28 08       	JR	Z,UBAFE
 5442 BAF6  FE 10       	CP	10H
 5443 BAF8  CC BAFE     	CALL	Z,UBAFE
 5444 BAFB  C3 BA0E     	JP	UBA0E
 5445                   ;
 5446 BAFE  3A BD7B     UBAFE:	LD	A,(UBD77)
 5447 BB01  47          	LD	B,A
 5448 BB02  3A BD7A     	LD	A,(UBD76)
 5449 BB05  2A BD78     	LD	HL,(UBD74)
 5450 BB08  ED 5B BD76  	LD	DE,(UBD72)
 5451 BB0C  B8          UBB0C:	CP	B
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  87
BAC85   Z80

 5452 BB0D  28 06       	JR	Z,UBB15
 5453 BB0F  CD BB6F     	CALL	UBB6F
 5454 BB12  3D          	DEC	A
 5455 BB13  18 F7       	JR	UBB0C
 5456                   	;
 5457 BB15  CD BB6F     UBB15:	CALL	UBB6F
 5458 BB18  C9          	RET
 5459                   ;
 5460 BB19  E5          UBB19:	PUSH	HL
 5461 BB1A  2A BD78     	LD	HL,(UBD74)
 5462 BB1D  18 04       	JR	UBB23
 5463                   	;
 5464 BB1F  E5          UBB1F:	PUSH	HL
 5465 BB20  2A BD76     	LD	HL,(UBD72)
 5466 BB23  3A BD7A     UBB23:	LD	A,(UBD76)
 5467 BB26  47          	LD	B,A
 5468 BB27  3A BD7B     	LD	A,(UBD77)
 5469 BB2A  CD BB45     	CALL	UBB45
 5470 BB2D  E1          	POP	HL
 5471 BB2E  C9          	RET
 5472                   
 5473 BB2F  F5          UBB2F:	PUSH	AF
 5474 BB30  3A BD7B     	LD	A,(UBD77)
 5475 BB33  18 04       	JR	UBB39
 5476                   	;
 5477 BB35  F5          UBB35:	PUSH	AF
 5478 BB36  3A BD7A     	LD	A,(UBD76)
 5479 BB39  2A BD78     UBB39:	LD	HL,(UBD74)
 5480 BB3C  ED 5B BD76  	LD	DE,(UBD72)
 5481 BB40  CD BB6F     	CALL	UBB6F
 5482 BB43  F1          	POP	AF
 5483 BB44  C9          	RET
 5484                   
 5485 BB45  D5          UBB45:	PUSH	DE
 5486 BB46  F5          	PUSH	AF
 5487 BB47  E5          	PUSH	HL
 5488 BB48  C5          	PUSH	BC
 5489 BB49  CD BBA2     	CALL	UBBA2
 5490 BB4C  08          	EX	AF,AF'
 5491 BB4D  AF          	XOR	A
 5492 BB4E  04          	INC	B
 5493 BB4F  37          	SCF
 5494 BB50  1F          UBB50:	RRA
 5495 BB51  10 FD       	DJNZ	UBB50
 5496 BB53  08          	EX	AF,AF'
 5497 BB54  C1          	POP	BC
 5498 BB55  E1          	POP	HL
 5499 BB56  E5          	PUSH	HL
 5500 BB57  CD BBB7     	CALL	UBBB7
 5501 BB5A  3D          	DEC	A
 5502 BB5B  3C          UBB5B:	INC	A
 5503 BB5C  E5          	PUSH	HL
 5504 BB5D  65          	LD	H,L
 5505 BB5E  CB FC       	SET	7,H
 5506 BB60  6F          	LD	L,A
 5507 BB61  08          	EX	AF,AF'
 5508 BB62  F5          	PUSH	AF
 5509 BB63  AE          	XOR	(HL)
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  88
BAC85   Z80

 5510 BB64  77          	LD	(HL),A
 5511 BB65  F1          	POP	AF
 5512 BB66  08          	EX	AF,AF'
 5513 BB67  E1          	POP	HL
 5514 BB68  B8          	CP	B
 5515 BB69  20 F0       	JR	NZ,UBB5B
 5516 BB6B  E1          	POP	HL
 5517 BB6C  F1          	POP	AF
 5518 BB6D  D1          	POP	DE
 5519 BB6E  C9          	RET
 5520                   ;
 5521 BB6F  D5          UBB6F:	PUSH	DE
 5522 BB70  E5          	PUSH	HL
 5523 BB71  C5          	PUSH	BC
 5524 BB72  F5          	PUSH	AF
 5525 BB73  EB          	EX	DE,HL
 5526 BB74  CD BBA2     	CALL	UBBA2
 5527 BB77  48          	LD	C,B
 5528 BB78  EB          	EX	DE,HL
 5529 BB79  CD BBA2     	CALL	UBBA2
 5530 BB7C  E5          	PUSH	HL
 5531 BB7D  B7          	OR	A
 5532 BB7E  ED 52       	SBC	HL,DE
 5533 BB80  E1          	POP	HL
 5534 BB81  28 15       	JR	Z,UBB98
 5535 BB83  C5          	PUSH	BC
 5536 BB84  0E 07       	LD	C,7
 5537 BB86  CD BBC0     	CALL	UBBC0
 5538 BB89  C1          	POP	BC
 5539 BB8A  06 00       	LD	B,0
 5540 BB8C  AE          	XOR	(HL)
 5541 BB8D  77          UBB8D:	LD	(HL),A
 5542 BB8E  24          	INC	H
 5543 BB8F  CD BBD7     	CALL	UBBD7
 5544 BB92  28 04       	JR	Z,UBB98
 5545 BB94  7E          	LD	A,(HL)
 5546 BB95  2F          	CPL
 5547 BB96  18 F5       	JR	UBB8D
 5548                   	;
 5549 BB98  CD BBC0     UBB98:	CALL	UBBC0
 5550 BB9B  AE          	XOR	(HL)
 5551 BB9C  77          	LD	(HL),A
 5552 BB9D  F1          	POP	AF
 5553 BB9E  C1          	POP	BC
 5554 BB9F  E1          	POP	HL
 5555 BBA0  D1          	POP	DE
 5556 BBA1  C9          	RET
 5557                   ;
 5558 BBA2  D5          UBBA2:	PUSH	DE
 5559 BBA3  54          	LD	D,H
 5560 BBA4  5D          	LD	E,L
 5561 BBA5  CD BBB7     	CALL	UBBB7
 5562 BBA8  E5          	PUSH	HL
 5563 BBA9  29          	ADD	HL,HL
 5564 BBAA  29          	ADD	HL,HL
 5565 BBAB  29          	ADD	HL,HL
 5566 BBAC  EB          	EX	DE,HL
 5567 BBAD  ED 52       	SBC	HL,DE
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  89
BAC85   Z80

 5568 BBAF  45          	LD	B,L
 5569 BBB0  E1          	POP	HL
 5570 BBB1  65          	LD	H,L
 5571 BBB2  CB FC       	SET	7,H
 5572 BBB4  6F          	LD	L,A
 5573 BBB5  D1          	POP	DE
 5574 BBB6  C9          	RET
 5575                   ;
 5576 BBB7  29          UBBB7:	ADD	HL,HL
 5577 BBB8  29          	ADD	HL,HL
 5578 BBB9  29          	ADD	HL,HL
 5579 BBBA  29          	ADD	HL,HL
 5580 BBBB  29          	ADD	HL,HL
 5581 BBBC  6C          	LD	L,H
 5582 BBBD  26 00       	LD	H,0
 5583 BBBF  C9          	RET
 5584                   ;
 5585 BBC0  C5          UBBC0:	PUSH	BC
 5586 BBC1  79          	LD	A,C
 5587 BBC2  90          	SUB	B
 5588 BBC3  3C          	INC	A
 5589 BBC4  48          	LD	C,B
 5590 BBC5  47          	LD	B,A
 5591 BBC6  79          	LD	A,C
 5592 BBC7  B7          	OR	A
 5593 BBC8  20 02       	JR	NZ,UBBCC
 5594 BBCA  0E 08       	LD	C,8
 5595 BBCC  AF          UBBCC:	XOR	A
 5596 BBCD  37          UBBCD:	SCF
 5597 BBCE  1F          	RRA
 5598 BBCF  10 FC       	DJNZ	UBBCD
 5599 BBD1  41          	LD	B,C
 5600 BBD2  0F          UBBD2:	RRCA
 5601 BBD3  10 FD       	DJNZ	UBBD2
 5602 BBD5  C1          	POP	BC
 5603 BBD6  C9          	RET
 5604                   ;
 5605 BBD7  E5          UBBD7:	PUSH	HL
 5606 BBD8  B7          	OR	A
 5607 BBD9  ED 52       	SBC	HL,DE
 5608 BBDB  E1          	POP	HL
 5609 BBDC  C9          	RET
 5610                   
 5611 BBDD  00          UBBDD:	DB	0		; hier stand schon 7F7FH drin ???
 5612 BBDE  7F          	DB	7FH		; wird nur zu 7F7FH, wenn V.24-Modul vorhanden
 5613 BBDF  56 32 34 49 	DB	'V24I'
 5614 BBE3  01          	DB	1
 5615 BBE4  21 B781     	LD	HL,ARGN
 5616 BBE7  11 BD73     	LD	DE,UBD6F
 5617 BBEA  46          	LD	B,(HL)		; Anzahl Argumente
 5618 BBEB  04          	INC	B
 5619 BBEC  18 04       	JR	UBBF2
 5620                   	;
 5621 BBEE  7E          UBBEE:	LD	A,(HL)
 5622 BBEF  12          	LD	(DE),A
 5623 BBF0  13          	INC	DE
 5624 BBF1  23          	INC	HL
 5625 BBF2  23          UBBF2:	INC	HL
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  90
BAC85   Z80

 5626 BBF3  10 F9       	DJNZ	UBBEE
 5627                   ;
 5628                   ; V.24-Treiber initialisieren
 5629 BBF5  AF          UBBF5:	XOR	A
 5630 BBF6  32 BD81     	LD	(UBD7D),A
 5631 BBF9  01 0780     	LD	BC,0780H	; ab Steckplatz 7
 5632 BBFC  ED 78       UBBFC:	IN	A,(C)		; Kennbyte lesen
 5633 BBFE  FE EE       	CP	0EEH		; M003?
 5634 BC00  28 09       	JR	Z,UBC0A		; ja, V.24-Modul gefunden
 5635 BC02  04          	INC	B		; Suche vorwarts
 5636 BC03  20 F7       	JR	NZ,UBBFC	; bis B=0
 5637 BC05  3E FF       UBC04:	LD	A,0FFH
 5638 BC07  32 BD81     	LD	(UBD7D),A
 5639 BC0A  C9          	RET
 5640                   	;
 5641 BC0B  3E 7F       UBC0A:	LD	A,7FH		; Prolog
 5642 BC0D  32 BBDD     	LD	(UBBDD),A	; aktivieren
 5643 BC10  3E 01       	LD	A,1
 5644 BC12  ED 79       	OUT	(C),A		; Modul einschalten
 5645 BC14  69          	LD	L,C
 5646 BC15  26 B8       	LD	H,0B8H
 5647 BC17  77          	LD	(HL),A		; und in Modultabelle eintragen
 5648 BC18  21 BD37     	LD	HL,UBD33	; Druckerausgabe-Routine
 5649 BC1B  22 B7BE     	LD	(UOUT1+1),HL
 5650 BC1E  21 BC70     	LD	HL,UBC6C	; Hardcopy-Routine
 5651 BC21  22 B799     	LD	(HCADR),HL
 5652 BC24  01 020C     	LD	BC,020CH	; 2 Byte an Portadresse 0CH
 5653 BC27  21 BD63     	LD	HL,UBD5F	; Initialisierungsdaten
 5654 BC2A  F3          	DI
 5655 BC2B  ED B3       	OTIR			; CTC initialisieren
 5656 BC2D  01 060A     	LD	BC,060AH	; 6 Byte an Portadresse 0AH
 5657 BC30  ED B3       	OTIR			; SIO initialisieren
 5658 BC32  FB          	EI
 5659 BC33  21 BD6B     	LD	HL,UBD67	; Initialisierungsdaten Drucker
 5660 BC36  06 08       	LD	B,8
 5661 BC38  C5          UBC34:	PUSH	BC
 5662 BC39  3E 01       	LD	A,1
 5663 BC3B  CD F003     	CALL	PV1
 5664 BC3E  14          	DB	WAIT
 5665 BC3F  C1          	POP	BC
 5666 BC40  DB 0A       	IN	A,(0AH)
 5667 BC42  CB 57       	BIT	2,A
 5668 BC44  28 BF       	JR	Z,UBC04
 5669 BC46  7E          	LD	A,(HL)
 5670 BC47  D3 08       	OUT	(8),A
 5671 BC49  23          	INC	HL
 5672 BC4A  10 EC       	DJNZ	UBC34
 5673 BC4C  C3 BD3E     	JP	UBD3A
 5674                   ;
 5675 BC4F  F5          UBC4B:	PUSH	AF
 5676 BC50  DB 0A       UBC4C:	IN	A,(0AH)
 5677 BC52  CB 57       	BIT	2,A
 5678 BC54  20 10       	JR	NZ,UBC62
 5679 BC56  3A BD81     	LD	A,(UBD7D)
 5680 BC59  B7          	OR	A
 5681 BC5A  20 12       	JR	NZ,UBC6A
 5682 BC5C  C5          	PUSH	BC
 5683 BC5D  3E 01       	LD	A,1
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  91
BAC85   Z80

 5684 BC5F  CD F003     	CALL	PV1
 5685 BC62  14          	DB	WAIT
 5686 BC63  C1          	POP	BC
 5687 BC64  18 EA       	JR	UBC4C
 5688                   	;
 5689 BC66  AF          UBC62:	XOR	A
 5690 BC67  32 BD81     	LD	(UBD7D),A
 5691 BC6A  F1          	POP	AF
 5692 BC6B  D3 08       	OUT	(8),A
 5693 BC6D  C9          	RET
 5694                   	;
 5695 BC6E  F1          UBC6A:	POP	AF
 5696 BC6F  C9          	RET
 5697                   ;
 5698                   ; Hardcopy-Routine
 5699                   ;
 5700 BC70  D5          UBC6C:	PUSH	DE
 5701 BC71  CD BA00     	CALL	UBA00
 5702 BC74  3A BD73     	LD	A,(UBD6F)
 5703 BC77  47          	LD	B,A
 5704 BC78  2A BD76     	LD	HL,(UBD72)
 5705 BC7B  ED 5B BD78  	LD	DE,(UBD74)
 5706 BC7F  B7          	OR	A
 5707 BC80  ED 52       	SBC	HL,DE
 5708 BC82  23          	INC	HL
 5709 BC83  EB          	EX	DE,HL
 5710 BC84  21 0000     	LD	HL,0
 5711 BC87  19          UBC83:	ADD	HL,DE
 5712 BC88  10 FD       	DJNZ	UBC83
 5713 BC8A  22 BD7F     	LD	(UBD7B),HL
 5714 BC8D  3A BD74     	LD	A,(UBD70)
 5715 BC90  47          	LD	B,A
 5716 BC91  3A BD7B     	LD	A,(UBD77)
 5717 BC94  4F          	LD	C,A
 5718 BC95  2A BD78     UBC91:	LD	HL,(UBD74)
 5719 BC98  22 BD7C     	LD	(UBD78),HL
 5720 BC9B  DD 7E 0D    	LD	A,(IX+13)
 5721 BC9E  FE 03       	CP	3
 5722 BCA0  28 43       	JR	Z,UBCE1
 5723 BCA2  CD BD1A     	CALL	UBD16
 5724 BCA5  C5          UBCA1:	PUSH	BC
 5725 BCA6  16 08       	LD	D,8
 5726 BCA8  AF          	XOR	A
 5727 BCA9  32 BD7E     	LD	(UBD7A),A
 5728 BCAC  CD BCEB     UBCA8:	CALL	UBCE7
 5729 BCAF  08          	EX	AF,AF'
 5730 BCB0  CB 0B       	RRC	E
 5731 BCB2  17          	RLA
 5732 BCB3  08          	EX	AF,AF'
 5733 BCB4  10 05       	DJNZ	UBCB7
 5734 BCB6  3A BD74     	LD	A,(UBD70)
 5735 BCB9  47          	LD	B,A
 5736 BCBA  0C          	INC	C
 5737 BCBB  15          UBCB7:	DEC	D
 5738 BCBC  20 EE       	JR	NZ,UBCA8
 5739 BCBE  3A BD73     	LD	A,(UBD6F)
 5740 BCC1  C5          	PUSH	BC
 5741 BCC2  47          	LD	B,A
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  92
BAC85   Z80

 5742 BCC3  08          	EX	AF,AF'
 5743 BCC4  CD BC4F     UBCC0:	CALL	UBC4B
 5744 BCC7  10 FB       	DJNZ	UBCC0
 5745 BCC9  C1          	POP	BC
 5746 BCCA  D5          	PUSH	DE
 5747 BCCB  2A BD7C     	LD	HL,(UBD78)
 5748 BCCE  ED 5B BD76  	LD	DE,(UBD72)
 5749 BCD2  CD BD5D     	CALL	UBD59
 5750 BCD5  D1          	POP	DE
 5751 BCD6  28 07       	JR	Z,UBCDB
 5752 BCD8  C1          	POP	BC
 5753 BCD9  23          	INC	HL
 5754 BCDA  22 BD7C     	LD	(UBD78),HL
 5755 BCDD  18 C6       	JR	UBCA1
 5756                   	;
 5757 BCDF  E1          UBCDB:	POP	HL
 5758 BCE0  CD BD09     	CALL	UBD05
 5759 BCE3  28 B0       	JR	Z,UBC91
 5760 BCE5  D1          UBCE1:	POP	DE
 5761 BCE6  DD CB 08 86 	RES	0,(IX+8)
 5762 BCEA  C9          	RET
 5763                   ;
 5764 BCEB  D5          UBCE7:	PUSH	DE
 5765 BCEC  C5          	PUSH	BC
 5766 BCED  CD BD09     	CALL	UBD05
 5767 BCF0  20 0C       	JR	NZ,UBCFA
 5768 BCF2  2A BD7C     	LD	HL,(UBD78)
 5769 BCF5  79          	LD	A,C
 5770 BCF6  CD BBA2     	CALL	UBBA2
 5771 BCF9  04          	INC	B
 5772 BCFA  7E          	LD	A,(HL)
 5773 BCFB  17          UBCF7:	RLA
 5774 BCFC  10 FD       	DJNZ	UBCF7
 5775 BCFE  C1          UBCFA:	POP	BC
 5776 BCFF  38 04       	JR	C,UBD01
 5777 BD01  D1          	POP	DE
 5778 BD02  1E 00       	LD	E,0
 5779 BD04  C9          	RET
 5780                   	;
 5781 BD05  D1          UBD01:	POP	DE
 5782 BD06  1E FF       	LD	E,0FFH
 5783 BD08  C9          	RET
 5784                   ;
 5785 BD09  3A BD7A     UBD05:	LD	A,(UBD76)
 5786 BD0C  B9          	CP	C
 5787 BD0D  28 05       	JR	Z,UBD10
 5788 BD0F  3A BD7E     	LD	A,(UBD7A)
 5789 BD12  B7          	OR	A
 5790 BD13  C9          	RET
 5791                   	;
 5792 BD14  3E FF       UBD10:	LD	A,0FFH
 5793 BD16  32 BD7E     	LD	(UBD7A),A
 5794 BD19  C9          	RET
 5795                   ;
 5796 BD1A  CD BD3E     UBD16:	CALL	UBD3A
 5797 BD1D  3E 1B       	LD	A,ESC
 5798 BD1F  CD BC4F     	CALL	UBC4B
 5799 BD22  3E 2A       	LD	A,'*'
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  93
BAC85   Z80

 5800 BD24  CD BC4F     	CALL	UBC4B
 5801 BD27  3E 05       	LD	A,5
 5802 BD29  CD BC4F     	CALL	UBC4B
 5803 BD2C  2A BD7F     	LD	HL,(UBD7B)
 5804 BD2F  7D          	LD	A,L
 5805 BD30  CD BC4F     	CALL	UBC4B
 5806 BD33  7C          	LD	A,H
 5807 BD34  C3 BC4F     	JP	UBC4B
 5808                   ;
 5809                   ; Druckerausgabe UOT1
 5810                   ;
 5811 BD37  FE 0D       UBD33:	CP	CR
 5812 BD39  C2 BC4F     	JP	NZ,UBC4B
 5813 BD3C  18 05       	JR	UBD3F
 5814                   	;
 5815 BD3E  3E 0A       UBD3A:	LD	A,LF
 5816 BD40  CD BC4F     	CALL	UBC4B
 5817 BD43  E5          UBD3F:	PUSH	HL
 5818 BD44  F5          	PUSH	AF
 5819 BD45  C5          	PUSH	BC
 5820 BD46  3E 0D       	LD	A,0DH
 5821 BD48  CD BC4F     	CALL	UBC4B
 5822 BD4B  3A BD75     	LD	A,(UBD71)
 5823 BD4E  47          	LD	B,A
 5824 BD4F  04          	INC	B
 5825 BD50  3E 20       	LD	A,20H
 5826 BD52  18 03       	JR	UBD53
 5827                   	;
 5828 BD54  CD BC4F     UBD50:	CALL	UBC4B
 5829 BD57  10 FB       UBD53:	DJNZ	UBD50
 5830 BD59  C1          	POP	BC
 5831 BD5A  F1          	POP	AF
 5832 BD5B  E1          	POP	HL
 5833 BD5C  C9          	RET
 5834                   ;
 5835 BD5D  E5          UBD59:	PUSH	HL
 5836 BD5E  B7          	OR	A
 5837 BD5F  ED 52       	SBC	HL,DE
 5838 BD61  E1          	POP	HL
 5839 BD62  C9          	RET
 5840                   ;
 5841                   ; Initialisierungsdaten CTC, SIO
 5842                   ;
 5843 BD63  47          UBD5F:	DB	47H		; CTC Steuerbyte
 5844 BD64  5B          	DB	5BH		; CTC Zeitkonstante
 5845 BD65  04 04       	DB	04H,04H		; SIO WR4
 5846 BD67  03 20       	DB	03H,20H		; SIO WR3
 5847 BD69  05 6A       	DB	05H,6AH		; SIO WR5
 5848                   ;
 5849                   ; Initialisierungsdaten Drucker
 5850                   ;
 5851 BD6B  1B 40       UBD67:	DB	ESC,'@'		; Drucker initialisieren
 5852 BD6D  1B 52 00    	DB	ESC,'R',0	; Zeichensatz USA
 5853 BD70  1B 41 08    	DB	ESC,'A',8	; Zeilenabstand 8/72 Zoll
 5854                   
 5855 BD73  01          UBD6F:	DB	1
 5856 BD74  01          UBD70:	DB	1
 5857 BD75  0A          UBD71:	DB	10
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  94
BAC85   Z80

 5858 BD76  F0          UBD72:	DB	0F0H
 5859 BD77  00          	DB	0
 5860 BD78  50          UBD74:	DB	50H
 5861 BD79  00          	DB	0
 5862 BD7A  C0          UBD76:	DB	0C0H
 5863 BD7B  40          UBD77:	DB	40H
 5864 BD7C              UBD78:
 5865         BD7E      UBD7A	EQU	$+2
 5866         BD7F      UBD7B	EQU	$+3
 5867         BD81      UBD7D	EQU	$+5
 5868                   	.dephase	; Ende des V.24-Treibers
 5869                   
 5870 2507  1D          U256B:	DB	1DH	; Autostart BASIC-Programm
 0 Error(s) Detected.
 8457 Absolute Bytes. 675 Symbols Detected.
      ;
 5851 BD6B  1B 40       UBD67:	DB	ESC,'@'		; Drucker initialis